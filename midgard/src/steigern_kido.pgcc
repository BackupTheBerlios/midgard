#include "midgard_CG.hh"
#include <Aux/Transaction.h>
#include <Aux/SQLerror.h>
exec sql include sqlca;
#include <cstring>
#include <Gtk_OStream.h>
//#include "zufall.h"
#include <strstream>
#include "WindowInfo.hh"

void midgard_CG::on_kido_laden_clicked()
{   
 midgard_CG::on_speichern_clicked();
 midgard_CG::show_alte_kido();
 midgard_CG::show_neue_kido();
}


void midgard_CG::show_alte_kido()
{
   steigern_kido_clist_alt->clear();
   Gtk::OStream os(steigern_kido_clist_alt);
   for (vector<st_kido>::iterator i=vec_kido.begin(); i!=vec_kido.end();++i)
      {
//         double fac = midgard_CG::get_standard_kido(typ.s,i->name);
         os << i->technik<<"\t"<<i->stil<<"\n";
      }
   for (unsigned int i=0;i<steigern_kido_clist_alt->columns().size();++i)
      steigern_kido_clist_alt->set_column_auto_resize(i,true);
   steigern_kido_clist_alt->set_reorderable(true);
}


void midgard_CG::show_neue_kido()
{
  steigern_kido_clist_neu->clear();
/*
  exec sql begin declare section;
   char db_typ[5];
   char db_name[100];
   int db_kosten;
   char db_stufe[10];
   char db_spruchrolle[10];
   char db_standard[20];
   char query[1000];
   char db_region[10];
  exec sql end declare section;
  strncpy(db_typ,typ.s.c_str(),sizeof(db_typ));
  snprintf(query,sizeof(query),"SELECT name, kosten, stufe, %s, spruchrolle, coalesce(region,'') \
FROM arkanum_kido WHERE (%s = 'G' OR %s = 'S' OR %s = 'A') \
AND name NOT IN (SELECT fertigkeit FROM charaktere_fertigkeiten \
WHERE charakter_name = '%s' AND version = '%s') ORDER BY stufe,name "
            ,db_typ,db_typ,db_typ,db_typ,werte.name_charakter.c_str(),werte.version.c_str());

   Transaction tr;
   exec sql prepare kido_ein_ from :query ;
   exec sql declare kido_ein cursor for kido_ein_ ;

   exec sql open kido_ein;
   SQLerror::test(__FILELINE__);
   Gtk::OStream os(steigern_kido_clist_neu);
   while (true)
      {
         exec sql fetch kido_ein into :db_name, :db_kosten, :db_stufe, 
            :db_standard, :db_spruchrolle, :db_region ;
         SQLerror::test(__FILELINE__,100);  
         if (sqlca.sqlcode) break;
         double fac = midgard_CG::get_standard_kido(typ.s,db_name);

         if (midgard_CG::region_check(db_region))
          {
            if (!spruchrolle->get_active())
               os << db_stufe <<"\t"<< db_name <<"\t"<<db_kosten*fac<<"\t"<<db_standard<<"\n";
            else
               if (strcmp(db_spruchrolle,"nicht"))
                  os << db_stufe <<"\t"<< db_name <<"\t"<<db_kosten*fac/10<<"\t"<<db_standard<<"\n";
          }
      }
   exec sql close kido_ein;

   for (unsigned int i=0;i<steigern_kido_clist_neu->columns().size();++i)
      steigern_kido_clist_neu->set_column_auto_resize(i,true);
   steigern_kido_clist_neu->set_reorderable(true);
   tr.commit();
*/
}


void midgard_CG::on_steigern_kido_clist_alt_select_row(gint row, gint column, GdkEvent *event)
{   
/*
   string alt_kido = steigern_kido_clist_alt->get_text(row,0);
   int alt_kosten = atoi(steigern_kido_clist_alt->get_text(row,1).c_str());
   werte.gfp -= alt_kosten;
   for (vector<st_kido>::iterator i=kido.begin();
            i!= kido.end();++i) 
      if (i->name==alt_kido) {kido.erase(i);break;}
*/
   midgard_CG::zeige_werte(werte,"alle");
   midgard_CG::show_kido();
   midgard_CG::on_speichern_clicked();
   midgard_CG::show_alte_kido();
   midgard_CG::show_neue_kido();
}

void midgard_CG::on_steigern_kido_clist_neu_select_row(gint row, gint column, GdkEvent *event)
{   
/*
  int new_kosten = atoi(steigern_kido_clist_neu->get_text(row,2).c_str());
  string new_kido = steigern_kido_clist_neu->get_text(row,1);
  string erf = midgard_CG::get_erfolgswert_kidon(typ,new_kido);
  string stufe= steigern_kido_clist_neu->get_text(row,0);
  string art =steigern_kido_clist_neu->get_text(row,3);
  
  werte.gfp += new_kosten;
  kido.push_back(st_kido("0",new_kido,erf,"0","0","0","0","0","0","0","0","0","0","0","0","0",0));
*/
  midgard_CG::show_kido();
  midgard_CG::on_speichern_clicked();
  midgard_CG::zeige_werte(werte,"alle");
  midgard_CG::show_alte_kido();
  midgard_CG::show_neue_kido();
}

