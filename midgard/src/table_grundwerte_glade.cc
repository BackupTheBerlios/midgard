// generated 2004/11/30 18:19:29 CET by christof@puck.petig-baender.de
// using glademm V2.6.0_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- --image-provider=MagusImage --gtkmmversion 2.4.0 midgard.glade
// for gtk 2.4.13 and gtkmm 2.4.0
//
// Please modify the corresponding derived classes in ./src/table_grundwerte.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "table_grundwerte_glade.hh"
#include <gtkmm/label.h>
#include <gtkmm/frame.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/entry.h>
#include <gtkmm/treeview.h>
#include <gtkmm/eventbox.h>
#include <gtkmm/table.h>
#include <gtkmm/separator.h>
#include <gtkmm/image.h>

extern Glib::RefPtr<Gdk::Pixbuf> MagusImage(const std::string &name);

#include <gtkmm/box.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <gtkmm/toolitem.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#endif //
#include <gtkmm/toolbar.h>

table_grundwerte_glade::table_grundwerte_glade(GlademmData *gmm_data
) : Gtk::Table(2, 2, false)
{  table_grundwerte = this;
   entry_nameC = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label613 = Gtk::manage(new class Gtk::Label("Name des Abenteurers"));
   Gtk::Frame *frame30 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_ap_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 10, 10));
   spinbutton_ap = Gtk::manage(new class Gtk::SpinButton(*spinbutton_ap_adj, 1, 0));
   
   Gtk::Label *label614 = Gtk::manage(new class Gtk::Label("AP"));
   Gtk::Frame *frame11 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_lp_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 10, 10));
   spinbutton_lp = Gtk::manage(new class Gtk::SpinButton(*spinbutton_lp_adj, 1, 0));
   
   Gtk::Label *label615 = Gtk::manage(new class Gtk::Label("LP"));
   Gtk::Frame *frame10 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_grad_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 10, 10));
   spinbutton_grad = Gtk::manage(new class Gtk::SpinButton(*spinbutton_grad_adj, 1, 0));
   
   Gtk::Label *label616 = Gtk::manage(new class Gtk::Label("Grad"));
   Gtk::Frame *frame18 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_alter_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 10000, 1, 10, 10));
   spinbutton_alter = Gtk::manage(new class Gtk::SpinButton(*spinbutton_alter_adj, 1, 0));
   
   Gtk::Label *label617 = Gtk::manage(new class Gtk::Label("Alter"));
   Gtk::Frame *frame14 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_Cgewicht_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 50000, 1, 10, 10));
   spinbutton_Cgewicht = Gtk::manage(new class Gtk::SpinButton(*spinbutton_Cgewicht_adj, 1, 0));
   
   Gtk::Label *label618 = Gtk::manage(new class Gtk::Label("Gewicht (kg)"));
   Gtk::Frame *frame16 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_groesse_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 1000, 1, 10, 10));
   spinbutton_groesse = Gtk::manage(new class Gtk::SpinButton(*spinbutton_groesse_adj, 1, 0));
   
   Gtk::Label *label619 = Gtk::manage(new class Gtk::Label("Größe (cm)"));
   Gtk::Frame *frame17 = Gtk::manage(new class Gtk::Frame());
   entry_nameS = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label620 = Gtk::manage(new class Gtk::Label("Name des Spielers"));
   Gtk::Frame *frame31 = Gtk::manage(new class Gtk::Frame());
   entry_version = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label621 = Gtk::manage(new class Gtk::Label("Version"));
   Gtk::Frame *frame92 = Gtk::manage(new class Gtk::Frame());
   entry_herkunft = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label622 = Gtk::manage(new class Gtk::Label("Herkunft"));
   Gtk::Frame *frame21 = Gtk::manage(new class Gtk::Frame());
   combo_stand = Gtk::manage(new class Gtk::Combo());
   
   Gtk::Label *label623 = Gtk::manage(new class Gtk::Label("Stand"));
   Gtk::Frame *frame20 = Gtk::manage(new class Gtk::Frame());
   entry_glaube = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label624 = Gtk::manage(new class Gtk::Label("Glaube"));
   Gtk::Frame *frame22 = Gtk::manage(new class Gtk::Frame());
   entry_spezialisierung = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label625 = Gtk::manage(new class Gtk::Label("Spezialisierung"));
   Gtk::Frame *frame23 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_tage_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 10000, 1, 10, 10));
   spinbutton_tage = Gtk::manage(new class Gtk::SpinButton(*spinbutton_tage_adj, 1, 1));
   
   Gtk::Label *label626 = Gtk::manage(new class Gtk::Label("Tage"));
   Gtk::Frame *frame93 = Gtk::manage(new class Gtk::Frame());
   Gtk::EventBox *eventbox11 = Gtk::manage(new class Gtk::EventBox());
   Gtk::Adjustment *spinbutton_gg_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 10, 10));
   spinbutton_gg = Gtk::manage(new class Gtk::SpinButton(*spinbutton_gg_adj, 1, 0));
   
   Gtk::Label *label627 = Gtk::manage(new class Gtk::Label("GG"));
   Gtk::Frame *frame95 = Gtk::manage(new class Gtk::Frame());
   Gtk::EventBox *eventbox12 = Gtk::manage(new class Gtk::EventBox());
   Gtk::Adjustment *spinbutton_sg_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 10, 10));
   spinbutton_sg = Gtk::manage(new class Gtk::SpinButton(*spinbutton_sg_adj, 1, 0));
   
   Gtk::Label *label628 = Gtk::manage(new class Gtk::Label("SG"));
   Gtk::Frame *frame96 = Gtk::manage(new class Gtk::Frame());
   Gtk::EventBox *eventbox13 = Gtk::manage(new class Gtk::EventBox());
   Gtk::Adjustment *spinbutton_gfp_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 1e+06, 1, 10, 10));
   spinbutton_gfp = Gtk::manage(new class Gtk::SpinButton(*spinbutton_gfp_adj, 1, 0));
   
   Gtk::Label *label629 = Gtk::manage(new class Gtk::Label("GFP"));
   Gtk::Frame *frame97 = Gtk::manage(new class Gtk::Frame());
   Gtk::EventBox *eventbox14 = Gtk::manage(new class Gtk::EventBox());
   combo_hand = Gtk::manage(new class Gtk::Combo());
   
   Gtk::Label *label630 = Gtk::manage(new class Gtk::Label("Hand"));
   Gtk::Frame *frame98 = Gtk::manage(new class Gtk::Frame());
   entry_bezeichnung = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label631 = Gtk::manage(new class Gtk::Label("Bezeichnung"));
   Gtk::Frame *frame104 = Gtk::manage(new class Gtk::Frame());
   entry_merkmale = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label632 = Gtk::manage(new class Gtk::Label("Weitere Merkmale"));
   Gtk::Frame *frame105 = Gtk::manage(new class Gtk::Frame());
   Gtk::Table *table67 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::HSeparator *hseparator20 = Gtk::manage(new class Gtk::HSeparator());
   resistenz = Gtk::manage(new class Gtk::Label("X"));
   gift_wert = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Label *label199 = Gtk::manage(new class Gtk::Label("Abwehr"));
   abwehr_wert = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Label *label200 = Gtk::manage(new class Gtk::Label("Zaubern"));
   zaubern_wert = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Label *label274 = Gtk::manage(new class Gtk::Label("Gift"));
   Gtk::Label *label275 = Gtk::manage(new class Gtk::Label("Resistenz"));
   Gtk::Image *pixmap115 = Gtk::manage(new class Gtk::Image(MagusImage("Excl-32.xpm")));
   Gtk::Label *label543 = Gtk::manage(new class Gtk::Label("Werte für\n"
		"Grad 1\n"
		"setzen"));
   Gtk::HBox *hbox57 = Gtk::manage(new class Gtk::HBox(false, 0));
   button_grda1setzen = Gtk::manage(new class Gtk::Button());
   
   Gtk::Table *table30 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label607 = Gtk::manage(new class Gtk::Label("Erfolgswerte"));
   Gtk::Frame *frame57 = Gtk::manage(new class Gtk::Frame());
   Gtk::Label *label181 = Gtk::manage(new class Gtk::Label("Ausdauer"));
   Gtk::Label *label182 = Gtk::manage(new class Gtk::Label("Schaden"));
   bo_sc = Gtk::manage(new class Gtk::Label("X"));
   bo_an = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Label *label184 = Gtk::manage(new class Gtk::Label("Abwehr"));
   bo_ab = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Label *label185 = Gtk::manage(new class Gtk::Label("Zauber"));
   bo_za = Gtk::manage(new class Gtk::Label("X"));
   bo_au = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Label *label183 = Gtk::manage(new class Gtk::Label("Angriff"));
   Gtk::Label *label186 = Gtk::manage(new class Gtk::Label("Geistesmagie"));
   Gtk::Label *label187 = Gtk::manage(new class Gtk::Label("Körpermagie"));
   Gtk::Label *label188 = Gtk::manage(new class Gtk::Label("Umgebungsmagie"));
   bo_psy = Gtk::manage(new class Gtk::Label("X"));
   bo_phs = Gtk::manage(new class Gtk::Label("X"));
   bo_phk = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::VSeparator *vseparator15 = Gtk::manage(new class Gtk::VSeparator());
   Gtk::Table *table29 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label608 = Gtk::manage(new class Gtk::Label("persönliche Boni für"));
   Gtk::Frame *frame56 = Gtk::manage(new class Gtk::Frame());
   Gtk::Label *label___ = Gtk::manage(new class Gtk::Label("Wk"));
   label_gestalt = Gtk::manage(new class Gtk::Label(""));
   
   Gtk::Label *label610 = Gtk::manage(new class Gtk::Label("Gestalt"));
   Gtk::Frame *frame15 = Gtk::manage(new class Gtk::Frame());
   Gtk::Label *label204 = Gtk::manage(new class Gtk::Label("Au"));
   Gtk::Label *label205 = Gtk::manage(new class Gtk::Label("pA"));
   Gtk::Label *label206 = Gtk::manage(new class Gtk::Label("Sb"));
   Gtk::Label *label25 = Gtk::manage(new class Gtk::Label("B"));
   Gtk::Label *label26 = Gtk::manage(new class Gtk::Label("KAW"));
   Gtk::Label *label27 = Gtk::manage(new class Gtk::Label("WLW"));
   kaw = Gtk::manage(new class Gtk::Label("X"));
   wlw = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Adjustment *spinbutton_b_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 10, 10));
   spinbutton_b = Gtk::manage(new class Gtk::SpinButton(*spinbutton_b_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_au_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_au = Gtk::manage(new class Gtk::SpinButton(*spinbutton_au_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_pa_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_pa = Gtk::manage(new class Gtk::SpinButton(*spinbutton_pa_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_sb_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_sb = Gtk::manage(new class Gtk::SpinButton(*spinbutton_sb_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_wk_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_wk = Gtk::manage(new class Gtk::SpinButton(*spinbutton_wk_adj, 1, 0));
   
   Gtk::VSeparator *vseparator14 = Gtk::manage(new class Gtk::VSeparator());
   Gtk::Table *table27 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label609 = Gtk::manage(new class Gtk::Label("Abgeleitete Werte"));
   Gtk::Frame *frame55 = Gtk::manage(new class Gtk::Frame());
   Gtk::Label *label18 = Gtk::manage(new class Gtk::Label("Zt"));
   Gtk::Label *label6 = Gtk::manage(new class Gtk::Label("Ko"));
   Gtk::Label *label7 = Gtk::manage(new class Gtk::Label("In"));
   Gtk::Label *label4 = Gtk::manage(new class Gtk::Label("St"));
   Gtk::Label *lable5 = Gtk::manage(new class Gtk::Label("Gs"));
   Gtk::Label *label439 = Gtk::manage(new class Gtk::Label("Gw"));
   Gtk::Adjustment *spinbutton_st_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_st = Gtk::manage(new class Gtk::SpinButton(*spinbutton_st_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_gs_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_gs = Gtk::manage(new class Gtk::SpinButton(*spinbutton_gs_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_gw_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_gw = Gtk::manage(new class Gtk::SpinButton(*spinbutton_gw_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_ko_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_ko = Gtk::manage(new class Gtk::SpinButton(*spinbutton_ko_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_in_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_in = Gtk::manage(new class Gtk::SpinButton(*spinbutton_in_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_zt_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 200, 1, 10, 10));
   spinbutton_zt = Gtk::manage(new class Gtk::SpinButton(*spinbutton_zt_adj, 1, 0));
   
   Gtk::Table *table26 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label611 = Gtk::manage(new class Gtk::Label("Eigenschaften"));
   Gtk::Frame *frame54 = Gtk::manage(new class Gtk::Frame());
   label_hoeren = Gtk::manage(new class Gtk::Label("X"));
   label_schmecken = Gtk::manage(new class Gtk::Label("X"));
   label_tasten = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Label *label493 = Gtk::manage(new class Gtk::Label("Schmecken"));
   Gtk::Label *label494 = Gtk::manage(new class Gtk::Label("Tasten"));
   Gtk::Label *label495 = Gtk::manage(new class Gtk::Label("Sehen"));
   Gtk::Label *label496 = Gtk::manage(new class Gtk::Label("Hören"));
   label_sehen = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Label *label498 = Gtk::manage(new class Gtk::Label("Riechen"));
   label_riechen = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Label *label488 = Gtk::manage(new class Gtk::Label("Sechster Sinn"));
   label_sechster_sinn = Gtk::manage(new class Gtk::Label("X"));
   
   Gtk::Table *table98 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label612 = Gtk::manage(new class Gtk::Label("Sinne"));
   Gtk::Frame *frame84 = Gtk::manage(new class Gtk::Frame());
   Gtk::Table *table68 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label633 = Gtk::manage(new class Gtk::Label("Würfelvariante"));
   frame_wuerfelvariante = Gtk::manage(new class Gtk::Frame());
   
   Gtk::HSeparator *hseparator1 = Gtk::manage(new class Gtk::HSeparator());
   combo_spezies = Gtk::manage(new class Gtk::Combo());
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   
   Gtk::ToolItem *toolitem6 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   button_grundwerte = new class ChoiceButton();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   
   Gtk::ToolItem *toolitem15 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   button_geschlecht = new class ChoiceButton();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   
   Gtk::ToolItem *toolitem8 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   combo_typ = Gtk::manage(new class Gtk::Combo());
   combo_typ2 = Gtk::manage(new class Gtk::Combo());
   
   Gtk::VBox *vbox46 = Gtk::manage(new class Gtk::VBox(false, 5));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   Gtk::ToolItem *toolitem9 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   button_stadt_land = new class ChoiceButton();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   
   Gtk::ToolItem *toolitem10 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   Gtk::Image *button_abg_werte_img = Gtk::manage(new class Gtk::Image(MagusImage("Dices2-trans-50.xpm")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   button_abg_werte = Gtk::manage(new class Gtk::ToolButton(*button_abg_werte_img, "Abgeleitete\n"
		"Werte"));
#endif //
   eventbox_werte_edit = Gtk::manage(new class Gtk::HBox(false, 0));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   
   Gtk::ToolItem *eventbox_werte_edit_dummy = Gtk::manage(new class Gtk::ToolItem());
#endif //
   Gtk::Toolbar *toolbar2 = Gtk::manage(new class Gtk::Toolbar());
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar2->append(*toolitem6);
#else //
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::Element(*combo_spezies));
   
   Gtk::Widget *toolitem6 = toolbar2->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar2->append(*toolitem15);
#else //
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::Element(*button_grundwerte));
   
   Gtk::Widget *toolitem15 = toolbar2->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar2->append(*toolitem8);
#else //
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::Element(*button_geschlecht));
   
   Gtk::Widget *toolitem8 = toolbar2->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar2->append(*toolitem9);
#else //
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::Element(*vbox46));
   
   Gtk::Widget *toolitem9 = toolbar2->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar2->append(*toolitem10);
#else //
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::Element(*button_stadt_land));
   
   Gtk::Widget *toolitem10 = toolbar2->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar2->append(*button_abg_werte);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Abgeleitete\n"
		"Werte", *button_abg_werte_img, Gtk::Toolbar_Helpers::Callback0()));
   button_abg_werte = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar2->append(*eventbox_werte_edit_dummy);
#else //
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::Element(*eventbox_werte_edit));
   
   Gtk::Widget *eventbox_werte_edit_dummy = toolbar2->tools().back().get_widget();
#endif //
   entry_nameC->set_flags(Gtk::CAN_FOCUS);
   entry_nameC->set_visibility(true);
   entry_nameC->set_editable(true);
   entry_nameC->set_max_length(0);
   entry_nameC->set_text("");
   entry_nameC->set_has_frame(true);
   entry_nameC->set_activates_default(false);
   label613->set_alignment(0.5,0.5);
   label613->set_padding(0,0);
   label613->set_justify(Gtk::JUSTIFY_LEFT);
   label613->set_line_wrap(false);
   label613->set_use_markup(false);
   label613->set_selectable(false);
   frame30->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame30->set_label_align(0,0.5);
   frame30->add(*entry_nameC);
   frame30->set_label_widget(*label613);
   spinbutton_ap->set_flags(Gtk::CAN_FOCUS);
   spinbutton_ap->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_ap->set_numeric(false);
   spinbutton_ap->set_digits(0);
   spinbutton_ap->set_wrap(false);
   label614->set_alignment(0.5,0.5);
   label614->set_padding(0,0);
   label614->set_justify(Gtk::JUSTIFY_LEFT);
   label614->set_line_wrap(false);
   label614->set_use_markup(false);
   label614->set_selectable(false);
   frame11->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame11->set_label_align(0,0.5);
   frame11->add(*spinbutton_ap);
   frame11->set_label_widget(*label614);
   spinbutton_lp->set_flags(Gtk::CAN_FOCUS);
   spinbutton_lp->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_lp->set_numeric(false);
   spinbutton_lp->set_digits(0);
   spinbutton_lp->set_wrap(false);
   label615->set_alignment(0.5,0.5);
   label615->set_padding(0,0);
   label615->set_justify(Gtk::JUSTIFY_LEFT);
   label615->set_line_wrap(false);
   label615->set_use_markup(false);
   label615->set_selectable(false);
   frame10->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame10->set_label_align(0,0.5);
   frame10->add(*spinbutton_lp);
   frame10->set_label_widget(*label615);
   spinbutton_grad->set_flags(Gtk::CAN_FOCUS);
   spinbutton_grad->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_grad->set_numeric(false);
   spinbutton_grad->set_digits(0);
   spinbutton_grad->set_wrap(false);
   label616->set_alignment(0.5,0.5);
   label616->set_padding(0,0);
   label616->set_justify(Gtk::JUSTIFY_LEFT);
   label616->set_line_wrap(false);
   label616->set_use_markup(false);
   label616->set_selectable(false);
   frame18->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame18->set_label_align(0,0.5);
   frame18->add(*spinbutton_grad);
   frame18->set_label_widget(*label616);
   spinbutton_alter->set_flags(Gtk::CAN_FOCUS);
   spinbutton_alter->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_alter->set_numeric(false);
   spinbutton_alter->set_digits(0);
   spinbutton_alter->set_wrap(false);
   label617->set_alignment(0.5,0.5);
   label617->set_padding(0,0);
   label617->set_justify(Gtk::JUSTIFY_LEFT);
   label617->set_line_wrap(false);
   label617->set_use_markup(false);
   label617->set_selectable(false);
   frame14->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame14->set_label_align(0,0.5);
   frame14->add(*spinbutton_alter);
   frame14->set_label_widget(*label617);
   spinbutton_Cgewicht->set_flags(Gtk::CAN_FOCUS);
   spinbutton_Cgewicht->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_Cgewicht->set_numeric(false);
   spinbutton_Cgewicht->set_digits(0);
   spinbutton_Cgewicht->set_wrap(false);
   label618->set_alignment(0.5,0.5);
   label618->set_padding(0,0);
   label618->set_justify(Gtk::JUSTIFY_LEFT);
   label618->set_line_wrap(false);
   label618->set_use_markup(false);
   label618->set_selectable(false);
   frame16->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame16->set_label_align(0,0.5);
   frame16->add(*spinbutton_Cgewicht);
   frame16->set_label_widget(*label618);
   spinbutton_groesse->set_flags(Gtk::CAN_FOCUS);
   spinbutton_groesse->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_groesse->set_numeric(false);
   spinbutton_groesse->set_digits(0);
   spinbutton_groesse->set_wrap(false);
   label619->set_alignment(0.5,0.5);
   label619->set_padding(0,0);
   label619->set_justify(Gtk::JUSTIFY_LEFT);
   label619->set_line_wrap(false);
   label619->set_use_markup(false);
   label619->set_selectable(false);
   frame17->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame17->set_label_align(0,0.5);
   frame17->add(*spinbutton_groesse);
   frame17->set_label_widget(*label619);
   entry_nameS->set_flags(Gtk::CAN_FOCUS);
   entry_nameS->set_visibility(true);
   entry_nameS->set_editable(true);
   entry_nameS->set_max_length(0);
   entry_nameS->set_text("");
   entry_nameS->set_has_frame(true);
   entry_nameS->set_activates_default(false);
   label620->set_alignment(0.5,0.5);
   label620->set_padding(0,0);
   label620->set_justify(Gtk::JUSTIFY_LEFT);
   label620->set_line_wrap(false);
   label620->set_use_markup(false);
   label620->set_selectable(false);
   frame31->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame31->set_label_align(0,0.5);
   frame31->add(*entry_nameS);
   frame31->set_label_widget(*label620);
   entry_version->set_flags(Gtk::CAN_FOCUS);
   entry_version->set_visibility(true);
   entry_version->set_editable(true);
   entry_version->set_max_length(0);
   entry_version->set_text("");
   entry_version->set_has_frame(true);
   entry_version->set_activates_default(false);
   label621->set_alignment(0.5,0.5);
   label621->set_padding(0,0);
   label621->set_justify(Gtk::JUSTIFY_LEFT);
   label621->set_line_wrap(false);
   label621->set_use_markup(false);
   label621->set_selectable(false);
   frame92->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame92->set_label_align(0,0.5);
   frame92->add(*entry_version);
   frame92->set_label_widget(*label621);
   entry_herkunft->set_flags(Gtk::CAN_FOCUS);
   entry_herkunft->set_visibility(true);
   entry_herkunft->set_editable(true);
   entry_herkunft->set_max_length(0);
   entry_herkunft->set_text("");
   entry_herkunft->set_has_frame(true);
   entry_herkunft->set_activates_default(false);
   label622->set_alignment(0.5,0.5);
   label622->set_padding(0,0);
   label622->set_justify(Gtk::JUSTIFY_LEFT);
   label622->set_line_wrap(false);
   label622->set_use_markup(false);
   label622->set_selectable(false);
   frame21->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame21->set_label_align(0,0.5);
   frame21->add(*entry_herkunft);
   frame21->set_label_widget(*label622);
   combo_stand->get_entry()->set_flags(Gtk::CAN_FOCUS);
   combo_stand->get_entry()->set_visibility(true);
   combo_stand->get_entry()->set_editable(true);
   combo_stand->get_entry()->set_max_length(0);
   combo_stand->get_entry()->set_text("");
   combo_stand->get_entry()->set_has_frame(true);
   combo_stand->get_entry()->set_activates_default(false);
   combo_stand->set_case_sensitive(false);
   {  
      
      const char * const items[] = { "", 0 };
      combo_stand->set_popdown_strings(items);
   }
   combo_stand->get_entry()->set_text("");
   label623->set_alignment(0.5,0.5);
   label623->set_padding(0,0);
   label623->set_justify(Gtk::JUSTIFY_LEFT);
   label623->set_line_wrap(false);
   label623->set_use_markup(false);
   label623->set_selectable(false);
   frame20->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame20->set_label_align(0,0.5);
   frame20->add(*combo_stand);
   frame20->set_label_widget(*label623);
   entry_glaube->set_flags(Gtk::CAN_FOCUS);
   entry_glaube->set_visibility(true);
   entry_glaube->set_editable(true);
   entry_glaube->set_max_length(0);
   entry_glaube->set_text("");
   entry_glaube->set_has_frame(true);
   entry_glaube->set_activates_default(false);
   label624->set_alignment(0.5,0.5);
   label624->set_padding(0,0);
   label624->set_justify(Gtk::JUSTIFY_LEFT);
   label624->set_line_wrap(false);
   label624->set_use_markup(false);
   label624->set_selectable(false);
   frame22->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame22->set_label_align(0,0.5);
   frame22->add(*entry_glaube);
   frame22->set_label_widget(*label624);
   entry_spezialisierung->set_flags(Gtk::CAN_FOCUS);
   entry_spezialisierung->set_visibility(true);
   entry_spezialisierung->set_editable(true);
   entry_spezialisierung->set_max_length(0);
   entry_spezialisierung->set_text("");
   entry_spezialisierung->set_has_frame(true);
   entry_spezialisierung->set_activates_default(false);
   label625->set_alignment(0.5,0.5);
   label625->set_padding(0,0);
   label625->set_justify(Gtk::JUSTIFY_LEFT);
   label625->set_line_wrap(false);
   label625->set_use_markup(false);
   label625->set_selectable(false);
   frame23->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame23->set_label_align(0,0.5);
   frame23->add(*entry_spezialisierung);
   frame23->set_label_widget(*label625);
   spinbutton_tage->set_flags(Gtk::CAN_FOCUS);
   spinbutton_tage->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_tage->set_numeric(false);
   spinbutton_tage->set_digits(1);
   spinbutton_tage->set_wrap(false);
   label626->set_alignment(0.5,0.5);
   label626->set_padding(0,0);
   label626->set_justify(Gtk::JUSTIFY_LEFT);
   label626->set_line_wrap(false);
   label626->set_use_markup(false);
   label626->set_selectable(false);
   frame93->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame93->set_label_align(0,0.5);
   frame93->add(*spinbutton_tage);
   frame93->set_label_widget(*label626);
   _tooltips.set_tip(*eventbox11, "Tage, die durch steigern/neulernen verstrichen sind und noch nicht dem Alter hinzuaddiert wurden.", "");
   eventbox11->add(*frame93);
   spinbutton_gg->set_flags(Gtk::CAN_FOCUS);
   spinbutton_gg->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_gg->set_numeric(false);
   spinbutton_gg->set_digits(0);
   spinbutton_gg->set_wrap(false);
   label627->set_alignment(0.5,0.5);
   label627->set_padding(0,0);
   label627->set_justify(Gtk::JUSTIFY_LEFT);
   label627->set_line_wrap(false);
   label627->set_use_markup(false);
   label627->set_selectable(false);
   frame95->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame95->set_label_align(0,0.5);
   frame95->add(*spinbutton_gg);
   frame95->set_label_widget(*label627);
   _tooltips.set_tip(*eventbox12, "Göttliche Gnade", "");
   eventbox12->add(*frame95);
   spinbutton_sg->set_flags(Gtk::CAN_FOCUS);
   spinbutton_sg->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_sg->set_numeric(false);
   spinbutton_sg->set_digits(0);
   spinbutton_sg->set_wrap(false);
   label628->set_alignment(0.5,0.5);
   label628->set_padding(0,0);
   label628->set_justify(Gtk::JUSTIFY_LEFT);
   label628->set_line_wrap(false);
   label628->set_use_markup(false);
   label628->set_selectable(false);
   frame96->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame96->set_label_align(0,0.5);
   frame96->add(*spinbutton_sg);
   frame96->set_label_widget(*label628);
   _tooltips.set_tip(*eventbox13, "Schicksalsgunst", "");
   eventbox13->add(*frame96);
   spinbutton_gfp->set_flags(Gtk::CAN_FOCUS);
   spinbutton_gfp->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_gfp->set_numeric(false);
   spinbutton_gfp->set_digits(0);
   spinbutton_gfp->set_wrap(false);
   label629->set_alignment(0.5,0.5);
   label629->set_padding(0,0);
   label629->set_justify(Gtk::JUSTIFY_LEFT);
   label629->set_line_wrap(false);
   label629->set_use_markup(false);
   label629->set_selectable(false);
   frame97->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame97->set_label_align(0,0.5);
   frame97->add(*spinbutton_gfp);
   frame97->set_label_widget(*label629);
   _tooltips.set_tip(*eventbox14, "GesamtFertigkeitsPunkte", "");
   eventbox14->add(*frame97);
   combo_hand->get_entry()->set_flags(Gtk::CAN_FOCUS);
   combo_hand->get_entry()->set_visibility(true);
   combo_hand->get_entry()->set_editable(true);
   combo_hand->get_entry()->set_max_length(0);
   combo_hand->get_entry()->set_text("");
   combo_hand->get_entry()->set_has_frame(true);
   combo_hand->get_entry()->set_activates_default(false);
   combo_hand->set_case_sensitive(false);
   {  
      
      const char * const items[] = { "", 0 };
      combo_hand->set_popdown_strings(items);
   }
   combo_hand->get_entry()->set_text("");
   label630->set_alignment(0.5,0.5);
   label630->set_padding(0,0);
   label630->set_justify(Gtk::JUSTIFY_LEFT);
   label630->set_line_wrap(false);
   label630->set_use_markup(false);
   label630->set_selectable(false);
   frame98->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame98->set_label_align(0,0.5);
   frame98->add(*combo_hand);
   frame98->set_label_widget(*label630);
   entry_bezeichnung->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*entry_bezeichnung, "Hier kann eine optionale Bezeichnung der Klasse eingegeben werden, die dann auf dem Ausdruck erscheint. (Bsp.: Samurai, Derwisch)", "");
   entry_bezeichnung->set_visibility(true);
   entry_bezeichnung->set_editable(true);
   entry_bezeichnung->set_max_length(0);
   entry_bezeichnung->set_text("");
   entry_bezeichnung->set_has_frame(true);
   entry_bezeichnung->set_activates_default(false);
   label631->set_alignment(0.5,0.5);
   label631->set_padding(0,0);
   label631->set_justify(Gtk::JUSTIFY_LEFT);
   label631->set_line_wrap(false);
   label631->set_use_markup(false);
   label631->set_selectable(false);
   frame104->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame104->set_label_align(0,0.5);
   frame104->add(*entry_bezeichnung);
   frame104->set_label_widget(*label631);
   entry_merkmale->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*entry_merkmale, "Hier kann eine optionale Bezeichnung der Klasse eingegeben werden, die dann auf dem Ausdruck erscheint. (Bsp.: Samurai, Derwisch)", "");
   entry_merkmale->set_visibility(true);
   entry_merkmale->set_editable(true);
   entry_merkmale->set_max_length(0);
   entry_merkmale->set_text("");
   entry_merkmale->set_has_frame(true);
   entry_merkmale->set_activates_default(false);
   label632->set_alignment(0.5,0.5);
   label632->set_padding(0,0);
   label632->set_justify(Gtk::JUSTIFY_LEFT);
   label632->set_line_wrap(false);
   label632->set_use_markup(false);
   label632->set_selectable(false);
   frame105->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame105->set_label_align(0,0.5);
   frame105->add(*entry_merkmale);
   frame105->set_label_widget(*label632);
   table67->set_row_spacings(0);
   table67->set_col_spacings(0);
   table67->attach(*frame30, 0, 1, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table67->attach(*frame11, 3, 4, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame10, 3, 4, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame18, 3, 4, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame14, 4, 5, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame16, 4, 5, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame17, 4, 5, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame31, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame92, 0, 1, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame21, 1, 2, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame20, 2, 3, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame22, 1, 2, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame23, 1, 2, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*eventbox11, 5, 6, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*eventbox12, 5, 6, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*eventbox13, 5, 6, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*eventbox14, 2, 3, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame98, 2, 3, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table67->attach(*frame104, 0, 1, 3, 4, Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table67->attach(*frame105, 1, 6, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
   resistenz->set_alignment(0.5,0.5);
   resistenz->set_padding(10,0);
   resistenz->set_justify(Gtk::JUSTIFY_CENTER);
   resistenz->set_line_wrap(false);
   resistenz->set_use_markup(false);
   resistenz->set_selectable(false);
   gift_wert->set_alignment(0.5,0.5);
   gift_wert->set_padding(10,0);
   gift_wert->set_justify(Gtk::JUSTIFY_CENTER);
   gift_wert->set_line_wrap(false);
   gift_wert->set_use_markup(false);
   gift_wert->set_selectable(false);
   label199->set_alignment(0,0.5);
   label199->set_padding(10,0);
   label199->set_justify(Gtk::JUSTIFY_LEFT);
   label199->set_line_wrap(false);
   label199->set_use_markup(false);
   label199->set_selectable(false);
   abwehr_wert->set_alignment(0.5,0.5);
   abwehr_wert->set_padding(0,0);
   abwehr_wert->set_justify(Gtk::JUSTIFY_CENTER);
   abwehr_wert->set_line_wrap(false);
   abwehr_wert->set_use_markup(false);
   abwehr_wert->set_selectable(false);
   label200->set_alignment(0,0.5);
   label200->set_padding(10,0);
   label200->set_justify(Gtk::JUSTIFY_LEFT);
   label200->set_line_wrap(false);
   label200->set_use_markup(false);
   label200->set_selectable(false);
   zaubern_wert->set_alignment(0.5,0.5);
   zaubern_wert->set_padding(0,0);
   zaubern_wert->set_justify(Gtk::JUSTIFY_CENTER);
   zaubern_wert->set_line_wrap(false);
   zaubern_wert->set_use_markup(false);
   zaubern_wert->set_selectable(false);
   label274->set_alignment(0,0.5);
   label274->set_padding(10,0);
   label274->set_justify(Gtk::JUSTIFY_LEFT);
   label274->set_line_wrap(false);
   label274->set_use_markup(false);
   label274->set_selectable(false);
   label275->set_alignment(0,0.5);
   label275->set_padding(10,0);
   label275->set_justify(Gtk::JUSTIFY_LEFT);
   label275->set_line_wrap(false);
   label275->set_use_markup(false);
   label275->set_selectable(false);
   pixmap115->set_alignment(0.5,0.5);
   pixmap115->set_padding(0,0);
   label543->set_alignment(0.5,0.5);
   label543->set_padding(0,0);
   label543->set_justify(Gtk::JUSTIFY_CENTER);
   label543->set_line_wrap(false);
   label543->set_use_markup(false);
   label543->set_selectable(false);
   hbox57->pack_start(*pixmap115);
   hbox57->pack_start(*label543, Gtk::PACK_SHRINK, 0);
   button_grda1setzen->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*button_grda1setzen, "Wird nicht der Knopf 'Abgeleitete Werte' gedrückt, weil der Abenteurer eingegeben wurde, so können mit diesem Knopf die Berechnung der Erfolgswerte (einschließlich des Erfolgswertes für 'Sechster Sinn') gesetzt werden.", "");
   button_grda1setzen->set_relief(Gtk::RELIEF_NORMAL);
   button_grda1setzen->add(*hbox57);
   table30->set_row_spacings(0);
   table30->set_col_spacings(0);
   table30->attach(*resistenz, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*gift_wert, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*label199, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*abwehr_wert, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*label200, 0, 1, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*zaubern_wert, 1, 2, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*label274, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*label275, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*button_grda1setzen, 0, 2, 4, 5, Gtk::AttachOptions(), Gtk::EXPAND|Gtk::SHRINK, 0, 0);
   label607->set_alignment(0.5,0.5);
   label607->set_padding(0,0);
   label607->set_justify(Gtk::JUSTIFY_LEFT);
   label607->set_line_wrap(false);
   label607->set_use_markup(false);
   label607->set_selectable(false);
   frame57->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame57->set_label_align(0,0.5);
   frame57->add(*table30);
   frame57->set_label_widget(*label607);
   label181->set_alignment(0,0.5);
   label181->set_padding(10,0);
   label181->set_justify(Gtk::JUSTIFY_LEFT);
   label181->set_line_wrap(false);
   label181->set_use_markup(false);
   label181->set_selectable(false);
   label182->set_alignment(0,0.5);
   label182->set_padding(10,0);
   label182->set_justify(Gtk::JUSTIFY_LEFT);
   label182->set_line_wrap(false);
   label182->set_use_markup(false);
   label182->set_selectable(false);
   bo_sc->set_alignment(0.5,0.5);
   bo_sc->set_padding(0,0);
   bo_sc->set_justify(Gtk::JUSTIFY_CENTER);
   bo_sc->set_line_wrap(false);
   bo_sc->set_use_markup(false);
   bo_sc->set_selectable(false);
   bo_an->set_alignment(0.5,0.5);
   bo_an->set_padding(0,0);
   bo_an->set_justify(Gtk::JUSTIFY_CENTER);
   bo_an->set_line_wrap(false);
   bo_an->set_use_markup(false);
   bo_an->set_selectable(false);
   label184->set_alignment(0,0.5);
   label184->set_padding(10,0);
   label184->set_justify(Gtk::JUSTIFY_CENTER);
   label184->set_line_wrap(false);
   label184->set_use_markup(false);
   label184->set_selectable(false);
   bo_ab->set_alignment(0.5,0.5);
   bo_ab->set_padding(0,0);
   bo_ab->set_justify(Gtk::JUSTIFY_CENTER);
   bo_ab->set_line_wrap(false);
   bo_ab->set_use_markup(false);
   bo_ab->set_selectable(false);
   label185->set_alignment(0,0.5);
   label185->set_padding(10,0);
   label185->set_justify(Gtk::JUSTIFY_CENTER);
   label185->set_line_wrap(false);
   label185->set_use_markup(false);
   label185->set_selectable(false);
   bo_za->set_alignment(0.5,0.5);
   bo_za->set_padding(0,0);
   bo_za->set_justify(Gtk::JUSTIFY_CENTER);
   bo_za->set_line_wrap(false);
   bo_za->set_use_markup(false);
   bo_za->set_selectable(false);
   bo_au->set_alignment(0.5,0.5);
   bo_au->set_padding(0,0);
   bo_au->set_justify(Gtk::JUSTIFY_CENTER);
   bo_au->set_line_wrap(false);
   bo_au->set_use_markup(false);
   bo_au->set_selectable(false);
   label183->set_alignment(0,0.5);
   label183->set_padding(10,0);
   label183->set_justify(Gtk::JUSTIFY_LEFT);
   label183->set_line_wrap(false);
   label183->set_use_markup(false);
   label183->set_selectable(false);
   label186->set_alignment(0,0.5);
   label186->set_padding(0,0);
   label186->set_justify(Gtk::JUSTIFY_CENTER);
   label186->set_line_wrap(false);
   label186->set_use_markup(false);
   label186->set_selectable(false);
   label187->set_alignment(0,0.5);
   label187->set_padding(0,0);
   label187->set_justify(Gtk::JUSTIFY_CENTER);
   label187->set_line_wrap(false);
   label187->set_use_markup(false);
   label187->set_selectable(false);
   label188->set_alignment(0,0.5);
   label188->set_padding(1,0);
   label188->set_justify(Gtk::JUSTIFY_LEFT);
   label188->set_line_wrap(false);
   label188->set_use_markup(false);
   label188->set_selectable(false);
   bo_psy->set_alignment(0.5,0.5);
   bo_psy->set_padding(0,0);
   bo_psy->set_justify(Gtk::JUSTIFY_CENTER);
   bo_psy->set_line_wrap(false);
   bo_psy->set_use_markup(false);
   bo_psy->set_selectable(false);
   bo_phs->set_alignment(0.5,0.5);
   bo_phs->set_padding(0,0);
   bo_phs->set_justify(Gtk::JUSTIFY_CENTER);
   bo_phs->set_line_wrap(false);
   bo_phs->set_use_markup(false);
   bo_phs->set_selectable(false);
   bo_phk->set_alignment(0.5,0.5);
   bo_phk->set_padding(0,0);
   bo_phk->set_justify(Gtk::JUSTIFY_CENTER);
   bo_phk->set_line_wrap(false);
   bo_phk->set_use_markup(false);
   bo_phk->set_selectable(false);
   table29->set_row_spacings(0);
   table29->set_col_spacings(0);
   table29->attach(*label181, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label182, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bo_sc, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bo_an, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label184, 0, 1, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bo_ab, 1, 2, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label185, 0, 1, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bo_za, 1, 2, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bo_au, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label183, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label186, 3, 4, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label187, 3, 4, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label188, 3, 4, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bo_psy, 4, 5, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bo_phs, 4, 5, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bo_phk, 4, 5, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*vseparator15, 2, 3, 0, 5, Gtk::EXPAND|Gtk::SHRINK, Gtk::FILL, 3, 0);
   label608->set_alignment(0.5,0.5);
   label608->set_padding(0,0);
   label608->set_justify(Gtk::JUSTIFY_LEFT);
   label608->set_line_wrap(false);
   label608->set_use_markup(false);
   label608->set_selectable(false);
   frame56->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame56->set_label_align(0,0.5);
   frame56->add(*table29);
   frame56->set_label_widget(*label608);
   label___->set_alignment(0,0.5);
   label___->set_padding(0,0);
   label___->set_justify(Gtk::JUSTIFY_LEFT);
   label___->set_line_wrap(false);
   label___->set_use_markup(false);
   label___->set_selectable(false);
   label_gestalt->set_alignment(0.5,0.5);
   label_gestalt->set_padding(0,0);
   label_gestalt->set_justify(Gtk::JUSTIFY_CENTER);
   label_gestalt->set_line_wrap(false);
   label_gestalt->set_use_markup(false);
   label_gestalt->set_selectable(false);
   label610->set_alignment(0.5,0.5);
   label610->set_padding(0,0);
   label610->set_justify(Gtk::JUSTIFY_LEFT);
   label610->set_line_wrap(false);
   label610->set_use_markup(false);
   label610->set_selectable(false);
   frame15->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame15->set_label_align(0,0.5);
   frame15->add(*label_gestalt);
   frame15->set_label_widget(*label610);
   label204->set_alignment(0,0.5);
   label204->set_padding(0,0);
   label204->set_justify(Gtk::JUSTIFY_LEFT);
   label204->set_line_wrap(false);
   label204->set_use_markup(false);
   label204->set_selectable(false);
   label205->set_alignment(0,0.5);
   label205->set_padding(0,0);
   label205->set_justify(Gtk::JUSTIFY_LEFT);
   label205->set_line_wrap(false);
   label205->set_use_markup(false);
   label205->set_selectable(false);
   label206->set_alignment(0,0.5);
   label206->set_padding(0,0);
   label206->set_justify(Gtk::JUSTIFY_LEFT);
   label206->set_line_wrap(false);
   label206->set_use_markup(false);
   label206->set_selectable(false);
   label25->set_alignment(0,0.5);
   label25->set_padding(0,0);
   label25->set_justify(Gtk::JUSTIFY_LEFT);
   label25->set_line_wrap(false);
   label25->set_use_markup(false);
   label25->set_selectable(false);
   label26->set_alignment(0,0.5);
   label26->set_padding(0,0);
   label26->set_justify(Gtk::JUSTIFY_LEFT);
   label26->set_line_wrap(false);
   label26->set_use_markup(false);
   label26->set_selectable(false);
   label27->set_alignment(0,0.5);
   label27->set_padding(0,0);
   label27->set_justify(Gtk::JUSTIFY_LEFT);
   label27->set_line_wrap(false);
   label27->set_use_markup(false);
   label27->set_selectable(false);
   kaw->set_alignment(0.5,0.5);
   kaw->set_padding(0,0);
   kaw->set_justify(Gtk::JUSTIFY_CENTER);
   kaw->set_line_wrap(false);
   kaw->set_use_markup(false);
   kaw->set_selectable(false);
   wlw->set_alignment(0.5,0.5);
   wlw->set_padding(0,0);
   wlw->set_justify(Gtk::JUSTIFY_CENTER);
   wlw->set_line_wrap(false);
   wlw->set_use_markup(false);
   wlw->set_selectable(false);
   spinbutton_b->set_flags(Gtk::CAN_FOCUS);
   spinbutton_b->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_b->set_numeric(false);
   spinbutton_b->set_digits(0);
   spinbutton_b->set_wrap(false);
   spinbutton_au->set_flags(Gtk::CAN_FOCUS);
   spinbutton_au->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_au->set_numeric(false);
   spinbutton_au->set_digits(0);
   spinbutton_au->set_wrap(false);
   spinbutton_pa->set_flags(Gtk::CAN_FOCUS);
   spinbutton_pa->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_pa->set_numeric(false);
   spinbutton_pa->set_digits(0);
   spinbutton_pa->set_wrap(false);
   spinbutton_sb->set_flags(Gtk::CAN_FOCUS);
   spinbutton_sb->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_sb->set_numeric(false);
   spinbutton_sb->set_digits(0);
   spinbutton_sb->set_wrap(false);
   spinbutton_wk->set_flags(Gtk::CAN_FOCUS);
   spinbutton_wk->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_wk->set_numeric(false);
   spinbutton_wk->set_digits(0);
   spinbutton_wk->set_wrap(false);
   table27->set_border_width(3);
   table27->set_row_spacings(0);
   table27->set_col_spacings(0);
   table27->attach(*label___, 0, 1, 3, 4, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table27->attach(*frame15, 3, 5, 3, 4, Gtk::AttachOptions(), Gtk::FILL, 0, 0);
   table27->attach(*label204, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table27->attach(*label205, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table27->attach(*label206, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table27->attach(*label25, 3, 4, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table27->attach(*label26, 3, 4, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table27->attach(*label27, 3, 4, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table27->attach(*kaw, 4, 5, 1, 2, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table27->attach(*wlw, 4, 5, 2, 3, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table27->attach(*spinbutton_b, 4, 5, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table27->attach(*spinbutton_au, 1, 2, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table27->attach(*spinbutton_pa, 1, 2, 1, 2, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table27->attach(*spinbutton_sb, 1, 2, 2, 3, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table27->attach(*spinbutton_wk, 1, 2, 3, 4, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table27->attach(*vseparator14, 2, 3, 0, 4, Gtk::FILL, Gtk::FILL, 3, 0);
   label609->set_alignment(0.5,0.5);
   label609->set_padding(0,0);
   label609->set_justify(Gtk::JUSTIFY_LEFT);
   label609->set_line_wrap(false);
   label609->set_use_markup(false);
   label609->set_selectable(false);
   frame55->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame55->set_label_align(0,0.5);
   frame55->add(*table27);
   frame55->set_label_widget(*label609);
   label18->set_alignment(0,0.5);
   label18->set_padding(10,0);
   label18->set_justify(Gtk::JUSTIFY_LEFT);
   label18->set_line_wrap(false);
   label18->set_use_markup(false);
   label18->set_selectable(false);
   label6->set_alignment(0,0.5);
   label6->set_padding(10,0);
   label6->set_justify(Gtk::JUSTIFY_LEFT);
   label6->set_line_wrap(false);
   label6->set_use_markup(false);
   label6->set_selectable(false);
   label7->set_alignment(0,0.5);
   label7->set_padding(10,0);
   label7->set_justify(Gtk::JUSTIFY_LEFT);
   label7->set_line_wrap(false);
   label7->set_use_markup(false);
   label7->set_selectable(false);
   label4->set_alignment(0,0.5);
   label4->set_padding(10,0);
   label4->set_justify(Gtk::JUSTIFY_LEFT);
   label4->set_line_wrap(false);
   label4->set_use_markup(false);
   label4->set_selectable(false);
   lable5->set_alignment(0,0.5);
   lable5->set_padding(10,0);
   lable5->set_justify(Gtk::JUSTIFY_LEFT);
   lable5->set_line_wrap(false);
   lable5->set_use_markup(false);
   lable5->set_selectable(false);
   label439->set_alignment(0,0.5);
   label439->set_padding(10,0);
   label439->set_justify(Gtk::JUSTIFY_CENTER);
   label439->set_line_wrap(false);
   label439->set_use_markup(false);
   label439->set_selectable(false);
   spinbutton_st->set_flags(Gtk::CAN_FOCUS);
   spinbutton_st->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_st->set_numeric(false);
   spinbutton_st->set_digits(0);
   spinbutton_st->set_wrap(false);
   spinbutton_gs->set_flags(Gtk::CAN_FOCUS);
   spinbutton_gs->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_gs->set_numeric(false);
   spinbutton_gs->set_digits(0);
   spinbutton_gs->set_wrap(false);
   spinbutton_gw->set_flags(Gtk::CAN_FOCUS);
   spinbutton_gw->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_gw->set_numeric(false);
   spinbutton_gw->set_digits(0);
   spinbutton_gw->set_wrap(false);
   spinbutton_ko->set_flags(Gtk::CAN_FOCUS);
   spinbutton_ko->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_ko->set_numeric(false);
   spinbutton_ko->set_digits(0);
   spinbutton_ko->set_wrap(false);
   spinbutton_in->set_flags(Gtk::CAN_FOCUS);
   spinbutton_in->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_in->set_numeric(false);
   spinbutton_in->set_digits(0);
   spinbutton_in->set_wrap(false);
   spinbutton_zt->set_flags(Gtk::CAN_FOCUS);
   spinbutton_zt->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_zt->set_numeric(false);
   spinbutton_zt->set_digits(0);
   spinbutton_zt->set_wrap(false);
   table26->set_row_spacings(0);
   table26->set_col_spacings(0);
   table26->attach(*label18, 0, 1, 5, 6, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*label6, 0, 1, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*label7, 0, 1, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*label4, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*lable5, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*label439, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*spinbutton_st, 1, 2, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*spinbutton_gs, 1, 2, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*spinbutton_gw, 1, 2, 2, 3, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*spinbutton_ko, 1, 2, 3, 4, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*spinbutton_in, 1, 2, 4, 5, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*spinbutton_zt, 1, 2, 5, 6, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   label611->set_alignment(0.5,0.5);
   label611->set_padding(0,0);
   label611->set_justify(Gtk::JUSTIFY_LEFT);
   label611->set_line_wrap(false);
   label611->set_use_markup(false);
   label611->set_selectable(false);
   frame54->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame54->set_label_align(0,0.5);
   frame54->add(*table26);
   frame54->set_label_widget(*label611);
   label_hoeren->set_alignment(0.5,0.5);
   label_hoeren->set_padding(0,0);
   label_hoeren->set_justify(Gtk::JUSTIFY_CENTER);
   label_hoeren->set_line_wrap(false);
   label_hoeren->set_use_markup(false);
   label_hoeren->set_selectable(false);
   label_schmecken->set_alignment(0.5,0.5);
   label_schmecken->set_padding(0,0);
   label_schmecken->set_justify(Gtk::JUSTIFY_CENTER);
   label_schmecken->set_line_wrap(false);
   label_schmecken->set_use_markup(false);
   label_schmecken->set_selectable(false);
   label_tasten->set_alignment(0.5,0.5);
   label_tasten->set_padding(0,0);
   label_tasten->set_justify(Gtk::JUSTIFY_CENTER);
   label_tasten->set_line_wrap(false);
   label_tasten->set_use_markup(false);
   label_tasten->set_selectable(false);
   label493->set_alignment(0,0.5);
   label493->set_padding(0,0);
   label493->set_justify(Gtk::JUSTIFY_LEFT);
   label493->set_line_wrap(false);
   label493->set_use_markup(false);
   label493->set_selectable(false);
   label494->set_alignment(0,0.5);
   label494->set_padding(0,0);
   label494->set_justify(Gtk::JUSTIFY_LEFT);
   label494->set_line_wrap(false);
   label494->set_use_markup(false);
   label494->set_selectable(false);
   label495->set_alignment(0,0.5);
   label495->set_padding(0,0);
   label495->set_justify(Gtk::JUSTIFY_LEFT);
   label495->set_line_wrap(false);
   label495->set_use_markup(false);
   label495->set_selectable(false);
   label496->set_alignment(0,0.5);
   label496->set_padding(1,0);
   label496->set_justify(Gtk::JUSTIFY_LEFT);
   label496->set_line_wrap(false);
   label496->set_use_markup(false);
   label496->set_selectable(false);
   label_sehen->set_alignment(0.5,0.5);
   label_sehen->set_padding(0,0);
   label_sehen->set_justify(Gtk::JUSTIFY_CENTER);
   label_sehen->set_line_wrap(false);
   label_sehen->set_use_markup(false);
   label_sehen->set_selectable(false);
   label498->set_alignment(0,0.5);
   label498->set_padding(0,0);
   label498->set_justify(Gtk::JUSTIFY_CENTER);
   label498->set_line_wrap(false);
   label498->set_use_markup(false);
   label498->set_selectable(false);
   label_riechen->set_alignment(0.5,0.5);
   label_riechen->set_padding(0,0);
   label_riechen->set_justify(Gtk::JUSTIFY_CENTER);
   label_riechen->set_line_wrap(false);
   label_riechen->set_use_markup(false);
   label_riechen->set_selectable(false);
   label488->set_alignment(0,0.5);
   label488->set_padding(0,0);
   label488->set_justify(Gtk::JUSTIFY_LEFT);
   label488->set_line_wrap(false);
   label488->set_use_markup(false);
   label488->set_selectable(false);
   label_sechster_sinn->set_alignment(0.5,0.5);
   label_sechster_sinn->set_padding(0,0);
   label_sechster_sinn->set_justify(Gtk::JUSTIFY_CENTER);
   label_sechster_sinn->set_line_wrap(false);
   label_sechster_sinn->set_use_markup(false);
   label_sechster_sinn->set_selectable(false);
   table98->set_border_width(3);
   table98->set_row_spacings(0);
   table98->set_col_spacings(0);
   table98->attach(*label_hoeren, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label_schmecken, 1, 2, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label_tasten, 1, 2, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label493, 0, 1, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label494, 0, 1, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label495, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label496, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label_sehen, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label498, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label_riechen, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label488, 0, 1, 5, 6, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table98->attach(*label_sechster_sinn, 1, 2, 5, 6, Gtk::FILL, Gtk::AttachOptions(), 3, 0);
   label612->set_alignment(0.5,0.5);
   label612->set_padding(0,0);
   label612->set_justify(Gtk::JUSTIFY_LEFT);
   label612->set_line_wrap(false);
   label612->set_use_markup(false);
   label612->set_selectable(false);
   frame84->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame84->set_label_align(0,0.5);
   frame84->add(*table98);
   frame84->set_label_widget(*label612);
   table68->set_row_spacings(0);
   table68->set_col_spacings(5);
   table68->attach(*frame57, 4, 5, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table68->attach(*frame56, 3, 4, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table68->attach(*frame55, 2, 3, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table68->attach(*frame54, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table68->attach(*frame84, 1, 2, 0, 1, Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label633->set_alignment(0.5,0.5);
   label633->set_padding(0,0);
   label633->set_justify(Gtk::JUSTIFY_LEFT);
   label633->set_line_wrap(false);
   label633->set_use_markup(false);
   label633->set_selectable(false);
   frame_wuerfelvariante->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_wuerfelvariante->set_label_align(0,0.5);
   frame_wuerfelvariante->set_label_widget(*label633);
   combo_spezies->get_entry()->set_flags(Gtk::CAN_FOCUS);
   combo_spezies->get_entry()->set_visibility(true);
   combo_spezies->get_entry()->set_editable(true);
   combo_spezies->get_entry()->set_max_length(0);
   combo_spezies->get_entry()->set_text("");
   combo_spezies->get_entry()->set_has_frame(true);
   combo_spezies->get_entry()->set_activates_default(false);
   combo_spezies->set_case_sensitive(false);
   {  
      
      const char * const items[] = { "", 0 };
      combo_spezies->set_popdown_strings(items);
   }
   combo_spezies->get_entry()->set_text("");
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem6->set_visible_horizontal(true);
   toolitem6->set_visible_vertical(true);
   toolitem6->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem6->add(*combo_spezies);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem15->set_visible_horizontal(true);
   toolitem15->set_visible_vertical(true);
   toolitem15->set_is_important(true);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem15->add(*button_grundwerte);
#endif //
   _tooltips.set_tip(*button_geschlecht, "Geschlecht", "");
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem8->set_visible_horizontal(true);
   toolitem8->set_visible_vertical(true);
   toolitem8->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem8->add(*button_geschlecht);
#endif //
   combo_typ->get_entry()->set_flags(Gtk::CAN_FOCUS);
   combo_typ->get_entry()->set_visibility(true);
   combo_typ->get_entry()->set_editable(true);
   combo_typ->get_entry()->set_max_length(0);
   combo_typ->get_entry()->set_text("");
   combo_typ->get_entry()->set_has_frame(true);
   combo_typ->get_entry()->set_activates_default(false);
   combo_typ->set_case_sensitive(false);
   {  
      
      const char * const items[] = { "", 0 };
      combo_typ->set_popdown_strings(items);
   }
   combo_typ->get_entry()->set_text("");
   combo_typ2->get_entry()->set_flags(Gtk::CAN_FOCUS);
   combo_typ2->get_entry()->set_visibility(true);
   combo_typ2->get_entry()->set_editable(true);
   combo_typ2->get_entry()->set_max_length(0);
   combo_typ2->get_entry()->set_text("");
   combo_typ2->get_entry()->set_has_frame(true);
   combo_typ2->get_entry()->set_activates_default(false);
   combo_typ2->set_case_sensitive(false);
   {  
      
      const char * const items[] = { "", 0 };
      combo_typ2->set_popdown_strings(items);
   }
   combo_typ2->get_entry()->set_text("");
   vbox46->pack_start(*combo_typ, Gtk::PACK_SHRINK, 0);
   vbox46->pack_start(*combo_typ2, Gtk::PACK_SHRINK, 0);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem9->set_visible_horizontal(true);
   toolitem9->set_visible_vertical(true);
   toolitem9->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem9->add(*vbox46);
#endif //
   _tooltips.set_tip(*button_stadt_land, "Herkunft", "");
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem10->set_visible_horizontal(true);
   toolitem10->set_visible_vertical(true);
   toolitem10->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem10->add(*button_stadt_land);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   button_abg_werte->set_flags(Gtk::CAN_FOCUS);
   button_abg_werte->set_visible_horizontal(true);
   button_abg_werte->set_visible_vertical(true);
   button_abg_werte->set_is_important(false);
#endif //
   button_abg_werte_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   eventbox_werte_edit_dummy->set_visible_horizontal(true);
   eventbox_werte_edit_dummy->set_visible_vertical(true);
   eventbox_werte_edit_dummy->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   eventbox_werte_edit_dummy->add(*eventbox_werte_edit);
#endif //
   toolbar2->set_tooltips(true);
   toolbar2->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar2->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
   table_grundwerte->set_row_spacings(0);
   table_grundwerte->set_col_spacings(0);
   table_grundwerte->attach(*table67, 0, 1, 2, 3, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK, 10, 0);
   table_grundwerte->attach(*hseparator20, 0, 1, 3, 4, Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 5);
   table_grundwerte->attach(*table68, 0, 1, 4, 5, Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_grundwerte->attach(*frame_wuerfelvariante, 0, 1, 5, 6, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK|Gtk::FILL, 0, 0);
   table_grundwerte->attach(*hseparator1, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 5);
   table_grundwerte->attach(*toolbar2, 0, 2, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK, 0, 0);
   entry_nameC->show();
   label613->show();
   frame30->show();
   spinbutton_ap->show();
   label614->show();
   frame11->show();
   spinbutton_lp->show();
   label615->show();
   frame10->show();
   spinbutton_grad->show();
   label616->show();
   frame18->show();
   spinbutton_alter->show();
   label617->show();
   frame14->show();
   spinbutton_Cgewicht->show();
   label618->show();
   frame16->show();
   spinbutton_groesse->show();
   label619->show();
   frame17->show();
   entry_nameS->show();
   label620->show();
   frame31->show();
   entry_version->show();
   label621->show();
   frame92->show();
   entry_herkunft->show();
   label622->show();
   frame21->show();
   combo_stand->show();
   label623->show();
   frame20->show();
   entry_glaube->show();
   label624->show();
   frame22->show();
   entry_spezialisierung->show();
   label625->show();
   frame23->show();
   spinbutton_tage->show();
   label626->show();
   frame93->show();
   eventbox11->show();
   spinbutton_gg->show();
   label627->show();
   frame95->show();
   eventbox12->show();
   spinbutton_sg->show();
   label628->show();
   frame96->show();
   eventbox13->show();
   spinbutton_gfp->show();
   label629->show();
   frame97->show();
   eventbox14->show();
   combo_hand->show();
   label630->show();
   frame98->show();
   entry_bezeichnung->show();
   label631->show();
   frame104->show();
   entry_merkmale->show();
   label632->show();
   frame105->show();
   table67->show();
   hseparator20->show();
   resistenz->show();
   gift_wert->show();
   label199->show();
   abwehr_wert->show();
   label200->show();
   zaubern_wert->show();
   label274->show();
   label275->show();
   pixmap115->show();
   label543->show();
   hbox57->show();
   table30->show();
   label607->show();
   frame57->show();
   label181->show();
   label182->show();
   bo_sc->show();
   bo_an->show();
   label184->show();
   bo_ab->show();
   label185->show();
   bo_za->show();
   bo_au->show();
   label183->show();
   label186->show();
   label187->show();
   label188->show();
   bo_psy->show();
   bo_phs->show();
   bo_phk->show();
   vseparator15->show();
   table29->show();
   label608->show();
   frame56->show();
   label___->show();
   label_gestalt->show();
   label610->show();
   frame15->show();
   label204->show();
   label205->show();
   label206->show();
   label25->show();
   label26->show();
   label27->show();
   kaw->show();
   wlw->show();
   spinbutton_b->show();
   spinbutton_au->show();
   spinbutton_pa->show();
   spinbutton_sb->show();
   spinbutton_wk->show();
   vseparator14->show();
   table27->show();
   label609->show();
   frame55->show();
   label18->show();
   label6->show();
   label7->show();
   label4->show();
   lable5->show();
   label439->show();
   spinbutton_st->show();
   spinbutton_gs->show();
   spinbutton_gw->show();
   spinbutton_ko->show();
   spinbutton_in->show();
   spinbutton_zt->show();
   table26->show();
   label611->show();
   frame54->show();
   label_hoeren->show();
   label_schmecken->show();
   label_tasten->show();
   label493->show();
   label494->show();
   label495->show();
   label496->show();
   label_sehen->show();
   label498->show();
   label_riechen->show();
   label488->show();
   label_sechster_sinn->show();
   table98->show();
   label612->show();
   frame84->show();
   table68->show();
   label633->show();
   hseparator1->show();
   combo_spezies->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem6->show();
#endif //
   button_grundwerte->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem15->show();
#endif //
   button_geschlecht->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem8->show();
#endif //
   combo_typ->show();
   combo_typ2->show();
   vbox46->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem9->show();
#endif //
   button_stadt_land->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem10->show();
#endif //
   button_abg_werte->show();
   eventbox_werte_edit->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   eventbox_werte_edit_dummy->show();
#endif //
   toolbar2->show();
   table_grundwerte->show();
   entry_nameC->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_nameC_activate), true);
   entry_nameC->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_nameC_focus_out_event), false);
   entry_nameC->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_nameC_focus_in_event), false);
   spinbutton_ap->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_ap_activate), true);
   spinbutton_ap->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_ap_focus_out_event), false);
   spinbutton_ap->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_ap_focus_in_event), false);
   spinbutton_lp->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_lp_activate), true);
   spinbutton_lp->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_lp_focus_out_event), false);
   spinbutton_lp->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_lp_focus_in_event), false);
   spinbutton_grad->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_grad_activate), true);
   spinbutton_grad->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_grad_focus_out_event), false);
   spinbutton_grad->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_grad_focus_in_event), false);
   spinbutton_alter->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_alter_activate), true);
   spinbutton_alter->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_alter_focus_out_event), false);
   spinbutton_alter->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_alter_focus_in_event), false);
   spinbutton_Cgewicht->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_Cgewicht_activate), true);
   spinbutton_Cgewicht->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_Cgewicht_focus_out_event), false);
   spinbutton_Cgewicht->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_Cgewicht_focus_in_event), false);
   spinbutton_groesse->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_groesse_activate), true);
   spinbutton_groesse->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_groesse_focus_out_event), false);
   spinbutton_groesse->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_groesse_focus_in_event), false);
   entry_nameS->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_nameS_activate), false);
   entry_nameS->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_nameS_focus_out_event), true);
   entry_nameS->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_nameS_focus_in_event), false);
   entry_version->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_version_activate), false);
   entry_version->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_version_focus_out_event), false);
   entry_version->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_version_focus_in_event), false);
   entry_herkunft->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_herkunft_activate), true);
   entry_herkunft->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_herkunft_focus_out_event), false);
   entry_herkunft->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_herkunft_focus_in_event), false);
   combo_stand->get_entry()->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_stand_activate), false);
   combo_stand->get_entry()->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_stand_focus_out_event), false);
   entry_glaube->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_glaube_activate), true);
   entry_glaube->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_glaube_focus_out_event), false);
   entry_glaube->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_glaube_focus_in_event), false);
   entry_spezialisierung->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_spezialisierung_activate), true);
   entry_spezialisierung->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_spezialisierung_focus_out_event), false);
   entry_spezialisierung->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_spezialisierung_focus_in_event), false);
   spinbutton_tage->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_tage_activate), true);
   spinbutton_tage->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_tage_focus_out_event), false);
   spinbutton_tage->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_tage_focus_in_event), false);
   spinbutton_gg->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gg_activate), true);
   spinbutton_gg->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gg_focus_out_event), false);
   spinbutton_gg->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gg_focus_in_event), false);
   spinbutton_sg->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_sg_activate), true);
   spinbutton_sg->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_sg_focus_out_event), false);
   spinbutton_sg->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_sg_focus_in_event), false);
   spinbutton_gfp->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gfp_activate), true);
   spinbutton_gfp->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gfp_focus_out_event), false);
   spinbutton_gfp->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gfp_focus_in_event), false);
   combo_hand->get_entry()->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_hand_activate), false);
   combo_hand->get_entry()->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_hand_focus_out_event), false);
   entry_bezeichnung->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_bezeichnung_activate), false);
   entry_bezeichnung->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_bezeichnung_focus_out_event), false);
   entry_bezeichnung->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_bezeichnung_focus_in_event), false);
   entry_merkmale->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_merkmale_activate), false);
   entry_merkmale->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_merkmale_focus_out_event), false);
   entry_merkmale->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_entry_merkmale_focus_in_event), false);
   button_grda1setzen->signal_clicked().connect(SigC::slot(*this, &table_grundwerte_glade::on_button_grda1setzen_clicked), false);
   spinbutton_b->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_b_activate), true);
   spinbutton_b->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_b_focus_out_event), false);
   spinbutton_b->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_b_focus_in_event), false);
   spinbutton_au->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_au_activate), true);
   spinbutton_au->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_au_focus_out_event), false);
   spinbutton_au->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_au_focus_in_event), false);
   spinbutton_pa->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_pa_activate), true);
   spinbutton_pa->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_pa_focus_out_event), false);
   spinbutton_pa->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_pa_focus_in_event), false);
   spinbutton_sb->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_sb_activate), true);
   spinbutton_sb->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_sb_focus_out_event), false);
   spinbutton_sb->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_sb_focus_in_event), false);
   spinbutton_wk->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_wk_activate), true);
   spinbutton_wk->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_wk_focus_out_event), false);
   spinbutton_wk->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_wk_focus_in_event), false);
   spinbutton_st->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_st_activate), true);
   spinbutton_st->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_st_focus_out_event), false);
   spinbutton_st->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_st_focus_in_event), false);
   spinbutton_gs->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gs_activate), true);
   spinbutton_gs->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gs_focus_out_event), false);
   spinbutton_gs->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gs_focus_in_event), false);
   spinbutton_gw->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gw_activate), true);
   spinbutton_gw->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gw_focus_out_event), false);
   spinbutton_gw->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_gw_focus_in_event), false);
   spinbutton_ko->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_ko_activate), true);
   spinbutton_ko->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_ko_focus_out_event), false);
   spinbutton_ko->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_ko_focus_in_event), false);
   spinbutton_in->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_in_activate), true);
   spinbutton_in->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_in_focus_out_event), false);
   spinbutton_in->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_in_focus_in_event), false);
   spinbutton_zt->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_zt_activate), true);
   spinbutton_zt->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_zt_focus_out_event), false);
   spinbutton_zt->signal_focus_in_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_spinbutton_zt_focus_in_event), false);
   combo_spezies->get_entry()->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_spezies_activate), false);
   combo_spezies->get_entry()->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_spezies_focus_out_event), false);
   combo_spezies->get_entry()->signal_changed().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_spezies_changed), false);
   combo_typ->get_entry()->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_typ_activate), false);
   combo_typ->get_entry()->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_typ__focus_out_event), false);
   combo_typ->get_entry()->signal_changed().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_typ__changed), false);
   combo_typ2->get_entry()->signal_activate().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_typ2_activate), false);
   combo_typ2->get_entry()->signal_focus_out_event().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_typ2_focus_out_event), false);
   combo_typ2->get_entry()->signal_changed().connect(SigC::slot(*this, &table_grundwerte_glade::on_combo_typ2__changed), false);
   button_abg_werte->signal_clicked().connect(SigC::slot(*this, &table_grundwerte_glade::on_abge_werte_setzen_clicked), false);
}

table_grundwerte_glade::~table_grundwerte_glade()
{  delete button_grundwerte;
   delete button_geschlecht;
   delete button_stadt_land;
}
