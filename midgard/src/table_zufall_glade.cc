// generated 2002/9/16 21:40:25 CEST by thoma@Tiger.(none)
// using glademm V1.1.1c_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/thoma/rollenspiel/midgard/programme/gcc_3.0/midgard/midgard.glade
// for gtk 1.2.10 and gtkmm 1.2.10
//
// Please modify the corresponding derived classes in ./src/table_zufall.cc

#include "config.h"
#include "table_zufall.hh"
#include <gtk--/table.h>
#include <gtk--/button.h>
#include <gtk--/frame.h>
#include <gtk--/label.h>
#include <gtk--/adjustment.h>

table_zufall_glade::table_zufall_glade(GlademmData *_data
) : Gtk::Table(3, 3, false)
{  table_zufall = this;
   checkbutton_spezies = manage(new class Gtk::CheckButton("Spezies", 0, 0.5));
   checkbutton_herkunft = manage(new class Gtk::CheckButton("Herkunft", 0, 0.5));
   checkbutton_typ = manage(new class Gtk::CheckButton("Typ", 0, 0.5));
   checkbutton_werte = manage(new class Gtk::CheckButton("Werte", 0, 0.5));
   checkbutton_ange_fert = manage(new class Gtk::CheckButton("angeb. Fert.", 0, 0.5));
   checkbutton_st = manage(new class Gtk::CheckButton("St", 0, 0.5));
   checkbutton_gs = manage(new class Gtk::CheckButton("Gs", 0, 0.5));
   checkbutton_gw = manage(new class Gtk::CheckButton("Gw", 0, 0.5));
   checkbutton_ko = manage(new class Gtk::CheckButton("Ko", 0, 0.5));
   checkbutton_in = manage(new class Gtk::CheckButton("In", 0, 0.5));
   checkbutton_zt = manage(new class Gtk::CheckButton("Zt", 0, 0.5));
   checkbutton_au = manage(new class Gtk::CheckButton("Au", 0, 0.5));
   checkbutton_pa = manage(new class Gtk::CheckButton("pA", 0, 0.5));
   checkbutton_wk = manage(new class Gtk::CheckButton("Wk", 0, 0.5));
   checkbutton_sb = manage(new class Gtk::CheckButton("Sb", 0, 0.5));
   checkbutton_b = manage(new class Gtk::CheckButton("B", 0, 0.5));
   
   Gtk::Table *table168 = manage(new class Gtk::Table(6, 2, false));
   frame_werte_vorgaben = manage(new class Gtk::Frame("Werte"));
   
   Gtk::Table *table166 = manage(new class Gtk::Table(9, 2, false));
   frame_vorgaben = manage(new class Gtk::Frame("Vorgaben"));
   
   Gtk::Button *button_zufall_voll = manage(new class Gtk::Button("Zufallsabenteurer \n"
		"Grad 1 erzeugen"));
   togglebutton_vorgaben = manage(new class Gtk::ToggleButton("Vorgaben\n"
		"machen"));
   
   Gtk::Table *table170 = manage(new class Gtk::Table(2, 2, false));
   Gtk::Frame *frame110 = manage(new class Gtk::Frame("Abenteurer erzeugen"));
   Gtk::Label *label606 = manage(new class Gtk::Label("Steigern"));
   Gtk::RadioButton::Group _RadioBGroup_zufall_steigern;
   radiobutton_steigern_grad = manage(new class Gtk::RadioButton(_RadioBGroup_zufall_steigern, "Grad", 0, 0.5));
   radiobutton_steigern_gfp = manage(new class Gtk::RadioButton(_RadioBGroup_zufall_steigern, "GFP", 0, 0.5));
   
   Gtk::Adjustment *spinbutton_gfp_adj = manage(new class Gtk::Adjustment(1, 0, 1e+07, 1, 10, 10));
   spinbutton_gfp = manage(new class Gtk::SpinButton(*spinbutton_gfp_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_grad_adj = manage(new class Gtk::Adjustment(1, 0, 15, 1, 10, 10));
   spinbutton_grad = manage(new class Gtk::SpinButton(*spinbutton_grad_adj, 1, 0));
   
   Gtk::Table *table169 = manage(new class Gtk::Table(3, 2, false));
   Gtk::Button *button_steigern = manage(new class Gtk::Button("Steigern"));
   Gtk::Table *table165 = manage(new class Gtk::Table(3, 3, false));
   Gtk::Frame *frame111 = manage(new class Gtk::Frame("Abenteurer steigern"));
   checkbutton_spezies->set_flags(GTK_CAN_FOCUS);
   checkbutton_spezies->set_mode(true);
   checkbutton_spezies->set_active(false);
   checkbutton_herkunft->set_flags(GTK_CAN_FOCUS);
   checkbutton_herkunft->set_mode(true);
   checkbutton_herkunft->set_active(false);
   checkbutton_typ->set_flags(GTK_CAN_FOCUS);
   checkbutton_typ->set_mode(true);
   checkbutton_typ->set_active(false);
   checkbutton_werte->set_flags(GTK_CAN_FOCUS);
   checkbutton_werte->set_mode(true);
   checkbutton_werte->set_active(false);
   checkbutton_ange_fert->set_flags(GTK_CAN_FOCUS);
   checkbutton_ange_fert->set_mode(true);
   checkbutton_ange_fert->set_active(false);
   checkbutton_st->set_flags(GTK_CAN_FOCUS);
   checkbutton_st->set_mode(true);
   checkbutton_st->set_active(false);
   checkbutton_gs->set_flags(GTK_CAN_FOCUS);
   checkbutton_gs->set_mode(true);
   checkbutton_gs->set_active(false);
   checkbutton_gw->set_flags(GTK_CAN_FOCUS);
   checkbutton_gw->set_mode(true);
   checkbutton_gw->set_active(false);
   checkbutton_ko->set_flags(GTK_CAN_FOCUS);
   checkbutton_ko->set_mode(true);
   checkbutton_ko->set_active(false);
   checkbutton_in->set_flags(GTK_CAN_FOCUS);
   checkbutton_in->set_mode(true);
   checkbutton_in->set_active(false);
   checkbutton_zt->set_flags(GTK_CAN_FOCUS);
   checkbutton_zt->set_mode(true);
   checkbutton_zt->set_active(false);
   checkbutton_au->set_flags(GTK_CAN_FOCUS);
   checkbutton_au->set_mode(true);
   checkbutton_au->set_active(false);
   checkbutton_pa->set_flags(GTK_CAN_FOCUS);
   checkbutton_pa->set_mode(true);
   checkbutton_pa->set_active(false);
   checkbutton_wk->set_flags(GTK_CAN_FOCUS);
   checkbutton_wk->set_mode(true);
   checkbutton_wk->set_active(false);
   checkbutton_sb->set_flags(GTK_CAN_FOCUS);
   checkbutton_sb->set_mode(true);
   checkbutton_sb->set_active(false);
   checkbutton_b->set_flags(GTK_CAN_FOCUS);
   checkbutton_b->set_mode(true);
   checkbutton_b->set_active(false);
   table168->set_row_spacings(0);
   table168->set_col_spacings(0);
   table168->attach(*checkbutton_st, 0, 1, 0, 1, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_gs, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_gw, 0, 1, 2, 3, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_ko, 0, 1, 3, 4, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_in, 0, 1, 4, 5, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_zt, 0, 1, 5, 6, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_au, 1, 2, 0, 1, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_pa, 1, 2, 1, 2, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_wk, 1, 2, 2, 3, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_sb, 1, 2, 3, 4, GTK_FILL, 0, 0, 0);
   table168->attach(*checkbutton_b, 1, 2, 4, 5, GTK_FILL, 0, 0, 0);
   frame_werte_vorgaben->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame_werte_vorgaben->set_label_align(0,0);
   frame_werte_vorgaben->add(*table168);
   table166->set_row_spacings(0);
   table166->set_col_spacings(0);
   table166->attach(*checkbutton_spezies, 0, 1, 0, 1, GTK_FILL, 0, 0, 0);
   table166->attach(*checkbutton_herkunft, 0, 1, 3, 4, GTK_FILL, 0, 0, 0);
   table166->attach(*checkbutton_typ, 0, 1, 2, 3, GTK_FILL, 0, 0, 0);
   table166->attach(*checkbutton_werte, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   table166->attach(*checkbutton_ange_fert, 0, 1, 4, 5, GTK_FILL, 0, 0, 0);
   table166->attach(*frame_werte_vorgaben, 1, 2, 0, 5, GTK_FILL, GTK_FILL, 0, 0);
   frame_vorgaben->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame_vorgaben->set_label_align(0,0);
   frame_vorgaben->add(*table166);
   button_zufall_voll->set_flags(GTK_CAN_FOCUS);
   button_zufall_voll->set_relief(GTK_RELIEF_NORMAL);
   togglebutton_vorgaben->set_flags(GTK_CAN_FOCUS);
   togglebutton_vorgaben->set_relief(GTK_RELIEF_NORMAL);
   togglebutton_vorgaben->set_active(false);
   table170->set_row_spacings(0);
   table170->set_col_spacings(0);
   table170->attach(*frame_vorgaben, 1, 2, 1, 2, GTK_EXPAND|GTK_FILL, GTK_EXPAND|GTK_FILL, 0, 0);
   table170->attach(*button_zufall_voll, 0, 1, 0, 1, GTK_FILL, 0, 0, 0);
   table170->attach(*togglebutton_vorgaben, 1, 2, 0, 1, GTK_FILL, 0, 0, 0);
   frame110->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame110->set_label_align(0,0);
   frame110->add(*table170);
   label606->set_alignment(0.5,0.5);
   label606->set_padding(0,0);
   label606->set_justify(GTK_JUSTIFY_CENTER);
   label606->set_line_wrap(false);
   radiobutton_steigern_grad->set_flags(GTK_CAN_FOCUS);
   radiobutton_steigern_grad->set_mode(true);
   radiobutton_steigern_grad->set_active(true);
   radiobutton_steigern_gfp->set_flags(GTK_CAN_FOCUS);
   radiobutton_steigern_gfp->set_mode(true);
   radiobutton_steigern_gfp->set_active(false);
   spinbutton_gfp->set_flags(GTK_CAN_FOCUS);
   spinbutton_gfp->set_update_policy(GTK_UPDATE_ALWAYS);
   spinbutton_gfp->set_numeric(false);
   spinbutton_gfp->set_digits(0);
   spinbutton_gfp->set_wrap(false);
   spinbutton_gfp->set_snap_to_ticks(false);
   spinbutton_grad->set_flags(GTK_CAN_FOCUS);
   spinbutton_grad->set_update_policy(GTK_UPDATE_ALWAYS);
   spinbutton_grad->set_numeric(false);
   spinbutton_grad->set_digits(0);
   spinbutton_grad->set_wrap(false);
   spinbutton_grad->set_snap_to_ticks(false);
   table169->set_row_spacings(0);
   table169->set_col_spacings(0);
   table169->attach(*label606, 0, 2, 0, 1, GTK_SHRINK|GTK_FILL, GTK_SHRINK, 0, 0);
   table169->attach(*radiobutton_steigern_grad, 0, 1, 1, 2, 0, 0, 0, 0);
   table169->attach(*radiobutton_steigern_gfp, 1, 2, 1, 2, 0, 0, 0, 0);
   table169->attach(*spinbutton_gfp, 1, 2, 2, 3, 0, 0, 0, 0);
   table169->attach(*spinbutton_grad, 0, 1, 2, 3, 0, 0, 0, 0);
   button_steigern->set_flags(GTK_CAN_FOCUS);
   button_steigern->set_relief(GTK_RELIEF_NORMAL);
   table165->set_row_spacings(0);
   table165->set_col_spacings(0);
   table165->attach(*table169, 2, 3, 1, 2, GTK_EXPAND|GTK_FILL, GTK_FILL, 0, 0);
   table165->attach(*button_steigern, 0, 1, 0, 1, GTK_FILL, 0, 0, 0);
   frame111->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame111->set_label_align(0,0);
   frame111->add(*table165);
   table_zufall->set_row_spacings(0);
   table_zufall->set_col_spacings(0);
   table_zufall->attach(*frame110, 0, 1, 0, 1, 0, 0, 0, 0);
   table_zufall->attach(*frame111, 1, 2, 0, 1, 0, GTK_FILL, 0, 0);
   checkbutton_spezies->show();
   checkbutton_herkunft->show();
   checkbutton_typ->show();
   checkbutton_werte->show();
   checkbutton_ange_fert->show();
   checkbutton_st->show();
   checkbutton_gs->show();
   checkbutton_gw->show();
   checkbutton_ko->show();
   checkbutton_in->show();
   checkbutton_zt->show();
   checkbutton_au->show();
   checkbutton_pa->show();
   checkbutton_wk->show();
   checkbutton_sb->show();
   checkbutton_b->show();
   table168->show();
   table166->show();
   button_zufall_voll->show();
   togglebutton_vorgaben->show();
   table170->show();
   frame110->show();
   label606->show();
   radiobutton_steigern_grad->show();
   radiobutton_steigern_gfp->show();
   spinbutton_gfp->show();
   spinbutton_grad->show();
   table169->show();
   button_steigern->show();
   table165->show();
   frame111->show();
   table_zufall->show();
   checkbutton_werte->toggled.connect(SigC::slot(static_cast<class table_zufall*>(this), &table_zufall::on_checkbutton_werte_toggled));
   button_zufall_voll->clicked.connect(SigC::slot(static_cast<class table_zufall*>(this), &table_zufall::on_button_zufall_voll_clicked));
   togglebutton_vorgaben->toggled.connect(SigC::slot(static_cast<class table_zufall*>(this), &table_zufall::on_togglebutton_vorgaben_toggled));
   button_steigern->clicked.connect(SigC::slot(static_cast<class table_zufall*>(this), &table_zufall::on_button_steigern_clicked));
}

table_zufall_glade::~table_zufall_glade()
{  
}
