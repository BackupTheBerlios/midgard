// generated 2001/12/12 16:43:04 CET by thoma@Tiger.
// using glademm V0.6.2b_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/thoma/rollenspiel/midgard/programme/gcc_3.0/midgard/midgard.glade
// for gtk 1.2.10 and gtkmm 1.2.5
//
// Please modify the corresponding derived classes in ./src/Berufe_auswahl.cc

#include "config.h"
#include "Berufe_auswahl.hh"
#include <gtk--/adjustment.h>
#include <gtk--/button.h>
#include <gtk--/pixmap.h>
#include "../pixmaps/SchliessenIII-50.xpm"
#include "../pixmaps/Job-trans-50.xpm"
#include <gtk--/toolbar.h>
#include <gtk--/table.h>
#include <gtk--/viewport.h>
#include <gtk--/scrolledwindow.h>

Berufe_auswahl_glade::Berufe_auswahl_glade(
) : Gtk::Window(GTK_WINDOW_TOPLEVEL)
{   
   
   Gtk::Window *Berufe_auswahl = this;
   Gtk::Adjustment *spinbutton_wurf_adj = manage(new class Gtk::Adjustment(1, 1, 100, 1, 10, 10));
   spinbutton_wurf = manage(new class Gtk::SpinButton(*spinbutton_wurf_adj, 1, 0));
   
   Gtk::Toolbar *toolbar24 = manage(new class Gtk::Toolbar(GTK_ORIENTATION_HORIZONTAL, GTK_TOOLBAR_BOTH));
   Gtk::Button *button53 = Gtk::wrap((GtkButton*)gtk_toolbar_append_element(GTK_TOOLBAR(toolbar24->gtkobj()), GTK_TOOLBAR_CHILD_BUTTON, 0, "", 0, 0, GTK_WIDGET(manage(new Gtk::Pixmap(SchliessenIII_50_xpm))->gtkobj()), 0, 0));
   toolbar24->tools().push_back(Gtk::Toolbar_Helpers::Space());
   
   Gtk::Button *button_wuerfel = Gtk::wrap((GtkButton*)gtk_toolbar_append_element(GTK_TOOLBAR(toolbar24->gtkobj()), GTK_TOOLBAR_CHILD_BUTTON, 0, "Würfeln", 0, 0, GTK_WIDGET(manage(new Gtk::Pixmap(Job_trans_50_xpm))->gtkobj()), 0, 0));
   label_wuerfel = manage(new class Gtk::Label("Würfelergebnis"));
   label_kategorie = manage(new class Gtk::Label("Kategorie"));
   
   Gtk::Table *table88 = manage(new class Gtk::Table(2, 1, false));
   Beruf_tree = new class SimpleTree(3, 3);
   
   Gtk::Viewport *viewport23 = manage(new class Gtk::Viewport());
   Gtk::ScrolledWindow *scrolledwindow62 = manage(new class Gtk::ScrolledWindow());
   Gtk::Table *table9 = manage(new class Gtk::Table(2, 3, false));
   spinbutton_wurf->set_editable(true);
   _tooltips.set_tip(*button_wuerfel, "Linke Maustaste: würfeln, Rechte Maustaste: Würfelwurf eingeben", "");
   toolbar24->set_border_width(5);
   toolbar24->set_space_size(10);
   toolbar24->set_tooltips(true);
   label_wuerfel->set_alignment(0, 0.5);
   label_wuerfel->set_padding(0, 0);
   label_kategorie->set_alignment(0, 0.5);
   label_kategorie->set_padding(0, 0);
   table88->attach(*label_wuerfel, 0, 1, 0, 1, GTK_FILL, 0, 0, 0);
   table88->attach(*label_kategorie, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   viewport23->set_shadow_type(GTK_SHADOW_NONE);
   viewport23->add(*Beruf_tree);
   scrolledwindow62->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow62->add(*viewport23);
   table9->attach(*spinbutton_wurf, 1, 2, 0, 1, 0, 0, 0, 0);
   table9->attach(*toolbar24, 0, 1, 0, 1, 0, 0, 0, 0);
   table9->attach(*table88, 2, 3, 0, 1, GTK_EXPAND|GTK_FILL, GTK_FILL, 0, 0);
   table9->attach(*scrolledwindow62, 0, 3, 1, 2, GTK_FILL, GTK_EXPAND|GTK_FILL, 0, 0);
   Berufe_auswahl->set_usize(600, 400);
   Berufe_auswahl->set_title("Berufe");
   Berufe_auswahl->set_modal(true);
   Berufe_auswahl->add(*table9);
   spinbutton_wurf->show();
   toolbar24->show();
   label_wuerfel->show();
   label_kategorie->show();
   table88->show();
   Beruf_tree->show();
   viewport23->show();
   scrolledwindow62->show();
   table9->show();
   Berufe_auswahl->show();
   spinbutton_wurf->activate.connect(SigC::slot(static_cast<class Berufe_auswahl*>(this), &Berufe_auswahl::on_spinbutton_wurf_activate));
   button53->clicked.connect(SigC::slot(static_cast<class Berufe_auswahl*>(this), &Berufe_auswahl::on_close_berufe_clicked));
   button_wuerfel->button_release_event.connect(SigC::slot(static_cast<class Berufe_auswahl*>(this), &Berufe_auswahl::on_button_wuerfel_button_release_event));
   Beruf_tree->leaf_selected.connect(SigC::slot(static_cast<class Berufe_auswahl*>(this), &Berufe_auswahl::on_leaf_selected));
}

Berufe_auswahl_glade::~Berufe_auswahl_glade()
{   delete Beruf_tree;
}
