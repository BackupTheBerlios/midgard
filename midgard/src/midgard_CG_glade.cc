// generated 2001/3/14 22:01:09 CET by thoma@ig23.
// using glademm V0.5_11f_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/thoma/rollenspiel/midgard/programme/gra_mygen/midgard.glade
// for gtk 1.2.8 and gtkmm 1.2.4
//
// Please modify the corresponding derived classes in ./src/midgard_CG.cc

#include "config.h"
#include "midgard_CG.hh"
#include <gtk--/separator.h>
#include <gtk--/button.h>
#include <gtk--/menu.h>
#include <gtk--/menuitem.h>
#include <gtk--/table.h>
#include <gtk--/fixed.h>
#include <gtk--/box.h>
#include <gtk--/frame.h>
#include <gtk--/label.h>
#include <gtk--/notebook.h>
#include <gtk--/scrolledwindow.h>
#include <gtk--/paned.h>

midgard_CG_glade::midgard_CG_glade(
) : Gtk::Window(GTK_WINDOW_TOPLEVEL)
{   
   
   Gtk::Window *midgard_CG = this;
   Gtk::HSeparator *hseparator1 = manage(new class Gtk::HSeparator());
   Gtk::Button *muttersprache = manage(new class Gtk::Button("Muttersprache(n) \n"
		"wählen"));
   Gtk::Button *herkunftsland = manage(new class Gtk::Button("Herkunftsland\n"
		"wählen"));
   gw_wuerfeln = manage(new class Gtk::Button("Grundwerte\n"
		"würfeln"));
   abge_werte_setzen = manage(new class Gtk::Button("Abgeleitete \n"
		"Werte würfeln"));
   werte_editieren = manage(new class Gtk::Button("Werte\n"
		"editieren"));
   charakter_beschreibung = manage(new class Gtk::Button("Charakter\n"
		"Beschreibung"));
   typauswahl = manage(new class Gtk::OptionMenu());
   
   Gtk::Table *table25 = manage(new class Gtk::Table(4, 2, false));
   Gtk::VSeparator *vseparator12 = manage(new class Gtk::VSeparator());
   Gtk::Button *speichern = manage(new class Gtk::Button("Charakter\n"
		"speichern"));
   Gtk::Button *laden = manage(new class Gtk::Button("Charakter\n"
		"laden"));
   Gtk::Button *neuer_charakter = manage(new class Gtk::Button("Neuer \n"
		"Charakter"));
   Gtk::Fixed *fixed1 = manage(new class Gtk::Fixed());
   Gtk::VSeparator *vseparator13 = manage(new class Gtk::VSeparator());
   latex = manage(new class Gtk::Button("LaTeX\n"
		"Charakterblatt"));
   schliessen_CG = manage(new class Gtk::Button("Schließen"));
   button_hilfe = manage(new class Gtk::Button("Hilfe"));
   
   Gtk::Fixed *fixed2 = manage(new class Gtk::Fixed());
   Gtk::HBox *hbox17 = manage(new class Gtk::HBox(false, 0));
   Gtk::Frame *frame53 = manage(new class Gtk::Frame());
   lp = manage(new class Gtk::Label("X"));
   
   Gtk::Frame *frame10 = manage(new class Gtk::Frame("LP"));
   ap = manage(new class Gtk::Label("X"));
   
   Gtk::Frame *frame11 = manage(new class Gtk::Frame("AP"));
   Gtk::Fixed *fixed3 = manage(new class Gtk::Fixed());
   Gtk::Label *label271 = manage(new class Gtk::Label("psyZR"));
   Gtk::Label *label272 = manage(new class Gtk::Label("phsZR"));
   Gtk::Label *label273 = manage(new class Gtk::Label("phkZR"));
   Gtk::Label *label274 = manage(new class Gtk::Label("Gift"));
   psyZR_wert = manage(new class Gtk::Label("X"));
   phsZR_wert = manage(new class Gtk::Label("X"));
   phkZR_wert = manage(new class Gtk::Label("X"));
   gift_wert = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label275 = manage(new class Gtk::Label("Resistenz"));
   Gtk::VSeparator *vseparator16 = manage(new class Gtk::VSeparator());
   Gtk::Label *label199 = manage(new class Gtk::Label("Abwehr"));
   abwehr_wert = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label200 = manage(new class Gtk::Label("Zaubern"));
   zaubern_wert = manage(new class Gtk::Label("X"));
   
   Gtk::Table *table30 = manage(new class Gtk::Table(5, 5, false));
   Gtk::Frame *frame57 = manage(new class Gtk::Frame("Erfolgswerte"));
   Gtk::Label *label181 = manage(new class Gtk::Label("Ausdauer"));
   bo_au = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label182 = manage(new class Gtk::Label("Schaden"));
   bo_sc = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label183 = manage(new class Gtk::Label("Angriff"));
   bo_an = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label184 = manage(new class Gtk::Label("Abwehr"));
   bo_ab = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label185 = manage(new class Gtk::Label("Zauber"));
   bo_za = manage(new class Gtk::Label("X"));
   
   Gtk::VSeparator *vseparator15 = manage(new class Gtk::VSeparator());
   Gtk::Label *label189 = manage(new class Gtk::Label("Gift"));
   Gtk::Label *label188 = manage(new class Gtk::Label("phkZR"));
   Gtk::Label *label187 = manage(new class Gtk::Label("phsZR"));
   Gtk::Label *label186 = manage(new class Gtk::Label("psyZR"));
   bo_gi = manage(new class Gtk::Label("X"));
   bo_phk = manage(new class Gtk::Label("X"));
   bo_phs = manage(new class Gtk::Label("X"));
   bo_psy = manage(new class Gtk::Label("X"));
   
   Gtk::Table *table29 = manage(new class Gtk::Table(5, 5, false));
   Gtk::Frame *frame56 = manage(new class Gtk::Frame("persönliche Boni für"));
   Gtk::Label *label205 = manage(new class Gtk::Label("pA"));
   pa = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label26 = manage(new class Gtk::Label("KAW"));
   kaw = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label206 = manage(new class Gtk::Label("Sb"));
   sb = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label27 = manage(new class Gtk::Label("WLW"));
   wlw = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label207 = manage(new class Gtk::Label("RW"));
   rw = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label208 = manage(new class Gtk::Label("HGW"));
   hgw = manage(new class Gtk::Label("X"));
   lpbasis = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label204 = manage(new class Gtk::Label("Au"));
   au = manage(new class Gtk::Label("X"));
   b = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label25 = manage(new class Gtk::Label("B"));
   Gtk::VSeparator *vseparator14 = manage(new class Gtk::VSeparator());
   Gtk::Label *lp_basis = manage(new class Gtk::Label("LP-Basis"));
   Gtk::Table *table27 = manage(new class Gtk::Table(5, 5, false));
   Gtk::Frame *frame55 = manage(new class Gtk::Frame("Abgeleitete Werte"));
   Gtk::Label *lable5 = manage(new class Gtk::Label("Ge"));
   Gtk::Label *label6 = manage(new class Gtk::Label("Ko"));
   Gtk::Label *label7 = manage(new class Gtk::Label("In"));
   Gtk::Label *label18 = manage(new class Gtk::Label("Zt"));
   ge = manage(new class Gtk::Label("X"));
   ko = manage(new class Gtk::Label("X"));
   in = manage(new class Gtk::Label("X"));
   zt = manage(new class Gtk::Label("X"));
   
   Gtk::Label *label4 = manage(new class Gtk::Label("St"));
   st = manage(new class Gtk::Label("X"));
   
   Gtk::Table *table26 = manage(new class Gtk::Table(5, 2, false));
   Gtk::Frame *frame54 = manage(new class Gtk::Frame("Grundwerte"));
   herkunft = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame21 = manage(new class Gtk::Frame("Herkunft"));
   spezialisierung = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame23 = manage(new class Gtk::Frame("Spezialisierung"));
   glaube = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame22 = manage(new class Gtk::Frame("Glaube"));
   alter = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame14 = manage(new class Gtk::Frame("Alter"));
   groesse = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame17 = manage(new class Gtk::Frame("Größe"));
   gewicht = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame16 = manage(new class Gtk::Frame("Gewicht"));
   grad = manage(new class Gtk::Label("1"));
   
   Gtk::Frame *frame18 = manage(new class Gtk::Frame("Grad"));
   stand = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame20 = manage(new class Gtk::Frame("Stand"));
   name_charakter = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame30 = manage(new class Gtk::Frame("Name des Charakters"));
   gestalt = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame15 = manage(new class Gtk::Frame("Gestalt"));
   name_spieler = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame31 = manage(new class Gtk::Frame("Name des Spielers"));
   Gtk::Table *table28 = manage(new class Gtk::Table(4, 3, false));
   Gtk::Frame *frame58 = manage(new class Gtk::Frame());
   Gtk::Table *table1 = manage(new class Gtk::Table(4, 4, false));
   Gtk::Frame *frame4 = manage(new class Gtk::Frame());
   Gtk::Label *grund = manage(new class Gtk::Label("Grundwerte"));
   Gtk::Button *beruf_erfolgswert = manage(new class Gtk::Button("Erfolgswert\n"
		"auswürfeln"));
   beruf_wahl = manage(new class Gtk::Button("Beruf\n"
		"auswählen"));
   berufe_clist = manage(new class Gtk::CList(3));
   
   Gtk::Table *table31 = manage(new class Gtk::Table(2, 3, false));
   Gtk::Label *label276 = manage(new class Gtk::Label("Beruf"));
   Gtk::Button *angeborene_fertigkeit = manage(new class Gtk::Button("angeborene\n"
		"Fertigkeit würfeln"));
   fertigkeiten_wahl = manage(new class Gtk::Button("Fertigkeiten\n"
		"auswählen"));
   fertigkeiten_clist = manage(new class Gtk::CList(2));
   
   Gtk::Table *table32 = manage(new class Gtk::Table(2, 3, false));
   Gtk::Label *label277 = manage(new class Gtk::Label("Fertigkeiten"));
   label_spezialwaffe = manage(new class Gtk::Label("(Zur Wahl einer Spezialwaffe:\n"
		"Waffe selektieren)"));
   waffen_wahl = manage(new class Gtk::Button("Waffen\n"
		"auswählen"));
   waffen_clist = manage(new class Gtk::CList(2));
   
   Gtk::Table *table33 = manage(new class Gtk::Table(2, 3, false));
   Gtk::Label *label278 = manage(new class Gtk::Label("Waffen"));
   zauber_wahl = manage(new class Gtk::Button("Zauber\n"
		"auswählen"));
   option_magier_spezialgebiet = manage(new class Gtk::OptionMenu());
   zauber_clist = manage(new class Gtk::CList(2));
   
   Gtk::Table *table34 = manage(new class Gtk::Table(2, 3, false));
   Gtk::Label *label279 = manage(new class Gtk::Label("Zauber"));
   Gtk::Notebook *notebook3 = manage(new class Gtk::Notebook());
   Gtk::HSeparator *hseparator13 = manage(new class Gtk::HSeparator());
   lernpunkte_b = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame25 = manage(new class Gtk::Frame("Beruf"));
   lernpunkte_f = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame26 = manage(new class Gtk::Frame("Fertigkeiten"));
   lernpunkte_w = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame27 = manage(new class Gtk::Frame("Waffen"));
   lernpunkte_z = manage(new class Gtk::Label(""));
   
   Gtk::Frame *frame28 = manage(new class Gtk::Frame("Zauber"));
   Gtk::HBox *hbox7 = manage(new class Gtk::HBox(false, 0));
   Gtk::Frame *frame24 = manage(new class Gtk::Frame("Lernpunkte für"));
   fertig_typ = manage(new class Gtk::Label("label280"));
   
   Gtk::Frame *frame59 = manage(new class Gtk::Frame("Charakterklasse"));
   lernpunkte_wuerfeln = manage(new class Gtk::Button("Lernpunkte\n"
		"würfeln"));
   
   Gtk::Button *lernpunkte_editieren = manage(new class Gtk::Button("Lernpunkte\n"
		"editieren"));
   Gtk::Button *button_ruestung = manage(new class Gtk::Button("Rüstung\n"
		"würfeln"));
   Gtk::Button *button_geld_waffen = manage(new class Gtk::Button("Geld &\n"
		"Waffen"));
   Gtk::HSeparator *hseparator14 = manage(new class Gtk::HSeparator());
   Gtk::Table *table4 = manage(new class Gtk::Table(6, 3, false));
   Gtk::Frame *frame3 = manage(new class Gtk::Frame());
   Gtk::Label *fertigkeiten = manage(new class Gtk::Label("Lernschema"));
   Gtk::RadioButton::Group _RadioBGroup_fert;
   radio_fert_steigern = manage(new class Gtk::RadioButton(_RadioBGroup_fert, "Steigern   "));
   radio_fert_reduzieren = manage(new class Gtk::RadioButton(_RadioBGroup_fert, "Reduzieren"));
   radio_fert_verlernen = manage(new class Gtk::RadioButton(_RadioBGroup_fert, "Verlernen"));
   
   Gtk::VBox *vbox2 = manage(new class Gtk::VBox(false, 0));
   Gtk::Frame *frame43 = manage(new class Gtk::Frame());
   togglebutton_praxispunkte_fertigkeiten = manage(new class Gtk::ToggleButton("Steigern mit \n"
		"Praxispunkten"));
   
   Gtk::RadioButton::Group _RadioBGroup_praxispunkt_f;
   radiobutton_praxis_wuerfeln_fertigkeiten = manage(new class Gtk::RadioButton(_RadioBGroup_praxispunkt_f, "würfeln"));
   radiobutton_praxis_auto_fertigkeiten = manage(new class Gtk::RadioButton(_RadioBGroup_praxispunkt_f, "automatisch"));
   
   Gtk::VBox *vbox9 = manage(new class Gtk::VBox(false, 0));
   Gtk::Frame *frame49 = manage(new class Gtk::Frame());
   steigern_fert_clist_alt = manage(new class Gtk::CList(5));
   
   Gtk::ScrolledWindow *scrolledwindow28 = manage(new class Gtk::ScrolledWindow());
   steigern_fert_clist_neu = manage(new class Gtk::CList(5));
   
   Gtk::ScrolledWindow *scrolledwindow29 = manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned1 = manage(new class Gtk::VPaned());
   Gtk::Button *fertigkeiten_laden = manage(new class Gtk::Button("Fertigkeiten\n"
		"laden"));
   Gtk::Table *table15 = manage(new class Gtk::Table(2, 4, false));
   Gtk::Frame *frame40 = manage(new class Gtk::Frame());
   Gtk::Label *WidgetQMQnDHQ = manage(new class Gtk::Label("Fertigkeiten"));
   Gtk::RadioButton::Group _RadioBGroup_waffen;
   radio_waffen_steigern = manage(new class Gtk::RadioButton(_RadioBGroup_waffen, "Steigern  "));
   radio_waffen_reduzieren = manage(new class Gtk::RadioButton(_RadioBGroup_waffen, "Reduzieren"));
   
   Gtk::VBox *vbox7 = manage(new class Gtk::VBox(false, 0));
   Gtk::Frame *frame47 = manage(new class Gtk::Frame());
   togglebutton_praxispunkte_waffen = manage(new class Gtk::ToggleButton("Steigern mit \n"
		"Praxispunkten"));
   
   Gtk::RadioButton::Group _RadioBGroup_praxispunkt_w;
   radiobutton_praxis_wuerfeln_waffen = manage(new class Gtk::RadioButton(_RadioBGroup_praxispunkt_w, "würfeln"));
   radiobutton_praxis_auto_waffen = manage(new class Gtk::RadioButton(_RadioBGroup_praxispunkt_w, "automatisch"));
   
   Gtk::VBox *vbox8 = manage(new class Gtk::VBox(false, 0));
   Gtk::Frame *frame48 = manage(new class Gtk::Frame("Praxispunkte"));
   Gtk::Table *table20 = manage(new class Gtk::Table(2, 4, false));
   Gtk::Table *table19 = manage(new class Gtk::Table(1, 1, false));
   Gtk::HSeparator *hseparator11 = manage(new class Gtk::HSeparator());
   Gtk::Label *label284 = manage(new class Gtk::Label("Waffen"));
   steigern_waffen_clist_alt = manage(new class Gtk::CList(4));
   
   Gtk::ScrolledWindow *scrolledwindow30 = manage(new class Gtk::ScrolledWindow());
   steigern_waffen_clist_neu = manage(new class Gtk::CList(2));
   
   Gtk::ScrolledWindow *scrolledwindow31 = manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned6 = manage(new class Gtk::VPaned());
   Gtk::VBox *vbox16 = manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label283 = manage(new class Gtk::Label("Grundkenntnisse"));
   grundkenntnisse_clist_alt = manage(new class Gtk::CList(1));
   
   Gtk::ScrolledWindow *scrolledwindow32 = manage(new class Gtk::ScrolledWindow());
   grundkenntnisse_clist_neu = manage(new class Gtk::CList(2));
   
   Gtk::ScrolledWindow *scrolledwindow11 = manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned5 = manage(new class Gtk::VPaned());
   Gtk::VBox *vbox15 = manage(new class Gtk::VBox(false, 0));
   Gtk::HPaned *hpaned2 = manage(new class Gtk::HPaned());
   Gtk::Button *waffen_laden = manage(new class Gtk::Button("Waffen\n"
		"laden"));
   Gtk::Table *table18 = manage(new class Gtk::Table(3, 3, false));
   Gtk::Frame *frame39 = manage(new class Gtk::Frame());
   Gtk::Label *label221 = manage(new class Gtk::Label("Waffen"));
   Gtk::Button *zauber_laden = manage(new class Gtk::Button("Zauber\n"
		"laden"));
   Gtk::RadioButton::Group _RadioBGroup_spruchrolle;
   radio_spruchrolle_wuerfeln = manage(new class Gtk::RadioButton(_RadioBGroup_spruchrolle, "würfeln"));
   radio_spruchrolle_auto = manage(new class Gtk::RadioButton(_RadioBGroup_spruchrolle, "automatisch"));
   spruchrolle = manage(new class Gtk::ToggleButton("Lernen von\n"
		"Spruchrolle"));
   
   Gtk::Table *table44 = manage(new class Gtk::Table(3, 3, false));
   Gtk::Table *table21 = manage(new class Gtk::Table(1, 3, false));
   Gtk::Frame *frame44 = manage(new class Gtk::Frame());
   steigern_zauber_clist_alt = manage(new class Gtk::CList(2));
   
   Gtk::ScrolledWindow *scrolledwindow33 = manage(new class Gtk::ScrolledWindow());
   steigern_zauber_clist_neu = manage(new class Gtk::CList(4));
   
   Gtk::ScrolledWindow *scrolledwindow34 = manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned2 = manage(new class Gtk::VPaned());
   Gtk::Table *table17 = manage(new class Gtk::Table(2, 1, false));
   Gtk::Frame *frame38 = manage(new class Gtk::Frame());
   Gtk::Label *label222 = manage(new class Gtk::Label("Zauber"));
   Gtk::RadioButton::Group _RadioBGroup_sprache;
   radio_sprache_steigern = manage(new class Gtk::RadioButton(_RadioBGroup_sprache, "Steigern   "));
   radio_sprache_reduzieren = manage(new class Gtk::RadioButton(_RadioBGroup_sprache, "Reduzieren"));
   radio_sprache_verlernen = manage(new class Gtk::RadioButton(_RadioBGroup_sprache, "Verlernen"));
   
   Gtk::VBox *vbox10 = manage(new class Gtk::VBox(false, 0));
   Gtk::Frame *frame52 = manage(new class Gtk::Frame());
   Gtk::Button *sprachen_laden = manage(new class Gtk::Button("Sprachen\n"
		"& Schriften\n"
		"laden"));
   Gtk::Label *label282 = manage(new class Gtk::Label("Sprachen"));
   clist_steigern_sprachen_alt = manage(new class Gtk::CList(5));
   
   Gtk::ScrolledWindow *scrolledwindow26 = manage(new class Gtk::ScrolledWindow());
   clist_steigern_sprachen_neu = manage(new class Gtk::CList(3));
   
   Gtk::ScrolledWindow *scrolledwindow23 = manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned3 = manage(new class Gtk::VPaned());
   Gtk::VBox *vbox14 = manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label281 = manage(new class Gtk::Label("Schriften"));
   clist_steigern_schrift_alt = manage(new class Gtk::CList(3));
   
   Gtk::ScrolledWindow *scrolledwindow27 = manage(new class Gtk::ScrolledWindow());
   clist_steigern_schrift_neu = manage(new class Gtk::CList(3));
   
   Gtk::ScrolledWindow *scrolledwindow24 = manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned4 = manage(new class Gtk::VPaned());
   Gtk::VBox *vbox13 = manage(new class Gtk::VBox(false, 0));
   Gtk::HPaned *hpaned1 = manage(new class Gtk::HPaned());
   Gtk::Table *table24 = manage(new class Gtk::Table(2, 3, false));
   Gtk::Frame *frame51 = manage(new class Gtk::Frame());
   Gtk::Frame *frame50 = manage(new class Gtk::Frame());
   Gtk::Label *label254 = manage(new class Gtk::Label("Sprachen\n"
		"& Schriften"));
   Gtk::Notebook *notebook2 = manage(new class Gtk::Notebook());
   gfp = manage(new class Gtk::Label("0"));
   
   Gtk::Frame *frame41 = manage(new class Gtk::Frame("GFP"));
   grad_anstieg = manage(new class Gtk::Button("Ausdauer, Abwehr, \n"
		"Zaubern, Resistenz\n"
		"an Grad anpassen"));
   
   Gtk::Label *label308 = manage(new class Gtk::Label("Besitztümer"));
   Gtk::Button *button_waffen_s = manage(new class Gtk::Button("Waffen"));
   Gtk::Button *button_geld_s = manage(new class Gtk::Button("Geld"));
   Gtk::Button *button_ruestung_s = manage(new class Gtk::Button("Rüstung"));
   Gtk::Table *table42 = manage(new class Gtk::Table(3, 2, false));
   Gtk::Table *table14 = manage(new class Gtk::Table(2, 8, false));
   Gtk::Table *table11 = manage(new class Gtk::Table(1, 1, false));
   Gtk::Frame *frame2 = manage(new class Gtk::Frame());
   Gtk::Label *steigern = manage(new class Gtk::Label("Steigern"));
   Gtk::Notebook *notebook1 = manage(new class Gtk::Notebook());
   Gtk::Frame *frame1 = manage(new class Gtk::Frame("Midgard Charaktergenerator"));
   {   Gtk::Menu *_m(manage(new Gtk::Menu()));
      Gtk::MenuItem *_mi;
      _mi = manage(new Gtk::MenuItem("Assassine"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)0);
      _mi = manage(new Gtk::MenuItem("Barbar, Nordland"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)1);
      _mi = manage(new Gtk::MenuItem("Barbar, Steppe"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)2);
      _mi = manage(new Gtk::MenuItem("Barbar, Waldland"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)3);
      _mi = manage(new Gtk::MenuItem("Barde"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)4);
      _mi = manage(new Gtk::MenuItem("Glücksritter"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)5);
      _mi = manage(new Gtk::MenuItem("Händler"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)6);
      _mi = manage(new Gtk::MenuItem("Krieger"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)7);
      _mi = manage(new Gtk::MenuItem("Ordenskrieger"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)8);
      _mi = manage(new Gtk::MenuItem("Seefahrer"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)9);
      _mi = manage(new Gtk::MenuItem("Söldner"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)10);
      _mi = manage(new Gtk::MenuItem("Spitzbube"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)11);
      _mi = manage(new Gtk::MenuItem("Waldläufer"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)12);
      _mi = manage(new Gtk::MenuItem("Beschwörer, Dämonen"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)13);
      _mi = manage(new Gtk::MenuItem("Beschwörer, Elementare"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)14);
      _mi = manage(new Gtk::MenuItem("Druide"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)15);
      _mi = manage(new Gtk::MenuItem("Heiler"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)16);
      _mi = manage(new Gtk::MenuItem("Hexer, weiß"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)17);
      _mi = manage(new Gtk::MenuItem("Hexer, grau"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)18);
      _mi = manage(new Gtk::MenuItem("Hexer, schwarz"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)19);
      _mi = manage(new Gtk::MenuItem("Magier"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)20);
      _mi = manage(new Gtk::MenuItem("Priester, Herrschaft"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)21);
      _mi = manage(new Gtk::MenuItem("Priester, Fruchtbarkeit"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)22);
      _mi = manage(new Gtk::MenuItem("Priester, Weisheit"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)23);
      _mi = manage(new Gtk::MenuItem("Priester, Meer"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)24);
      _mi = manage(new Gtk::MenuItem("Priester, Krieg"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)25);
      _mi = manage(new Gtk::MenuItem("Priester, Tod"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)26);
      _mi = manage(new Gtk::MenuItem("Schamane"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)27);
      _mi = manage(new Gtk::MenuItem("Thaumaturge"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)28);
      _m->set_active(5);
      typauswahl->set_menu(*_m);
   }
   table25->attach(*muttersprache, 1, 2, 2, 3, GTK_FILL, 0, 3, 3);
   table25->attach(*herkunftsland, 1, 2, 1, 2, GTK_FILL, 0, 3, 3);
   table25->attach(*gw_wuerfeln, 0, 1, 1, 2, GTK_FILL, 0, 3, 3);
   table25->attach(*abge_werte_setzen, 0, 1, 2, 3, GTK_FILL, 0, 3, 3);
   table25->attach(*werte_editieren, 0, 1, 3, 4, GTK_FILL, 0, 3, 3);
   table25->attach(*charakter_beschreibung, 1, 2, 3, 4, GTK_FILL, 0, 3, 3);
   table25->attach(*typauswahl, 0, 2, 0, 1, GTK_FILL, 0, 2, 5);
   speichern->set_usize(70, 0);
   laden->set_usize(70, 0);
   neuer_charakter->set_usize(70, 0);
   fixed1->put(*speichern, 0, 64);
   fixed1->put(*laden, 0, 112);
   fixed1->put(*neuer_charakter, 0, 16);
   latex->set_usize(0, 0);
   schliessen_CG->set_usize(0, 0);
   button_hilfe->set_usize(47, 22);
   fixed2->put(*latex, 0, 64);
   fixed2->put(*schliessen_CG, 8, 120);
   fixed2->put(*button_hilfe, 16, 24);
   hbox17->pack_start(*table25, false, false, 0);
   hbox17->pack_start(*vseparator12, false, true, 5);
   hbox17->pack_start(*fixed1, false, true, 0);
   hbox17->pack_start(*vseparator13, false, true, 5);
   hbox17->pack_start(*fixed2, false, true, 6);
   frame53->set_label_align(0, 0);
   frame53->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame53->add(*hbox17);
   lp->set_alignment(0.5, 0.5);
   lp->set_padding(0, 0);
   frame10->set_usize(40, 32);
   frame10->set_label_align(0, 0);
   frame10->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame10->add(*lp);
   ap->set_alignment(0.5, 0.5);
   ap->set_padding(0, 0);
   frame11->set_usize(40, 33);
   frame11->set_label_align(0, 0);
   frame11->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame11->add(*ap);
   fixed3->put(*frame10, 32, 16);
   fixed3->put(*frame11, 32, 64);
   label271->set_alignment(0.5, 0.5);
   label271->set_padding(10, 0);
   label272->set_alignment(0.5, 0.5);
   label272->set_padding(10, 0);
   label273->set_alignment(0.5, 0.5);
   label273->set_padding(10, 0);
   label274->set_alignment(0.5, 0.5);
   label274->set_padding(10, 0);
   psyZR_wert->set_alignment(0.5, 0.5);
   psyZR_wert->set_padding(10, 0);
   phsZR_wert->set_alignment(0.5, 0.5);
   phsZR_wert->set_padding(10, 0);
   phkZR_wert->set_alignment(0.5, 0.5);
   phkZR_wert->set_padding(10, 0);
   gift_wert->set_alignment(0.5, 0.5);
   gift_wert->set_padding(10, 0);
   label275->set_alignment(0, 0.5);
   label275->set_padding(0, 0);
   label199->set_alignment(0.5, 0.5);
   label199->set_padding(10, 0);
   abwehr_wert->set_alignment(0.5, 0.5);
   abwehr_wert->set_padding(0, 0);
   label200->set_alignment(0.5, 0.5);
   label200->set_padding(10, 0);
   zaubern_wert->set_alignment(0.5, 0.5);
   zaubern_wert->set_padding(0, 0);
   table30->attach(*label271, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   table30->attach(*label272, 0, 1, 2, 3, GTK_FILL, 0, 0, 0);
   table30->attach(*label273, 0, 1, 3, 4, GTK_FILL, 0, 0, 0);
   table30->attach(*label274, 0, 1, 4, 5, GTK_FILL, 0, 0, 0);
   table30->attach(*psyZR_wert, 1, 2, 1, 2, GTK_FILL, 0, 0, 0);
   table30->attach(*phsZR_wert, 1, 2, 2, 3, GTK_FILL, 0, 0, 0);
   table30->attach(*phkZR_wert, 1, 2, 3, 4, GTK_FILL, 0, 0, 0);
   table30->attach(*gift_wert, 1, 2, 4, 5, GTK_FILL, 0, 0, 0);
   table30->attach(*label275, 0, 2, 0, 1, 0, 0, 0, 0);
   table30->attach(*vseparator16, 2, 3, 0, 5, GTK_EXPAND|GTK_FILL, GTK_FILL, 0, 0);
   table30->attach(*label199, 3, 4, 1, 2, GTK_FILL, 0, 0, 0);
   table30->attach(*abwehr_wert, 4, 5, 1, 2, GTK_FILL, 0, 0, 0);
   table30->attach(*label200, 3, 4, 2, 3, GTK_FILL, 0, 0, 0);
   table30->attach(*zaubern_wert, 4, 5, 2, 3, GTK_FILL, 0, 0, 0);
   frame57->set_label_align(0, 0);
   frame57->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame57->add(*table30);
   label181->set_alignment(0.5, 0.5);
   label181->set_padding(10, 0);
   bo_au->set_alignment(0.5, 0.5);
   bo_au->set_padding(0, 0);
   label182->set_alignment(0.5, 0.5);
   label182->set_padding(10, 0);
   bo_sc->set_alignment(0.5, 0.5);
   bo_sc->set_padding(0, 0);
   label183->set_alignment(0.5, 0.5);
   label183->set_padding(10, 0);
   bo_an->set_alignment(0.5, 0.5);
   bo_an->set_padding(0, 0);
   label184->set_alignment(0.5, 0.5);
   label184->set_padding(10, 0);
   bo_ab->set_alignment(0.5, 0.5);
   bo_ab->set_padding(0, 0);
   label185->set_alignment(0.5, 0.5);
   label185->set_padding(10, 0);
   bo_za->set_alignment(0.5, 0.5);
   bo_za->set_padding(0, 0);
   label189->set_alignment(0.5, 0.5);
   label189->set_padding(10, 0);
   label188->set_alignment(0.5, 0.5);
   label188->set_padding(10, 0);
   label187->set_alignment(0.5, 0.5);
   label187->set_padding(10, 0);
   label186->set_alignment(0.5, 0.5);
   label186->set_padding(10, 0);
   bo_gi->set_alignment(0.5, 0.5);
   bo_gi->set_padding(0, 0);
   bo_phk->set_alignment(0.5, 0.5);
   bo_phk->set_padding(0, 0);
   bo_phs->set_alignment(0.5, 0.5);
   bo_phs->set_padding(0, 0);
   bo_psy->set_alignment(0.5, 0.5);
   bo_psy->set_padding(0, 0);
   table29->attach(*label181, 0, 1, 0, 1, GTK_FILL, 0, 0, 0);
   table29->attach(*bo_au, 1, 2, 0, 1, GTK_FILL, 0, 0, 0);
   table29->attach(*label182, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   table29->attach(*bo_sc, 1, 2, 1, 2, GTK_FILL, 0, 0, 0);
   table29->attach(*label183, 0, 1, 2, 3, GTK_FILL, 0, 0, 0);
   table29->attach(*bo_an, 1, 2, 2, 3, GTK_FILL, 0, 0, 0);
   table29->attach(*label184, 0, 1, 3, 4, GTK_FILL, 0, 0, 0);
   table29->attach(*bo_ab, 1, 2, 3, 4, GTK_FILL, 0, 0, 0);
   table29->attach(*label185, 0, 1, 4, 5, GTK_FILL, 0, 0, 0);
   table29->attach(*bo_za, 1, 2, 4, 5, GTK_FILL, 0, 0, 0);
   table29->attach(*vseparator15, 2, 3, 0, 5, GTK_EXPAND|GTK_FILL, GTK_FILL, 0, 0);
   table29->attach(*label189, 3, 4, 4, 5, GTK_FILL, 0, 0, 0);
   table29->attach(*label188, 3, 4, 3, 4, GTK_FILL, 0, 0, 0);
   table29->attach(*label187, 3, 4, 2, 3, GTK_FILL, 0, 0, 0);
   table29->attach(*label186, 3, 4, 1, 2, GTK_FILL, 0, 0, 0);
   table29->attach(*bo_gi, 4, 5, 4, 5, GTK_FILL, 0, 0, 0);
   table29->attach(*bo_phk, 4, 5, 3, 4, GTK_FILL, 0, 0, 0);
   table29->attach(*bo_phs, 4, 5, 2, 3, GTK_FILL, 0, 0, 0);
   table29->attach(*bo_psy, 4, 5, 1, 2, GTK_FILL, 0, 0, 0);
   frame56->set_label_align(0, 0);
   frame56->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame56->add(*table29);
   label205->set_alignment(0.5, 0.5);
   label205->set_padding(0, 0);
   pa->set_alignment(0.5, 0.5);
   pa->set_padding(0, 0);
   label26->set_usize(29, -1);
   label26->set_alignment(0.5, 0.5);
   label26->set_padding(0, 0);
   kaw->set_alignment(0.5, 0.5);
   kaw->set_padding(0, 0);
   label206->set_alignment(0.5, 0.5);
   label206->set_padding(0, 0);
   sb->set_alignment(0.5, 0.5);
   sb->set_padding(0, 0);
   label27->set_alignment(0.5, 0.5);
   label27->set_padding(0, 0);
   wlw->set_alignment(0.5, 0.5);
   wlw->set_padding(0, 0);
   label207->set_alignment(0.5, 0.5);
   label207->set_padding(0, 0);
   rw->set_alignment(0.5, 0.5);
   rw->set_padding(0, 0);
   label208->set_alignment(0.5, 0.5);
   label208->set_padding(0, 0);
   hgw->set_alignment(0.5, 0.5);
   hgw->set_padding(0, 0);
   lpbasis->set_alignment(0.5, 0.5);
   lpbasis->set_padding(0, 0);
   label204->set_alignment(0.5, 0.5);
   label204->set_padding(0, 0);
   au->set_alignment(0.5, 0.5);
   au->set_padding(0, 0);
   b->set_alignment(0.5, 0.5);
   b->set_padding(0, 0);
   label25->set_usize(29, -1);
   label25->set_alignment(0.5, 0.5);
   label25->set_padding(0, 0);
   lp_basis->set_alignment(0.5, 0.5);
   lp_basis->set_padding(0, 0);
   table27->attach(*label205, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   table27->attach(*pa, 1, 2, 1, 2, GTK_FILL, 0, 0, 0);
   table27->attach(*label26, 3, 4, 1, 2, GTK_FILL, 0, 0, 0);
   table27->attach(*kaw, 4, 5, 1, 2, GTK_FILL, 0, 0, 0);
   table27->attach(*label206, 0, 1, 2, 3, GTK_FILL, 0, 0, 0);
   table27->attach(*sb, 1, 2, 2, 3, GTK_FILL, 0, 0, 0);
   table27->attach(*label27, 3, 4, 2, 3, GTK_FILL, 0, 0, 0);
   table27->attach(*wlw, 4, 5, 2, 3, GTK_FILL, 0, 0, 0);
   table27->attach(*label207, 0, 1, 3, 4, GTK_FILL, 0, 0, 0);
   table27->attach(*rw, 1, 2, 3, 4, GTK_FILL, 0, 0, 0);
   table27->attach(*label208, 3, 4, 3, 4, GTK_FILL, 0, 0, 0);
   table27->attach(*hgw, 4, 5, 3, 4, GTK_FILL, 0, 0, 0);
   table27->attach(*lpbasis, 4, 5, 4, 5, GTK_FILL, 0, 0, 0);
   table27->attach(*label204, 0, 1, 0, 1, GTK_EXPAND|GTK_FILL, 0, 0, 0);
   table27->attach(*au, 1, 2, 0, 1, GTK_EXPAND|GTK_FILL, 0, 0, 0);
   table27->attach(*b, 4, 5, 0, 1, GTK_EXPAND|GTK_FILL, 0, 0, 0);
   table27->attach(*label25, 3, 4, 0, 1, GTK_EXPAND|GTK_FILL, 0, 0, 0);
   table27->attach(*vseparator14, 2, 3, 0, 4, GTK_FILL, GTK_FILL, 0, 0);
   table27->attach(*lp_basis, 0, 4, 4, 5, GTK_FILL, 0, 0, 0);
   frame55->set_label_align(0, 0);
   frame55->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame55->add(*table27);
   lable5->set_alignment(0.5, 0.5);
   lable5->set_padding(0, 0);
   label6->set_alignment(0.5, 0.5);
   label6->set_padding(0, 0);
   label7->set_alignment(0.5, 0.5);
   label7->set_padding(0, 0);
   label18->set_alignment(0.5, 0.5);
   label18->set_padding(0, 0);
   ge->set_usize(22, -1);
   ge->set_alignment(0.5, 0.5);
   ge->set_padding(0, 0);
   ko->set_usize(22, -1);
   ko->set_alignment(0.5, 0.5);
   ko->set_padding(0, 0);
   in->set_usize(22, -1);
   in->set_alignment(0.5, 0.5);
   in->set_padding(0, 0);
   zt->set_usize(22, -1);
   zt->set_alignment(0.5, 0.5);
   zt->set_padding(0, 0);
   label4->set_alignment(0.5, 0.5);
   label4->set_padding(6, 0);
   st->set_usize(22, -1);
   st->set_alignment(0.5, 0.5);
   st->set_padding(0, 0);
   table26->attach(*lable5, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   table26->attach(*label6, 0, 1, 2, 3, GTK_FILL, 0, 0, 0);
   table26->attach(*label7, 0, 1, 3, 4, GTK_FILL, 0, 0, 0);
   table26->attach(*label18, 0, 1, 4, 5, GTK_FILL, 0, 0, 0);
   table26->attach(*ge, 1, 2, 1, 2, GTK_FILL, 0, 0, 0);
   table26->attach(*ko, 1, 2, 2, 3, GTK_FILL, 0, 0, 0);
   table26->attach(*in, 1, 2, 3, 4, GTK_FILL, 0, 0, 0);
   table26->attach(*zt, 1, 2, 4, 5, GTK_FILL, 0, 0, 0);
   table26->attach(*label4, 0, 1, 0, 1, GTK_EXPAND, 0, 0, 0);
   table26->attach(*st, 1, 2, 0, 1, GTK_EXPAND|GTK_FILL, 0, 0, 0);
   frame54->set_label_align(0, 0);
   frame54->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame54->add(*table26);
   herkunft->set_alignment(0.5, 0.5);
   herkunft->set_padding(0, 0);
   frame21->set_label_align(0, 0);
   frame21->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame21->add(*herkunft);
   spezialisierung->set_alignment(0.5, 0.5);
   spezialisierung->set_padding(0, 0);
   frame23->set_label_align(0, 0);
   frame23->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame23->add(*spezialisierung);
   glaube->set_alignment(0.5, 0.5);
   glaube->set_padding(0, 0);
   frame22->set_label_align(0, 0);
   frame22->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame22->add(*glaube);
   alter->set_alignment(0.5, 0.5);
   alter->set_padding(0, 0);
   frame14->set_label_align(0, 0);
   frame14->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame14->add(*alter);
   groesse->set_alignment(0.5, 0.5);
   groesse->set_padding(0, 0);
   frame17->set_label_align(0, 0);
   frame17->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame17->add(*groesse);
   gewicht->set_alignment(0.5, 0.5);
   gewicht->set_padding(0, 0);
   frame16->set_label_align(0, 0);
   frame16->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame16->add(*gewicht);
   grad->set_alignment(0.5, 0.5);
   grad->set_padding(0, 0);
   frame18->set_label_align(0, 0);
   frame18->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame18->add(*grad);
   stand->set_alignment(0.5, 0.5);
   stand->set_padding(0, 0);
   frame20->set_label_align(0, 0);
   frame20->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame20->add(*stand);
   name_charakter->set_alignment(0.5, 0.5);
   name_charakter->set_padding(0, 0);
   frame30->set_label_align(0, 0);
   frame30->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame30->add(*name_charakter);
   gestalt->set_alignment(0.5, 0.5);
   gestalt->set_padding(0, 0);
   frame15->set_label_align(0, 0);
   frame15->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame15->add(*gestalt);
   name_spieler->set_alignment(0.5, 0.5);
   name_spieler->set_padding(0, 0);
   frame31->set_label_align(0, 0);
   frame31->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame31->add(*name_spieler);
   table28->attach(*frame21, 2, 3, 1, 2, GTK_FILL, 0, 3, 0);
   table28->attach(*frame23, 0, 1, 1, 2, GTK_FILL, 0, 3, 0);
   table28->attach(*frame22, 0, 1, 2, 3, GTK_FILL, 0, 3, 0);
   table28->attach(*frame14, 0, 1, 3, 4, GTK_FILL, 0, 3, 0);
   table28->attach(*frame17, 1, 2, 3, 4, GTK_FILL, 0, 3, 0);
   table28->attach(*frame16, 2, 3, 2, 3, GTK_FILL, 0, 3, 0);
   table28->attach(*frame18, 2, 3, 0, 1, GTK_FILL, 0, 3, 0);
   table28->attach(*frame20, 1, 2, 1, 2, GTK_FILL, 0, 3, 0);
   table28->attach(*frame30, 0, 1, 0, 1, GTK_FILL, 0, 3, 0);
   table28->attach(*frame15, 1, 2, 2, 3, GTK_FILL, 0, 3, 0);
   table28->attach(*frame31, 1, 2, 0, 1, GTK_FILL, 0, 3, 0);
   frame58->set_label_align(0, 0);
   frame58->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame58->add(*table28);
   table1->attach(*hseparator1, 0, 4, 1, 2, GTK_FILL, GTK_FILL, 0, 6);
   table1->attach(*frame53, 0, 3, 0, 1, 0, 0, 0, 0);
   table1->attach(*fixed3, 3, 4, 2, 3, GTK_FILL, GTK_FILL, 0, 0);
   table1->attach(*frame57, 3, 4, 3, 4, 0, GTK_FILL, 5, 0);
   table1->attach(*frame56, 2, 3, 3, 4, GTK_FILL, 0, 5, 0);
   table1->attach(*frame55, 1, 2, 3, 4, GTK_FILL, 0, 5, 0);
   table1->attach(*frame54, 0, 1, 3, 4, GTK_FILL, 0, 5, 0);
   table1->attach(*frame58, 0, 3, 2, 3, GTK_FILL, GTK_FILL, 0, 5);
   frame4->set_label_align(0, 0);
   frame4->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame4->add(*table1);
   grund->set_alignment(0.5, 0.5);
   grund->set_padding(0, 0);
   berufe_clist->set_usize(350, 300);
   berufe_clist->set_column_title(0, "Beruf");
   berufe_clist->set_column_width(0, 80);
   berufe_clist->set_column_title(1, "Vorteile");
   berufe_clist->set_column_width(1, 80);
   berufe_clist->set_column_title(2, "Wert");
   berufe_clist->set_column_justification(2, GTK_JUSTIFY_RIGHT);
   berufe_clist->set_column_width(2, 80);
   berufe_clist->column_titles_show();
   table31->attach(*beruf_erfolgswert, 2, 3, 0, 1, 0, 0, 0, 0);
   table31->attach(*beruf_wahl, 0, 1, 0, 1, 0, 0, 5, 5);
   table31->attach(*berufe_clist, 0, 3, 1, 2, 0, GTK_FILL, 0, 0);
   label276->set_alignment(0.5, 0.5);
   label276->set_padding(0, 0);
   fertigkeiten_clist->set_usize(300, 300);
   fertigkeiten_clist->set_column_title(0, "Fertigkeit");
   fertigkeiten_clist->set_column_width(0, 80);
   fertigkeiten_clist->set_column_title(1, "Wert");
   fertigkeiten_clist->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   fertigkeiten_clist->set_column_width(1, 80);
   fertigkeiten_clist->column_titles_show();
   table32->attach(*angeborene_fertigkeit, 2, 3, 0, 1, 0, 0, 0, 0);
   table32->attach(*fertigkeiten_wahl, 0, 1, 0, 1, 0, 0, 5, 5);
   table32->attach(*fertigkeiten_clist, 0, 3, 1, 2, 0, GTK_FILL, 0, 0);
   label277->set_alignment(0.5, 0.5);
   label277->set_padding(0, 0);
   label_spezialwaffe->set_alignment(0, 0.5);
   label_spezialwaffe->set_padding(21, 0);
   waffen_clist->set_usize(300, 300);
   waffen_clist->set_column_title(0, "Waffen");
   waffen_clist->set_column_width(0, 80);
   waffen_clist->set_column_title(1, "Wert");
   waffen_clist->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   waffen_clist->set_column_width(1, 80);
   waffen_clist->column_titles_show();
   table33->attach(*label_spezialwaffe, 2, 3, 0, 1, GTK_FILL, 0, 0, 0);
   table33->attach(*waffen_wahl, 0, 1, 0, 1, GTK_FILL, 0, 5, 5);
   table33->attach(*waffen_clist, 0, 3, 1, 2, GTK_FILL, GTK_FILL, 0, 0);
   label278->set_alignment(0.5, 0.5);
   label278->set_padding(0, 0);
   {   
      
      Gtk::Menu *_m(manage(new Gtk::Menu()));
      Gtk::MenuItem *_mi;
      _mi = manage(new Gtk::MenuItem("SPEZIALGEBIET"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)0);
      _mi = manage(new Gtk::MenuItem("Adept der Herrschaft"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)1);
      _mi = manage(new Gtk::MenuItem("Adept der Bewegung"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)2);
      _mi = manage(new Gtk::MenuItem("Adept der Erkenntnis"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)3);
      _mi = manage(new Gtk::MenuItem("Adept der Schöfung"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)4);
      _mi = manage(new Gtk::MenuItem("Adept der Veränderung"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)5);
      _mi = manage(new Gtk::MenuItem("Adept der Wandlung"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)6);
      _mi = manage(new Gtk::MenuItem("Adept der Zerstörung"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)7);
      _mi = manage(new Gtk::MenuItem("Erdmagier"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)8);
      _mi = manage(new Gtk::MenuItem("Feuermagier"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)9);
      _mi = manage(new Gtk::MenuItem("Luftmagier"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)10);
      _mi = manage(new Gtk::MenuItem("Wassermagier"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)11);
      _mi = manage(new Gtk::MenuItem("Eismagier"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)12);
      _mi = manage(new Gtk::MenuItem("Adept der göttlichen Ordnung"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)13);
      _mi = manage(new Gtk::MenuItem("Adept des formbaren Chaos"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)14);
      _mi = manage(new Gtk::MenuItem("Adept des Todes"));
      _m->append(*_mi);
      _mi->show();
      _mi->set_user_data((gpointer)15);
      _m->set_active(0);
      option_magier_spezialgebiet->set_menu(*_m);
   }
   zauber_clist->set_usize(300, 300);
   zauber_clist->set_column_title(0, "Zauber");
   zauber_clist->set_column_width(0, 80);
   zauber_clist->set_column_title(1, "Wert");
   zauber_clist->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   zauber_clist->set_column_width(1, 78);
   zauber_clist->column_titles_show();
   table34->attach(*zauber_wahl, 0, 1, 0, 1, GTK_FILL, 0, 5, 5);
   table34->attach(*option_magier_spezialgebiet, 2, 3, 0, 1, GTK_FILL, 0, 5, 0);
   table34->attach(*zauber_clist, 0, 3, 1, 2, GTK_FILL, GTK_FILL, 0, 0);
   label279->set_alignment(0.5, 0.5);
   label279->set_padding(0, 0);
   notebook3->set_show_tabs(true);
   notebook3->set_tab_border(3);
   notebook3->pages().push_back(Gtk::Notebook_Helpers::TabElem(*table31, *label276));
   notebook3->pages().push_back(Gtk::Notebook_Helpers::TabElem(*table32, *label277));
   notebook3->pages().push_back(Gtk::Notebook_Helpers::TabElem(*table33, *label278));
   notebook3->pages().push_back(Gtk::Notebook_Helpers::TabElem(*table34, *label279));
   lernpunkte_b->set_alignment(0.5, 0.5);
   lernpunkte_b->set_padding(0, 0);
   frame25->set_label_align(0, 0);
   frame25->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame25->add(*lernpunkte_b);
   lernpunkte_f->set_alignment(0.5, 0.5);
   lernpunkte_f->set_padding(0, 0);
   frame26->set_label_align(0, 0);
   frame26->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame26->add(*lernpunkte_f);
   lernpunkte_w->set_alignment(0.5, 0.5);
   lernpunkte_w->set_padding(0, 0);
   frame27->set_label_align(0, 0);
   frame27->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame27->add(*lernpunkte_w);
   lernpunkte_z->set_alignment(0.5, 0.5);
   lernpunkte_z->set_padding(0, 0);
   frame28->set_label_align(0, 0);
   frame28->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame28->add(*lernpunkte_z);
   hbox7->pack_start(*frame25);
   hbox7->pack_start(*frame26);
   hbox7->pack_start(*frame27);
   hbox7->pack_start(*frame28);
   frame24->set_label_align(0, 0);
   frame24->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame24->add(*hbox7);
   fertig_typ->set_alignment(0.5, 0.5);
   fertig_typ->set_padding(0, 0);
   frame59->set_label_align(0, 0);
   frame59->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame59->add(*fertig_typ);
   button_ruestung->set_usize(60, -1);
   button_geld_waffen->set_usize(60, -1);
   table4->attach(*notebook3, 0, 3, 5, 6, GTK_FILL, GTK_FILL, 0, 0);
   table4->attach(*hseparator13, 0, 3, 4, 5, GTK_FILL, GTK_FILL, 0, 5);
   table4->attach(*frame24, 0, 3, 3, 4, GTK_FILL, 0, 0, 0);
   table4->attach(*frame59, 2, 3, 0, 1, 0, 0, 0, 0);
   table4->attach(*lernpunkte_wuerfeln, 0, 1, 0, 1, 0, 0, 0, 5);
   table4->attach(*lernpunkte_editieren, 0, 1, 1, 2, 0, 0, 0, 5);
   table4->attach(*button_ruestung, 1, 2, 1, 2, 0, 0, 0, 5);
   table4->attach(*button_geld_waffen, 1, 2, 0, 1, 0, 0, 0, 5);
   table4->attach(*hseparator14, 0, 3, 2, 3, GTK_FILL, GTK_FILL, 0, 3);
   frame3->set_label_align(0, 0);
   frame3->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame3->add(*table4);
   fertigkeiten->set_alignment(0.5, 0.5);
   fertigkeiten->set_padding(0, 0);
   vbox2->pack_start(*radio_fert_steigern, false, false, 0);
   vbox2->pack_start(*radio_fert_reduzieren, false, false, 0);
   vbox2->pack_start(*radio_fert_verlernen, false, false, 0);
   frame43->set_label_align(0, 0);
   frame43->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame43->add(*vbox2);
   radiobutton_praxis_wuerfeln_fertigkeiten->set_active(true);
   vbox9->pack_start(*togglebutton_praxispunkte_fertigkeiten, false, false, 0);
   vbox9->pack_start(*radiobutton_praxis_wuerfeln_fertigkeiten, false, false, 0);
   vbox9->pack_start(*radiobutton_praxis_auto_fertigkeiten, false, false, 0);
   frame49->set_label_align(0, 0);
   frame49->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame49->add(*vbox9);
   steigern_fert_clist_alt->set_column_title(0, "Fertigkeit");
   steigern_fert_clist_alt->set_column_width(0, 80);
   steigern_fert_clist_alt->set_column_title(1, "Wert");
   steigern_fert_clist_alt->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   steigern_fert_clist_alt->set_column_width(1, 80);
   steigern_fert_clist_alt->set_column_title(2, "Steigern\n"
		"(nächste Stufe)");
   steigern_fert_clist_alt->set_column_justification(2, GTK_JUSTIFY_CENTER);
   steigern_fert_clist_alt->set_column_width(2, 89);
   steigern_fert_clist_alt->set_column_title(3, "Reduzieren\n"
		"(eine Stufe)");
   steigern_fert_clist_alt->set_column_justification(3, GTK_JUSTIFY_CENTER);
   steigern_fert_clist_alt->set_column_width(3, 80);
   steigern_fert_clist_alt->set_column_title(4, "Verlernen\n"
		"         ");
   steigern_fert_clist_alt->set_column_justification(4, GTK_JUSTIFY_CENTER);
   steigern_fert_clist_alt->set_column_width(4, 80);
   steigern_fert_clist_alt->column_titles_show();
   scrolledwindow28->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow28->add(*steigern_fert_clist_alt);
   steigern_fert_clist_neu->set_column_title(0, "Fertigkeit");
   steigern_fert_clist_neu->set_column_width(0, 80);
   steigern_fert_clist_neu->set_column_title(1, "Wert");
   steigern_fert_clist_neu->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   steigern_fert_clist_neu->set_column_width(1, 80);
   steigern_fert_clist_neu->set_column_title(2, "Lernkosten");
   steigern_fert_clist_neu->set_column_justification(2, GTK_JUSTIFY_RIGHT);
   steigern_fert_clist_neu->set_column_width(2, 80);
   steigern_fert_clist_neu->set_column_title(3, "Art");
   steigern_fert_clist_neu->set_column_width(3, 80);
   steigern_fert_clist_neu->set_column_title(4, "Vorraussetzungen");
   steigern_fert_clist_neu->set_column_width(4, 80);
   steigern_fert_clist_neu->column_titles_show();
   scrolledwindow29->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow29->add(*steigern_fert_clist_neu);
   vpaned1->set_usize(465, 350);
   vpaned1->set_handle_size(10);
   vpaned1->set_gutter_size(20);
   vpaned1->set_position(175);
   vpaned1->pack1(*scrolledwindow28, false, true);
   vpaned1->pack2(*scrolledwindow29, true, true);
   table15->attach(*frame43, 0, 1, 0, 1, GTK_FILL, GTK_FILL, 0, 0);
   table15->attach(*frame49, 1, 2, 0, 1, GTK_FILL, GTK_FILL, 0, 0);
   table15->attach(*vpaned1, 0, 4, 1, 2, GTK_FILL, 0, 0, 0);
   table15->attach(*fertigkeiten_laden, 3, 4, 0, 1, 0, 0, 0, 0);
   frame40->set_label_align(0, 0);
   frame40->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame40->add(*table15);
   WidgetQMQnDHQ->set_alignment(0.5, 0.5);
   WidgetQMQnDHQ->set_padding(0, 0);
   radio_waffen_steigern->set_active(true);
   vbox7->pack_start(*radio_waffen_steigern, false, false, 0);
   vbox7->pack_start(*radio_waffen_reduzieren, false, false, 0);
   frame47->set_label_align(0, 0);
   frame47->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame47->add(*vbox7);
   radiobutton_praxis_wuerfeln_waffen->set_active(true);
   vbox8->pack_start(*togglebutton_praxispunkte_waffen, false, false, 0);
   vbox8->pack_start(*radiobutton_praxis_wuerfeln_waffen, false, false, 0);
   vbox8->pack_start(*radiobutton_praxis_auto_waffen, false, false, 0);
   frame48->set_label_align(0, 0);
   frame48->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame48->add(*vbox8);
   table20->attach(*frame47, 0, 1, 0, 2, GTK_EXPAND|GTK_FILL, GTK_FILL, 0, 0);
   table20->attach(*frame48, 2, 3, 0, 2, GTK_EXPAND|GTK_FILL, GTK_FILL, 0, 0);
   table19->attach(*table20, 0, 1, 0, 1, GTK_EXPAND|GTK_FILL, GTK_EXPAND|GTK_FILL, 0, 0);
   label284->set_alignment(0.5, 0.5);
   label284->set_padding(0, 0);
   steigern_waffen_clist_alt->set_column_title(0, "Waffe");
   steigern_waffen_clist_alt->set_column_width(0, 80);
   steigern_waffen_clist_alt->set_column_title(1, "Wert");
   steigern_waffen_clist_alt->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   steigern_waffen_clist_alt->set_column_width(1, 80);
   steigern_waffen_clist_alt->set_column_title(2, "Steigern\n"
		"(nächste Stufe)");
   steigern_waffen_clist_alt->set_column_justification(2, GTK_JUSTIFY_CENTER);
   steigern_waffen_clist_alt->set_column_width(2, 80);
   steigern_waffen_clist_alt->set_column_title(3, "Reduzieren\n"
		"(eine Stufe)");
   steigern_waffen_clist_alt->set_column_justification(3, GTK_JUSTIFY_CENTER);
   steigern_waffen_clist_alt->set_column_width(3, 80);
   steigern_waffen_clist_alt->column_titles_show();
   scrolledwindow30->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow30->add(*steigern_waffen_clist_alt);
   steigern_waffen_clist_neu->set_usize(179, -1);
   steigern_waffen_clist_neu->set_column_title(0, "Waffe");
   steigern_waffen_clist_neu->set_column_width(0, 80);
   steigern_waffen_clist_neu->set_column_title(1, "Wert");
   steigern_waffen_clist_neu->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   steigern_waffen_clist_neu->set_column_width(1, 80);
   steigern_waffen_clist_neu->column_titles_show();
   scrolledwindow31->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow31->add(*steigern_waffen_clist_neu);
   vpaned6->set_handle_size(10);
   vpaned6->set_gutter_size(10);
   vpaned6->set_position(142);
   vpaned6->pack1(*scrolledwindow30, false, true);
   vpaned6->pack2(*scrolledwindow31, true, true);
   vbox16->pack_start(*label284, false, false, 10);
   vbox16->pack_start(*vpaned6);
   label283->set_alignment(0.5, 0.5);
   label283->set_padding(0, 0);
   grundkenntnisse_clist_alt->set_column_title(0, "Grundkenntnisse in");
   grundkenntnisse_clist_alt->set_column_width(0, 80);
   grundkenntnisse_clist_alt->column_titles_show();
   scrolledwindow32->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow32->add(*grundkenntnisse_clist_alt);
   grundkenntnisse_clist_neu->set_column_title(0, "Grundkenntnis");
   grundkenntnisse_clist_neu->set_column_width(0, 80);
   grundkenntnisse_clist_neu->set_column_title(1, "Kosten");
   grundkenntnisse_clist_neu->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   grundkenntnisse_clist_neu->set_column_width(1, 80);
   grundkenntnisse_clist_neu->column_titles_show();
   scrolledwindow11->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow11->add(*grundkenntnisse_clist_neu);
   vpaned5->set_handle_size(10);
   vpaned5->set_gutter_size(10);
   vpaned5->set_position(143);
   vpaned5->pack1(*scrolledwindow32, false, true);
   vpaned5->pack2(*scrolledwindow11, true, true);
   vbox15->pack_start(*label283, false, false, 10);
   vbox15->pack_start(*vpaned5);
   hpaned2->set_usize(600, 350);
   hpaned2->set_handle_size(10);
   hpaned2->set_gutter_size(10);
   hpaned2->set_position(378);
   hpaned2->pack1(*vbox16, false, true);
   hpaned2->pack2(*vbox15, true, true);
   table18->attach(*table19, 0, 1, 0, 1, GTK_FILL, GTK_FILL, 0, 0);
   table18->attach(*hseparator11, 0, 3, 2, 3, GTK_SHRINK, GTK_SHRINK, 1, 10);
   table18->attach(*hpaned2, 0, 3, 1, 2, GTK_FILL, GTK_EXPAND|GTK_FILL, 0, 0);
   table18->attach(*waffen_laden, 1, 2, 0, 1, 0, 0, 0, 0);
   frame39->set_label_align(0, 0);
   frame39->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame39->add(*table18);
   label221->set_alignment(0.5, 0.5);
   label221->set_padding(0, 0);
   table44->attach(*radio_spruchrolle_wuerfeln, 2, 3, 1, 2, GTK_FILL, 0, 0, 0);
   table44->attach(*radio_spruchrolle_auto, 2, 3, 2, 3, GTK_FILL, 0, 0, 0);
   table44->attach(*spruchrolle, 2, 3, 0, 1, 0, 0, 0, 0);
   table21->attach(*zauber_laden, 0, 1, 0, 1, GTK_FILL, 0, 5, 5);
   table21->attach(*table44, 1, 2, 0, 1, GTK_EXPAND|GTK_FILL, GTK_FILL, 0, 0);
   frame44->set_label_align(0, 0);
   frame44->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame44->add(*table21);
   steigern_zauber_clist_alt->set_usize(250, -1);
   steigern_zauber_clist_alt->set_column_title(0, "Name");
   steigern_zauber_clist_alt->set_column_width(0, 80);
   steigern_zauber_clist_alt->set_column_title(1, "Kosten");
   steigern_zauber_clist_alt->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   steigern_zauber_clist_alt->set_column_width(1, 80);
   steigern_zauber_clist_alt->column_titles_show();
   scrolledwindow33->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow33->add(*steigern_zauber_clist_alt);
   steigern_zauber_clist_neu->set_usize(250, -1);
   steigern_zauber_clist_neu->set_column_title(0, "Stufe");
   steigern_zauber_clist_neu->set_column_justification(0, GTK_JUSTIFY_CENTER);
   steigern_zauber_clist_neu->set_column_width(0, 80);
   steigern_zauber_clist_neu->set_column_title(1, "Name");
   steigern_zauber_clist_neu->set_column_width(1, 80);
   steigern_zauber_clist_neu->set_column_title(2, "Kosten");
   steigern_zauber_clist_neu->set_column_justification(2, GTK_JUSTIFY_RIGHT);
   steigern_zauber_clist_neu->set_column_width(2, 80);
   steigern_zauber_clist_neu->set_column_title(3, "Art");
   steigern_zauber_clist_neu->set_column_width(3, 80);
   steigern_zauber_clist_neu->column_titles_show();
   scrolledwindow34->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow34->add(*steigern_zauber_clist_neu);
   vpaned2->set_usize(491, 350);
   vpaned2->set_handle_size(10);
   vpaned2->set_gutter_size(10);
   vpaned2->set_position(175);
   vpaned2->pack1(*scrolledwindow33, false, true);
   vpaned2->pack2(*scrolledwindow34, true, true);
   table17->attach(*frame44, 0, 1, 0, 1, GTK_FILL, GTK_FILL, 0, 0);
   table17->attach(*vpaned2, 0, 1, 1, 2, 0, GTK_FILL, 0, 0);
   frame38->set_label_align(0, 0);
   frame38->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame38->add(*table17);
   label222->set_alignment(0.5, 0.5);
   label222->set_padding(0, 0);
   vbox10->pack_start(*radio_sprache_steigern, false, false, 0);
   vbox10->pack_start(*radio_sprache_reduzieren, false, false, 0);
   vbox10->pack_start(*radio_sprache_verlernen, false, false, 0);
   frame52->set_usize(1, -1);
   frame52->set_label_align(0, 0);
   frame52->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame52->add(*vbox10);
   label282->set_alignment(0.5, 0.5);
   label282->set_padding(0, 0);
   clist_steigern_sprachen_alt->set_column_title(0, "Sprache");
   clist_steigern_sprachen_alt->set_column_width(0, 80);
   clist_steigern_sprachen_alt->set_column_title(1, "Wert");
   clist_steigern_sprachen_alt->set_column_justification(1, GTK_JUSTIFY_RIGHT);
   clist_steigern_sprachen_alt->set_column_width(1, 80);
   clist_steigern_sprachen_alt->set_column_title(2, "Steigern\n"
		"(nächste Stufe)");
   clist_steigern_sprachen_alt->set_column_justification(2, GTK_JUSTIFY_CENTER);
   clist_steigern_sprachen_alt->set_column_width(2, 89);
   clist_steigern_sprachen_alt->set_column_title(3, "Reduzieren\n"
		"(eine Stufe)");
   clist_steigern_sprachen_alt->set_column_justification(3, GTK_JUSTIFY_CENTER);
   clist_steigern_sprachen_alt->set_column_width(3, 80);
   clist_steigern_sprachen_alt->set_column_title(4, "Verlernen\n"
		"         ");
   clist_steigern_sprachen_alt->set_column_justification(4, GTK_JUSTIFY_CENTER);
   clist_steigern_sprachen_alt->set_column_width(4, 80);
   clist_steigern_sprachen_alt->column_titles_show();
   scrolledwindow26->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow26->add(*clist_steigern_sprachen_alt);
   clist_steigern_sprachen_neu->set_column_title(0, "Sprache");
   clist_steigern_sprachen_neu->set_column_width(0, 80);
   clist_steigern_sprachen_neu->set_column_title(1, "Urschrift");
   clist_steigern_sprachen_neu->set_column_width(1, 80);
   clist_steigern_sprachen_neu->set_column_title(2, "Lernkosten");
   clist_steigern_sprachen_neu->set_column_justification(2, GTK_JUSTIFY_RIGHT);
   clist_steigern_sprachen_neu->set_column_width(2, 80);
   clist_steigern_sprachen_neu->column_titles_show();
   scrolledwindow23->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow23->add(*clist_steigern_sprachen_neu);
   vpaned3->set_handle_size(10);
   vpaned3->set_gutter_size(10);
   vpaned3->set_position(203);
   vpaned3->pack1(*scrolledwindow26, false, true);
   vpaned3->pack2(*scrolledwindow23, true, true);
   vbox14->pack_start(*label282, false, false, 0);
   vbox14->pack_start(*vpaned3);
   label281->set_alignment(0.5, 0.5);
   label281->set_padding(0, 0);
   clist_steigern_schrift_alt->set_column_title(0, "Urschrift");
   clist_steigern_schrift_alt->set_column_width(0, 80);
   clist_steigern_schrift_alt->set_column_title(1, "Art der Schrift");
   clist_steigern_schrift_alt->set_column_width(1, 80);
   clist_steigern_schrift_alt->set_column_title(2, "Kosten");
   clist_steigern_schrift_alt->set_column_width(2, 80);
   clist_steigern_schrift_alt->column_titles_show();
   scrolledwindow27->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow27->add(*clist_steigern_schrift_alt);
   clist_steigern_schrift_neu->set_usize(266, -1);
   clist_steigern_schrift_neu->set_column_title(0, "Kosten");
   clist_steigern_schrift_neu->set_column_justification(0, GTK_JUSTIFY_RIGHT);
   clist_steigern_schrift_neu->set_column_width(0, 80);
   clist_steigern_schrift_neu->set_column_title(1, "Urschrift");
   clist_steigern_schrift_neu->set_column_width(1, 80);
   clist_steigern_schrift_neu->set_column_title(2, "Art der Schrift");
   clist_steigern_schrift_neu->set_column_width(2, 80);
   clist_steigern_schrift_neu->column_titles_show();
   scrolledwindow24->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow24->add(*clist_steigern_schrift_neu);
   vpaned4->set_handle_size(10);
   vpaned4->set_gutter_size(10);
   vpaned4->set_position(203);
   vpaned4->pack1(*scrolledwindow27, false, true);
   vpaned4->pack2(*scrolledwindow24, true, true);
   vbox13->pack_start(*label281, false, false, 0);
   vbox13->pack_start(*vpaned4);
   hpaned1->set_usize(731, -1);
   hpaned1->set_handle_size(10);
   hpaned1->set_gutter_size(10);
   hpaned1->set_position(454);
   hpaned1->pack1(*vbox14, false, true);
   hpaned1->pack2(*vbox13, true, true);
   table24->attach(*frame52, 0, 1, 0, 1, GTK_FILL, GTK_FILL, 0, 0);
   table24->attach(*sprachen_laden, 2, 3, 0, 1, 0, 0, 0, 0);
   table24->attach(*hpaned1, 0, 3, 1, 2, GTK_FILL, GTK_EXPAND|GTK_FILL, 0, 0);
   frame51->set_label_align(0, 0);
   frame51->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame51->add(*table24);
   frame50->set_label_align(0, 0);
   frame50->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame50->add(*frame51);
   label254->set_alignment(0.5, 0.5);
   label254->set_padding(0, 0);
   notebook2->set_show_tabs(true);
   notebook2->set_tab_border(3);
   notebook2->pages().push_back(Gtk::Notebook_Helpers::TabElem(*frame40, *WidgetQMQnDHQ));
   notebook2->pages().push_back(Gtk::Notebook_Helpers::TabElem(*frame39, *label221));
   notebook2->pages().push_back(Gtk::Notebook_Helpers::TabElem(*frame38, *label222));
   notebook2->pages().push_back(Gtk::Notebook_Helpers::TabElem(*frame50, *label254));
   gfp->set_alignment(0.5, 0.5);
   gfp->set_padding(0, 0);
   frame41->set_usize(33, 33);
   frame41->set_label_align(0, 0);
   frame41->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame41->add(*gfp);
   label308->set_alignment(0, 0.5);
   label308->set_padding(0, 0);
   table42->attach(*label308, 0, 2, 0, 1, 0, 0, 3, 3);
   table42->attach(*button_waffen_s, 1, 2, 2, 3, GTK_FILL, 0, 0, 0);
   table42->attach(*button_geld_s, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   table42->attach(*button_ruestung_s, 0, 1, 2, 3, GTK_FILL, 0, 0, 0);
   table14->attach(*notebook2, 0, 8, 1, 2, GTK_EXPAND|GTK_FILL, GTK_EXPAND|GTK_FILL, 0, 0);
   table14->attach(*frame41, 1, 2, 0, 1, GTK_FILL, 0, 0, 0);
   table14->attach(*grad_anstieg, 3, 4, 0, 1, GTK_FILL, 0, 3, 0);
   table14->attach(*table42, 4, 5, 0, 1, 0, 0, 0, 0);
   table11->attach(*table14, 0, 1, 0, 1, GTK_EXPAND|GTK_FILL, GTK_EXPAND|GTK_FILL, 0, 0);
   frame2->set_label_align(0, 0);
   frame2->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame2->add(*table11);
   steigern->set_alignment(0.5, 0.5);
   steigern->set_padding(0, 0);
   notebook1->set_show_tabs(true);
   notebook1->set_tab_border(3);
   notebook1->pages().push_back(Gtk::Notebook_Helpers::TabElem(*frame4, *grund));
   notebook1->pages().push_back(Gtk::Notebook_Helpers::TabElem(*frame3, *fertigkeiten));
   notebook1->pages().push_back(Gtk::Notebook_Helpers::TabElem(*frame2, *steigern));
   frame1->set_label_align(0, 0);
   frame1->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame1->add(*notebook1);
   midgard_CG->set_title("Midgard");
   midgard_CG->set_policy(true, true, true);
   midgard_CG->add(*frame1);
   hseparator1->show();
   muttersprache->show();
   herkunftsland->show();
   gw_wuerfeln->show();
   abge_werte_setzen->show();
   werte_editieren->show();
   charakter_beschreibung->show();
   typauswahl->show();
   table25->show();
   vseparator12->show();
   speichern->show();
   laden->show();
   neuer_charakter->show();
   fixed1->show();
   vseparator13->show();
   latex->show();
   schliessen_CG->show();
   button_hilfe->show();
   fixed2->show();
   hbox17->show();
   frame53->show();
   lp->show();
   frame10->show();
   ap->show();
   frame11->show();
   fixed3->show();
   label271->show();
   label272->show();
   label273->show();
   label274->show();
   psyZR_wert->show();
   phsZR_wert->show();
   phkZR_wert->show();
   gift_wert->show();
   label275->show();
   vseparator16->show();
   label199->show();
   abwehr_wert->show();
   label200->show();
   zaubern_wert->show();
   table30->show();
   frame57->show();
   label181->show();
   bo_au->show();
   label182->show();
   bo_sc->show();
   label183->show();
   bo_an->show();
   label184->show();
   bo_ab->show();
   label185->show();
   bo_za->show();
   vseparator15->show();
   label189->show();
   label188->show();
   label187->show();
   label186->show();
   bo_gi->show();
   bo_phk->show();
   bo_phs->show();
   bo_psy->show();
   table29->show();
   frame56->show();
   label205->show();
   pa->show();
   label26->show();
   kaw->show();
   label206->show();
   sb->show();
   label27->show();
   wlw->show();
   label207->show();
   rw->show();
   label208->show();
   hgw->show();
   lpbasis->show();
   label204->show();
   au->show();
   b->show();
   label25->show();
   vseparator14->show();
   lp_basis->show();
   table27->show();
   frame55->show();
   lable5->show();
   label6->show();
   label7->show();
   label18->show();
   ge->show();
   ko->show();
   in->show();
   zt->show();
   label4->show();
   st->show();
   table26->show();
   frame54->show();
   herkunft->show();
   frame21->show();
   spezialisierung->show();
   frame23->show();
   glaube->show();
   frame22->show();
   alter->show();
   frame14->show();
   groesse->show();
   frame17->show();
   gewicht->show();
   frame16->show();
   grad->show();
   frame18->show();
   stand->show();
   frame20->show();
   name_charakter->show();
   frame30->show();
   gestalt->show();
   frame15->show();
   name_spieler->show();
   frame31->show();
   table28->show();
   frame58->show();
   table1->show();
   frame4->show();
   grund->show();
   beruf_erfolgswert->show();
   beruf_wahl->show();
   berufe_clist->show();
   table31->show();
   label276->show();
   angeborene_fertigkeit->show();
   fertigkeiten_wahl->show();
   fertigkeiten_clist->show();
   table32->show();
   label277->show();
   label_spezialwaffe->show();
   waffen_wahl->show();
   waffen_clist->show();
   table33->show();
   label278->show();
   zauber_wahl->show();
   option_magier_spezialgebiet->show();
   zauber_clist->show();
   table34->show();
   label279->show();
   notebook3->show();
   hseparator13->show();
   lernpunkte_b->show();
   frame25->show();
   lernpunkte_f->show();
   frame26->show();
   lernpunkte_w->show();
   frame27->show();
   lernpunkte_z->show();
   frame28->show();
   hbox7->show();
   frame24->show();
   fertig_typ->show();
   frame59->show();
   lernpunkte_wuerfeln->show();
   lernpunkte_editieren->show();
   button_ruestung->show();
   button_geld_waffen->show();
   hseparator14->show();
   table4->show();
   frame3->show();
   fertigkeiten->show();
   radio_fert_steigern->show();
   radio_fert_reduzieren->show();
   radio_fert_verlernen->show();
   vbox2->show();
   frame43->show();
   togglebutton_praxispunkte_fertigkeiten->show();
   radiobutton_praxis_wuerfeln_fertigkeiten->show();
   radiobutton_praxis_auto_fertigkeiten->show();
   vbox9->show();
   frame49->show();
   steigern_fert_clist_alt->show();
   scrolledwindow28->show();
   steigern_fert_clist_neu->show();
   scrolledwindow29->show();
   vpaned1->show();
   fertigkeiten_laden->show();
   table15->show();
   frame40->show();
   WidgetQMQnDHQ->show();
   radio_waffen_steigern->show();
   radio_waffen_reduzieren->show();
   vbox7->show();
   frame47->show();
   togglebutton_praxispunkte_waffen->show();
   radiobutton_praxis_wuerfeln_waffen->show();
   radiobutton_praxis_auto_waffen->show();
   vbox8->show();
   frame48->show();
   table20->show();
   table19->show();
   hseparator11->show();
   label284->show();
   steigern_waffen_clist_alt->show();
   scrolledwindow30->show();
   steigern_waffen_clist_neu->show();
   scrolledwindow31->show();
   vpaned6->show();
   vbox16->show();
   label283->show();
   grundkenntnisse_clist_alt->show();
   scrolledwindow32->show();
   grundkenntnisse_clist_neu->show();
   scrolledwindow11->show();
   vpaned5->show();
   vbox15->show();
   hpaned2->show();
   waffen_laden->show();
   table18->show();
   frame39->show();
   label221->show();
   zauber_laden->show();
   radio_spruchrolle_wuerfeln->show();
   radio_spruchrolle_auto->show();
   spruchrolle->show();
   table44->show();
   table21->show();
   frame44->show();
   steigern_zauber_clist_alt->show();
   scrolledwindow33->show();
   steigern_zauber_clist_neu->show();
   scrolledwindow34->show();
   vpaned2->show();
   table17->show();
   frame38->show();
   label222->show();
   radio_sprache_steigern->show();
   radio_sprache_reduzieren->show();
   radio_sprache_verlernen->show();
   vbox10->show();
   frame52->show();
   sprachen_laden->show();
   label282->show();
   clist_steigern_sprachen_alt->show();
   scrolledwindow26->show();
   clist_steigern_sprachen_neu->show();
   scrolledwindow23->show();
   vpaned3->show();
   vbox14->show();
   label281->show();
   clist_steigern_schrift_alt->show();
   scrolledwindow27->show();
   clist_steigern_schrift_neu->show();
   scrolledwindow24->show();
   vpaned4->show();
   vbox13->show();
   hpaned1->show();
   table24->show();
   frame51->show();
   frame50->show();
   label254->show();
   notebook2->show();
   gfp->show();
   frame41->show();
   grad_anstieg->show();
   label308->show();
   button_waffen_s->show();
   button_geld_s->show();
   button_ruestung_s->show();
   table42->show();
   table14->show();
   table11->show();
   frame2->show();
   steigern->show();
   notebook1->show();
   frame1->show();
   midgard_CG->show();
   muttersprache->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_muttersprache_clicked));
   herkunftsland->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_herkunftsland_clicked));
   gw_wuerfeln->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::gw_wuerfeln));
   abge_werte_setzen->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_abge_werte_setzen_clicked));
   werte_editieren->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::werte_editieren));
   charakter_beschreibung->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_charakter_beschreibung_clicked));
   typauswahl->get_menu()->deactivate.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::typauswahl_button));
   speichern->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_speichern_clicked));
   laden->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_laden_clicked));
   neuer_charakter->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_neuer_charakter_clicked));
   latex->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_latex_clicked));
   schliessen_CG->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_schliessen_CG_clicked));
   button_hilfe->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_button_hilfe_clicked));
   beruf_erfolgswert->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_beruf_erfolgswert_clicked));
   beruf_wahl->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_berufe_wahl_clicked));
   angeborene_fertigkeit->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_angeborene_fertigekeit_clicked));
   fertigkeiten_wahl->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_fertigkeiten_wahl_clicked));
   waffen_wahl->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_waffen_wahl_clicked));
   waffen_clist->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_waffen_clist_select_row));
   zauber_wahl->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_zauber_wahl_clicked));
   option_magier_spezialgebiet->get_menu()->deactivate.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::spezialgebiet_button));
   lernpunkte_wuerfeln->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_lernpunkte_wuerfeln_clicked));
   lernpunkte_editieren->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_lernpunkte_editieren_clicked));
   button_ruestung->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_button_ruestung_clicked));
   button_geld_waffen->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_button_geld_waffen_clicked));
   radio_fert_steigern->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radio_fert_steigern_toggled));
   radio_fert_reduzieren->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radio_fert_reduzieren_toggled));
   radio_fert_verlernen->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radio_fert_verlernen_toggled));
   togglebutton_praxispunkte_fertigkeiten->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_togglebutton_praxispunkte_fertigkeiten_toggled));
   radiobutton_praxis_wuerfeln_fertigkeiten->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radiobutton_praxis_wuerfeln_fertigkeiten_toggled));
   radiobutton_praxis_auto_fertigkeiten->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radiobutton_praxis_auto_fertigkeiten_toggled));
   steigern_fert_clist_alt->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_steigern_fert_clist_alt_select_row));
   steigern_fert_clist_neu->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_steigern_fert_clist_neu_select_row));
   fertigkeiten_laden->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_fertigkeiten_laden_clicked));
   radio_waffen_steigern->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radio_waffen_steigern_toggled));
   radio_waffen_reduzieren->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radio_waffen_reduzieren_toggled));
   togglebutton_praxispunkte_waffen->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_togglebutton_praxispunkte_waffen_toggled));
   radiobutton_praxis_wuerfeln_waffen->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radiobutton_praxis_wuerfeln_waffen_toggled));
   radiobutton_praxis_auto_waffen->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radiobutton_praxis_auto_waffen_toggled));
   steigern_waffen_clist_alt->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_steigern_waffen_clist_alt_select_row));
   steigern_waffen_clist_neu->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_steigern_waffen_clist_neu_select_row));
   grundkenntnisse_clist_alt->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_grundkenntnisse_clist_alt_select_row));
   grundkenntnisse_clist_neu->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_grundkenntnisse_clist_neu_select_row));
   waffen_laden->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_waffen_laden_clicked));
   zauber_laden->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_zauber_laden_clicked));
   spruchrolle->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_spruchrolle_toggled));
   steigern_zauber_clist_alt->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_steigern_zauber_clist_alt_select_row));
   steigern_zauber_clist_neu->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_steigern_zauber_clist_neu_select_row));
   radio_sprache_steigern->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radio_sprache_steigern_toggled));
   radio_sprache_reduzieren->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radio_sprache_reduzieren_toggled));
   radio_sprache_verlernen->toggled.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_radio_sprache_verlernen_toggled));
   sprachen_laden->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_sprache_laden_clicked));
   clist_steigern_sprachen_alt->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_steigern_sprache_clist_alt_select_row));
   clist_steigern_sprachen_neu->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_steigern_sprache_clist_neu_select_row));
   clist_steigern_schrift_alt->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_clist_steigern_schrift_alt_select_row));
   clist_steigern_schrift_neu->select_row.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_clist_steigern_schrift_neu_select_row));
   grad_anstieg->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_grad_anstieg_clicked));
   button_waffen_s->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_button_waffen_s_clicked));
   button_geld_s->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_button_geld_s_clicked));
   button_ruestung_s->clicked.connect(SigC::slot(static_cast<class midgard_CG*>(this), &midgard_CG::on_button_ruestung_s_clicked));
}

midgard_CG_glade::~midgard_CG_glade()
{   
}
