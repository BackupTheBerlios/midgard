#include "Land.hh"
#include <Aux/SQLerror.h>
#include <Aux/Transaction.h>
exec sql include sqlca;



cH_Land::cache_t cH_Land::cache;

cH_Land::cH_Land(const std::string& name)
{
 cH_Land *cached(cache.lookup(name));
 if (cached) *this=*cached;
 else
  {
   *this=cH_Land(new Land(name));
   cache.Register(name,*this);
  }
}

Land::Land(const std::string& n) 
: name(n)
{
  exec sql begin declare section;
   char db_name[50], db_kontinent[50], db_sprache[50];
  exec sql end declare section;
  strncpy(db_name,Name().c_str(),sizeof(db_name));
  exec sql declare L1Iein cursor for select kontinent,sprache 
   from land where land=:db_name;
  Transaction tr;
  exec sql open L1Iein;
  SQLerror::test(__FILELINE__);
  while(true)   
   {
     exec sql fetch L1Iein into :db_kontinent,:db_sprache;
     SQLerror::test(__FILELINE__,100);
     if (sqlca.sqlcode) break;
     vec_sprache.push_back(db_sprache);
   }
  kontinent=db_kontinent;
}

Laender_All::Laender_All()
{
 exec sql begin declare section;
   char db_name[100];
 exec sql end declare section;
 exec sql declare LIein cursor for select distinct land from land;
 Transaction tr;
 exec sql open LIein;
 SQLerror::test(__FILELINE__);
 while(true)
  {
   exec sql fetch LIein into :db_name;
   SQLerror::test(__FILELINE__,100);  
   if (sqlca.sqlcode) break;
   list_All.push_back(cH_Land(db_name));
  }
 exec sql close LIein;
 tr.close();
}
