// $Id: xmlimport.pgcc,v 1.6 2001/05/15 22:21:41 thoma Exp $
/*  Midgard Roleplaying Character Generator
 *  Copyright (C) 2001 Christof Petig
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include <string>
#include <iostream>
#include <Aux/Transaction.h>
#include <Aux/dbconnect.h>
exec sql include sqlca;
#include "TagStream.hh"

bool charakter_laden(istream &i)
{  TagStream ts(i);
//   ts.debug(15);
   Tag::const_iterator top=ts.find("Midgard-Charakter");
   if (!top || top==ts.end())
   {  cerr << "Ist das wirklich die richtige Datei? Ich kann keinen Charakter finden.\n";
      return false;
   }
   if (top->getInt("Version")!=3)
   {  cerr << "Version " << top->getInt("Version") << " wird noch nicht unterstützt\n";
      return false;
   }

   // ---- taken from save_charakter.pgcc ------
   exec sql begin declare section;
/*      char db_beschreibung[102400];
      char db_typ_s[5];
      int db_st = werte.st;      
      int db_ge = werte.ge;      
      int db_ko = werte.ko;      
      int db_in = werte.in;      
      int db_zt = werte.zt;      
      int db_au = werte.au;      
      int db_pa = werte.pa;      
      int db_sb = werte.sb;      
      int db_rw = werte.rw;      
      int db_hgw= werte.hgw;      
      int db_b  = werte.b;      
      int db_lp = werte.lp;      
      int db_ap = werte.ap;      
      int db_kaw= werte.kaw;      
      int db_wlw= werte.wlw;      
      int db_abwehr       = werte.abwehr_wert;      
      int db_zaubern ;
      int db_psy          = werte.psyZR_wert;      
      int db_phs          = werte.phsZR_wert;      
      int db_phk          = werte.phkZR_wert;      
      int db_gift         = werte.gift_wert;      
      int db_bo_au_typ    = werte.bo_au_typ;      
      int db_bo_au        = werte.bo_au;      
      int db_bo_sc        = werte.bo_sc;      
      int db_bo_an        = werte.bo_an;      
      int db_bo_ab        = werte.bo_ab;      
      int db_bo_za        = werte.bo_za;      
      int db_bo_psy       = werte.bo_psy;      
      int db_bo_phs       = werte.bo_phs;      
      int db_bo_phk       = werte.bo_phk;      
      int db_bo_gi        = werte.bo_gi;      
      int db_lpbasis      = werte.lpbasis;      
      int db_alter        = werte.alter;      
      char db_gestalt[20] ;
      char db_geschlecht[5];
      int db_gewicht      = werte.gewicht;      
      int db_groesse      = werte.groesse;      
      int db_grad         = werte.grad;      
      char db_spez[30]    ;
      char db_stand[30]   ;
      char db_herkunft[50];
      char db_glaube[50]  ;
      char db_name_ch[50] ;
      char db_name_sp[50] ;
      char db_version[50] ;
      int db_gfp = werte.gfp ;
      int db_gold = werte.gold;
      int db_silber = werte.silber;
      int db_kupfer = werte.kupfer;*/
      char db_ruestung[20];
      int db_av_bonus,db_sl_bonus;
      char db_region[20];
      char db_spezies[50];
   exec sql end declare section;
   
#if 0   
   db_zaubern = atoi(werte.zaubern_wert.c_str());
   strncpy(db_beschreibung,werte.beschreibung.c_str(),sizeof(db_beschreibung));
   strncpy(db_gestalt,werte.gestalt.c_str(),sizeof(db_gestalt));
   strncpy(db_geschlecht,werte.geschlecht.c_str(),sizeof(db_geschlecht));
   strncpy(db_spez,werte.spezialisierung.c_str(),sizeof(db_spez));
   strncpy(db_stand,werte.stand.c_str(),sizeof(db_stand));
   strncpy(db_herkunft,werte.herkunft.c_str(),sizeof(db_herkunft));
   strncpy(db_glaube,werte.glaube.c_str(),sizeof(db_glaube));
   strncpy(db_name_ch,werte.name_charakter.c_str(),sizeof(db_name_ch));
   strncpy(db_name_sp,werte.name_spieler.c_str(),sizeof(db_name_sp));
   strncpy(db_version,werte.version.c_str(),sizeof(db_version));
   strncpy(db_typ_s,typ.s.c_str(),sizeof(db_typ_s));
   strncpy(db_ruestung,werte.ruestung.c_str(),sizeof(db_ruestung));
   strncpy(db_spezies,werte.spezies.c_str(),sizeof(db_spezies));
   
   ex ec sql UPDATE charaktere SET 
      charakter_name = :db_name_ch  , 
      beschreibung   = :db_beschreibung  , 
      version        = :db_version  ,
      typ_s          = :db_typ_s    ,
      spieler_name   = :db_name_sp  , 
      st             = :db_st       ,
      ge             = :db_ge       ,
      ko             = :db_ko       ,
      inn            = :db_in       ,
      zt             = :db_zt       ,
      au             = :db_au       ,
      pa             = :db_pa       ,
      sb             = :db_sb       ,
      rw             = :db_rw       ,
      hgw            = :db_hgw      ,
      b              = :db_b        ,
      lp             = :db_lp       ,
      ap             = :db_ap       ,
      kaw            = :db_kaw      ,
      wlw            = :db_wlw      ,
      abwehr         = :db_abwehr   ,
      zaubern        = :db_zaubern  ,
      psy            = :db_psy      ,
      phs            = :db_phs      ,
      phk            = :db_phk      ,
      gift           = :db_gift     ,
      lpbasis        = :db_lpbasis  ,
      alter          = :db_alter    ,
      gestalt        = :db_gestalt  ,
      geschlecht     = :db_geschlecht  ,
      gewicht        = :db_gewicht  ,
      groesse        = :db_groesse  ,
      grad           = :db_grad     ,
      spezialisierung= :db_spez     ,
      stand          = :db_stand    ,
      herkunft       = :db_herkunft ,
      glaube         = :db_glaube   ,
      db_bo_au_typ   = :db_bo_au_typ   ,
      db_bo_au       = :db_bo_au       ,
      db_bo_sc       = :db_bo_sc       ,
      db_bo_an       = :db_bo_an       ,
      db_bo_ab       = :db_bo_ab       ,
      db_bo_za       = :db_bo_za       ,
      db_bo_psy      = :db_bo_psy      ,
      db_bo_phs      = :db_bo_phs      ,
      db_bo_phk      = :db_bo_phk      ,
      db_bo_gi       = :db_bo_gi       ,  
      db_gfp         = :db_gfp         ,
      gold           = :db_gold        ,
      silber         = :db_silber      ,
      kupfer         = :db_kupfer      ,
      ruestung       = :db_ruestung    ,
      spezies          = :db_spezies
      WHERE charakter_name = :db_name_ch ;
   SQLerror::test(__FILELINE__,100);
   if (sqlca.sqlcode==100) midgard_CG::charakter_db_anlegen();
   
#endif
   return true;
}

int main(int argc, char *argv[])
{  
   if (argc!=1) {cerr << "USAGE: "<<argv[0]<<" < XML_Datei \n";
      exit(1); };
   try{
      Petig::Connection conn;
      conn.setDbase("midgard");
      Petig::dbconnect(conn);

      if (!charakter_laden(cin)) return 1;
      
      Petig::dbdisconnect();
   } catch (SQLerror &e)
   {  cerr << e << '\n';
   }
   return 0;
}
