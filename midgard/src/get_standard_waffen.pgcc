/*  Midgard Character Generator
 *  Copyright (C) 2001 Malte Thoma
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

// generated 2001/2/11 14:16:06 CET by thoma@ig23.
// using glademm V0.5_11c
//
// newer (non customized) versions of this file go to Zauber_auswahl.cc_new

// This file is for your program, I won't touch it again!

#include <Aux/Transaction.h>
#include <Aux/SQLerror.h>
exec sql include sqlca;
#include "midgard_CG.hh"
#include <cstring>
#include <Gtk_OStream.h>

double midgard_CG::get_standard_waffen(const string& typ, const string& waffe)
{
  string swaffe="Waffen";
  if (waffe=="Peitsche") swaffe="Peitsche";
  if (waffe=="Lasso") swaffe="Lasso";
  if (waffe=="Netz") swaffe="Netz";
  if (waffe=="Bola") swaffe="Bola";

  exec sql begin declare section;
   char db_ergebnis[20];
   char query[200];
  exec sql end declare section;
  snprintf(query,sizeof(query),"select %s from waffen_standard where fertigkeit = '%s'",
               typ.c_str(),swaffe.c_str());

   Transaction tr;
   exec sql prepare fert from :query ;    
   exec sql declare fertig cursor for fert ;

    exec sql open fertig;
    SQLerror::test(__FILELINE__);

    exec sql fetch fertig into  :db_ergebnis;
    SQLerror::test(__FILELINE__,100);  

    exec sql close fertig;

 double fac;
 if (!strcmp(db_ergebnis,"G")) fac = 0.5; 
 if (!strcmp(db_ergebnis,"S")) fac = 1.0; 
 if (!strcmp(db_ergebnis,"A")) fac = 2.0; 
//cout << typ << "\t"<<fertigkeit<<"\t"<<db_ergebnis<<"\t"<<fac<<"\n";
 return(fac);
}

string midgard_CG::get_region_waffen(const string& waffe, const string& region, int mod)
{
  exec sql begin declare section;
   char db_waffe[50],db_region[10];
   char db_ergebnis[50];
  exec sql end declare section;

  strncpy(db_waffe,waffe.c_str(),sizeof(db_waffe));
  strncpy(db_region,region.c_str(),sizeof(db_region));

  if (mod==1) // get alias from waffe
   {
     exec sql select alias into :db_ergebnis from waffen_region_name 
         where name = :db_waffe and region = :db_region limit 1;
   }
  if (mod==2) // get waffe from alias
   {
     exec sql select name into :db_ergebnis from waffen_region_name
         where alias = :db_waffe and region = :db_region limit 1;
   }
  SQLerror::test(__FILELINE__,100);
  if (sqlca.sqlcode) return(waffe);
  else return(db_ergebnis);
}

