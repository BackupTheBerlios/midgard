/*  Midgard Character Generator
 *  Copyright (C) 2001 Malte Thoma
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

// generated 2001/2/11 14:16:06 CET by thoma@ig23.
// using glademm V0.5_11c
//
// newer (non customized) versions of this file go to Zauber_auswahl.cc_new

// This file is for your program, I won't touch it again!

#include <Aux/Transaction.h>
#include <Aux/SQLerror.h>
exec sql include sqlca;
#include "midgard_CG.hh"
#include <cstring>
#include <Gtk_OStream.h>

#ifdef __MINGW32__
extern "C" { int snprintf(char *str, size_t size, const  char  *format, ...); }
#endif

int midgard_CG::get_spezial_zauber(const std::string& typ, const std::string& zauber)
{
  exec sql begin declare section;
   char db_ergebnis[20];
   char db_agens[20];
   char db_prozess[20];
   char query[200];
  exec sql end declare section;
  snprintf(query,sizeof(query),"select %s,agens,prozess from arkanum_zauber where name = '%s'",
               typ.c_str(), zauber.c_str());

   Transaction tr;
   exec sql prepare zaub from :query ;    
   exec sql declare zauber cursor for zaub ;

    exec sql open zauber;
    SQLerror::test(__FILELINE__);

    exec sql fetch zauber into  :db_ergebnis, :db_agens, :db_prozess;
    SQLerror::test(__FILELINE__);  

 int ispez=0;
 std::string ergebnis = db_ergebnis;
 std::string agens=db_agens;
 std::string prozess=db_prozess;

 if (ergebnis!="Grund" && agens==Werte.Spezial()) ispez = 2; 
 if (ergebnis!="Grund" && prozess==Werte.Spezial()) ispez = 2; 

//std::cout << typ << "\t"<<zauber<<"\t"<<db_ergebnis<<"\t"<<ispez<<"\n";
 return(ispez);
}
