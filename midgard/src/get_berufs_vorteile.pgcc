/*  Midgard Character Generator
 *  Copyright (C) 2001 Malte Thoma
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

// generated 2001/2/11 14:16:06 CET by thoma@ig23.
// using glademm V0.5_11c
//
// newer (non customized) versions of this file go to Zauber_auswahl.cc_new

// This file is for your program, I won't touch it again!

#include <Aux/Transaction.h>
#include <Aux/SQLerror.h>
exec sql include sqlca;
#include "midgard_CG.hh"
#include <cstring>
#include <Gtk_OStream.h>

vector<string> midgard_CG::Berufs_Vorteile()
{
  std::vector<string> vorteile;
  exec sql begin declare section;
   char db_beruf[30], db_vorteil[30];
  exec sql end declare section;  
  for (std::vector<H_Data_beruf>::const_iterator i=vec_Beruf.begin();
         i!=vec_Beruf.end();++i)
   {
     strncpy(db_beruf,((*i)->Name()).c_str(),sizeof(db_beruf));
     exec sql declare ein cursor for
       select vorteil from berufe_vorteile where beruf = :db_beruf;
     Transaction tr;
     exec sql open ein;
     SQLerror::test(__FILELINE__);
     while (true)
      { 
        exec sql fetch ein into :db_vorteil;
        SQLerror::test(__FILELINE__,100);
        if (sqlca.sqlcode) break;
        vorteile.push_back(db_vorteil);
      }
     exec sql close ein;
     tr.close();
   }
//for (int i=0;i<vorteile.size();++i)
//std::cout << vorteile[i]<<"\n";
 return vorteile;
}
