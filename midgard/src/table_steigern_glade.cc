// generated 2003/9/29 7:59:03 CEST by christof@puck.petig-baender.de
// using glademm V2.0.0c_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- --image-provider=MagusImage midgard.glade
// for gtk 2.2.4 and gtkmm 2.2.7
//
// Please modify the corresponding derived classes in ./src/table_steigern.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
#include "table_steigern_glade.hh"
#include <gtkmm/viewport.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/paned.h>
#include <gtkmm/alignment.h>
#include <gtkmm/table.h>

extern Glib::RefPtr<Gdk::Pixbuf> MagusImage(const std::string &name);

#include <gtkmm/box.h>
#include <gtkmm/label.h>
#include <gtkmm/image.h>
#include <gtkmm/eventbox.h>
#include <gtkmm/frame.h>
#include <gtkmm/button.h>
#include <gtkmm/radiobutton.h>

table_steigern_glade::table_steigern_glade(GlademmData *gmm_data
) : Gtk::Table(2, 2, false)
{  table_steigern = this;
   tree_steigern_zusatz = new class MidgardBasicTree(MidgardBasicTree::STEIGERNZUSATZ);
   
   Gtk::Viewport *viewport24 = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   scrolledwindow_landauswahl = Gtk::manage(new class Gtk::ScrolledWindow());
   alte_fert_tree = new class MidgardBasicTree(MidgardBasicTree::LONG_ALT_);
   
   Gtk::ScrolledWindow *scrolledwindow_fert_alt = Gtk::manage(new class Gtk::ScrolledWindow());
   neue_fert_tree = new class MidgardBasicTree(MidgardBasicTree::LONG_NEU);
   
   Gtk::ScrolledWindow *scrolledwindow55 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned1 = Gtk::manage(new class Gtk::VPaned());
   Gtk::Alignment *alignment2 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Table *table15 = Gtk::manage(new class Gtk::Table(2, 2, false));
   label_ns_fertigkeiten = Gtk::manage(new class Gtk::Label("Fertigkeiten"));
   pixmap_ns_fertig = Gtk::manage(new class Gtk::Image(MagusImage("Skills-trans-50.xpm")));
   
   Gtk::VBox *vbox21 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label530 = Gtk::manage(new class Gtk::Label("        Waffen        "));
   alte_waffen_tree = new class MidgardBasicTree(MidgardBasicTree::WAFFE_ALT);
   
   Gtk::ScrolledWindow *scrolledwindow_waffen_alt = Gtk::manage(new class Gtk::ScrolledWindow());
   neue_waffen_tree = new class MidgardBasicTree(MidgardBasicTree::LONG_NEU_WAFFE);
   
   Gtk::ScrolledWindow *scrolledwindow69 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned13 = Gtk::manage(new class Gtk::VPaned());
   Gtk::VBox *vbox27 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label529 = Gtk::manage(new class Gtk::Label("Grundkenntnisse"));
   alte_grund_tree = new class MidgardBasicTree(MidgardBasicTree::WAFFEGRUND_ALT);
   
   Gtk::ScrolledWindow *scrolledwindow67 = Gtk::manage(new class Gtk::ScrolledWindow());
   neue_grund_tree = new class MidgardBasicTree(MidgardBasicTree::WAFFEGRUND_NEU);
   
   Gtk::ScrolledWindow *scrolledwindow68 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned12 = Gtk::manage(new class Gtk::VPaned());
   Gtk::VBox *vbox28 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::HPaned *hpaned5 = Gtk::manage(new class Gtk::HPaned());
   Gtk::Table *table18 = Gtk::manage(new class Gtk::Table(2, 2, false));
   label_nw_waffen = Gtk::manage(new class Gtk::Label("Waffen"));
   pixmap_ns_waffen = Gtk::manage(new class Gtk::Image(MagusImage("Weapon-trans-50.xpm")));
   
   Gtk::VBox *vbox22 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label379 = Gtk::manage(new class Gtk::Label("     Zauber     "));
   alte_zauber_tree = new class MidgardBasicTree(MidgardBasicTree::ZAUBER_ALT);
   
   Gtk::ScrolledWindow *scrolledwindow33 = Gtk::manage(new class Gtk::ScrolledWindow());
   neue_zauber_tree = new class MidgardBasicTree(MidgardBasicTree::ZAUBER_NEU);
   
   Gtk::ScrolledWindow *scrolledwindow34 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned2 = Gtk::manage(new class Gtk::VPaned());
   Gtk::VBox *vbox17 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label380 = Gtk::manage(new class Gtk::Label("Zaubermittel"));
   alte_zaubermittel_tree = new class MidgardBasicTree(MidgardBasicTree::ZAUBERWERK_ALT);
   
   Gtk::ScrolledWindow *scrolledwindow51 = Gtk::manage(new class Gtk::ScrolledWindow());
   neue_zaubermittel_tree = new class MidgardBasicTree(MidgardBasicTree::ZAUBERWERK_NEU);
   
   Gtk::ScrolledWindow *scrolledwindow52 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned8 = Gtk::manage(new class Gtk::VPaned());
   Gtk::VBox *vbox18 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::HPaned *hpaned3 = Gtk::manage(new class Gtk::HPaned());
   table_magier_steigern = Gtk::manage(new class Gtk::Table(2, 2, false));
   label_ns_zauber = Gtk::manage(new class Gtk::Label("Zauber"));
   pixmap_ns_zauber = Gtk::manage(new class Gtk::Image(MagusImage("Zauber-trans-50.xpm")));
   
   Gtk::VBox *vbox23 = Gtk::manage(new class Gtk::VBox(false, 0));
   alte_kido_tree = new class MidgardBasicTree(MidgardBasicTree::KIDO_ALT);
   
   Gtk::ScrolledWindow *scrolledwindow49 = Gtk::manage(new class Gtk::ScrolledWindow());
   neue_kido_tree = new class MidgardBasicTree(MidgardBasicTree::KIDO_NEU);
   
   Gtk::ScrolledWindow *scrolledwindow50 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned7 = Gtk::manage(new class Gtk::VPaned());
   table_kido_steigern = Gtk::manage(new class Gtk::Table(2, 2, false));
   label_ns_kido = Gtk::manage(new class Gtk::Label("KiDo"));
   pixmap_ns_kido = Gtk::manage(new class Gtk::Image(MagusImage("KiDo-trans-50.xpm")));
   
   Gtk::VBox *vbox24 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label282 = Gtk::manage(new class Gtk::Label("Sprachen"));
   alte_sprache_tree = new class MidgardBasicTree(MidgardBasicTree::SPRACHEN_ALT);
   
   Gtk::ScrolledWindow *scrolledwindow_sprache_alt = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Image *pixmap163 = Gtk::manage(new class Gtk::Image(MagusImage("Learning_by_Doing-32.xpm")));
   Gtk::Label *label600 = Gtk::manage(new class Gtk::Label("Neue Sprache mit\n"
		"PP lernen"));
   Gtk::HBox *hbox86 = Gtk::manage(new class Gtk::HBox(false, 0));
   togglebutton_neue_sprache_pp = Gtk::manage(new class Gtk::ToggleButton());
   
   Gtk::Label *label601 = Gtk::manage(new class Gtk::Label(""));
   neue_sprache_tree = new class MidgardBasicTree(MidgardBasicTree::SPRACHE_NEU);
   
   Gtk::ScrolledWindow *scrolledwindow23 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Table *table162 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::VPaned *vpaned3 = Gtk::manage(new class Gtk::VPaned());
   Gtk::VBox *vbox14 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label281 = Gtk::manage(new class Gtk::Label("Schriften"));
   alte_schrift_tree = new class MidgardBasicTree(MidgardBasicTree::SCHRIFT_ALT);
   
   Gtk::ScrolledWindow *scrolledwindow_schrift_alt = Gtk::manage(new class Gtk::ScrolledWindow());
   neue_schrift_tree = new class MidgardBasicTree(MidgardBasicTree::SCHRIFT_NEU);
   
   Gtk::ScrolledWindow *scrolledwindow24 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VPaned *vpaned4 = Gtk::manage(new class Gtk::VPaned());
   Gtk::VBox *vbox13 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::HPaned *hpaned1 = Gtk::manage(new class Gtk::HPaned());
   Gtk::Table *table_sprache_schriften = Gtk::manage(new class Gtk::Table(2, 2, false));
   label_ns_sprache = Gtk::manage(new class Gtk::Label("Sprachen\n"
		"& Schriften"));
   pixmap_ns_sprache = Gtk::manage(new class Gtk::Image(MagusImage("Lang_Script-trans-50.xpm")));
   
   Gtk::VBox *vbox25 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Image *pixmap64 = Gtk::manage(new class Gtk::Image(MagusImage("Armor-trans-50.xpm")));
   label_ruestung_1 = Gtk::manage(new class Gtk::Label("1. Rüstung"));
   
   Gtk::VBox *vbox59 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::EventBox *eventbox9 = Gtk::manage(new class Gtk::EventBox());
   button_ruestung_1 = Gtk::manage(new class Gtk::CheckButton());
   
   Gtk::Image *pixmap159 = Gtk::manage(new class Gtk::Image(MagusImage("Armor-trans-50.xpm")));
   label_ruestung_2 = Gtk::manage(new class Gtk::Label("2. Rüstung"));
   
   Gtk::VBox *vbox60 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::EventBox *eventbox17 = Gtk::manage(new class Gtk::EventBox());
   button_ruestung_2 = Gtk::manage(new class Gtk::CheckButton());
   clist_ruestung = Gtk::manage(new class Gtk::TreeView());
   
   Gtk::Viewport *viewport45 = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   Gtk::ScrolledWindow *scrolledwindow82 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Table *table152 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label671 = Gtk::manage(new class Gtk::Label("Rüstung"));
   Gtk::Frame *frame107 = Gtk::manage(new class Gtk::Frame());
   Gtk::Image *pixmap160 = Gtk::manage(new class Gtk::Image(MagusImage("Waf_Mag_bon-50.xpm")));
   Gtk::Label *label593 = Gtk::manage(new class Gtk::Label("Magischen Bonus\n"
		"eingeben"));
   Gtk::HBox *hbox76 = Gtk::manage(new class Gtk::HBox(false, 0));
   checkbutton_mag_waffenbonus = Gtk::manage(new class Gtk::CheckButton());
   waffenbesitz_alt_tree = new class SimpleTree(5);
   
   Gtk::ScrolledWindow *scrolledwindow84 = Gtk::manage(new class Gtk::ScrolledWindow());
   label_av_bonus = Gtk::manage(new class Gtk::Label("AVbonus"));
   label_sl_bonus = Gtk::manage(new class Gtk::Label("SLbonus"));
   
   Gtk::Label *label596 = Gtk::manage(new class Gtk::Label("Kurzbeschreibung"));
   Gtk::Adjustment *spinbutton_av_bonus_adj = Gtk::manage(new class Gtk::Adjustment(0, -5, 5, 1, 10, 10));
   spinbutton_av_bonus = Gtk::manage(new class Gtk::SpinButton(*spinbutton_av_bonus_adj, 1, 0));
   
   Gtk::Adjustment *spinbutton_sl_bonus_adj = Gtk::manage(new class Gtk::Adjustment(0, -5, 5, 1, 10, 10));
   spinbutton_sl_bonus = Gtk::manage(new class Gtk::SpinButton(*spinbutton_sl_bonus_adj, 1, 0));
   entry_magisch = Gtk::manage(new class Gtk::Entry());
   table_magbonus = Gtk::manage(new class Gtk::Table(2, 2, false));
   
   Gtk::Table *table156 = Gtk::manage(new class Gtk::Table(2, 2, false));
   waffenbesitz_neu_tree = new class SimpleTree(5);
   
   Gtk::ScrolledWindow *scrolledwindow83 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Table *table159 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label672 = Gtk::manage(new class Gtk::Label("Waffen"));
   Gtk::Frame *frame108 = Gtk::manage(new class Gtk::Frame());
   Gtk::Table *table158 = Gtk::manage(new class Gtk::Table(2, 2, false));
   label_ns_besitz = Gtk::manage(new class Gtk::Label("Besitz"));
   pixmap_ns_besitz = Gtk::manage(new class Gtk::Image(MagusImage("Armor-trans-50.xpm")));
   
   Gtk::VBox *vbox58 = Gtk::manage(new class Gtk::VBox(false, 0));
   notebook_lernen = Gtk::manage(new class Gtk::Notebook());
   frame_spezielles = Gtk::manage(new class Gtk::Frame());
   label_s_grad = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label646 = Gtk::manage(new class Gtk::Label("Grad"));
   Gtk::Frame *frame73 = Gtk::manage(new class Gtk::Frame());
   label_s_resistenz = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label647 = Gtk::manage(new class Gtk::Label("Resistenz"));
   Gtk::Frame *frame77 = Gtk::manage(new class Gtk::Frame());
   label_s_zaubern = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label648 = Gtk::manage(new class Gtk::Label("Zaubern"));
   Gtk::Frame *frame76 = Gtk::manage(new class Gtk::Frame());
   label_s_abwehr = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label649 = Gtk::manage(new class Gtk::Label("Abwehr"));
   Gtk::Frame *frame75 = Gtk::manage(new class Gtk::Frame());
   label_alter = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label650 = Gtk::manage(new class Gtk::Label("Alter"));
   Gtk::Frame *frame90 = Gtk::manage(new class Gtk::Frame());
   Gtk::Image *pixmap88 = Gtk::manage(new class Gtk::Image(MagusImage("hoch_arr-exp.xpm")));
   Gtk::EventBox *eventbox10 = Gtk::manage(new class Gtk::EventBox());
   Gtk::Button *button_alter = Gtk::manage(new class Gtk::Button());
   label_s_ap = Gtk::manage(new class Gtk::Label("10"));
   
   Gtk::Label *label651 = Gtk::manage(new class Gtk::Label("AP"));
   Gtk::Frame *frame74 = Gtk::manage(new class Gtk::Frame());
   label_steigertage = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label652 = Gtk::manage(new class Gtk::Label("Tage"));
   Gtk::Frame *frame89 = Gtk::manage(new class Gtk::Frame());
   steigern_typ = Gtk::manage(new class Gtk::Label("label280"));
   
   Gtk::Label *label653 = Gtk::manage(new class Gtk::Label("Abenteurertyp"));
   Gtk::Frame *frame65 = Gtk::manage(new class Gtk::Frame());
   label_steigern_spezies = Gtk::manage(new class Gtk::Label("label280"));
   
   Gtk::Label *label654 = Gtk::manage(new class Gtk::Label("Spezies"));
   Gtk::Frame *frame109 = Gtk::manage(new class Gtk::Frame());
   label_pp_abwehr = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label656 = Gtk::manage(new class Gtk::Label("Abwehr"));
   Gtk::Frame *frame86 = Gtk::manage(new class Gtk::Frame());
   label_pp_zaubern = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label657 = Gtk::manage(new class Gtk::Label("Zaubern"));
   frame_pp_zaubern = Gtk::manage(new class Gtk::Frame());
   label_pp_resistenz = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label658 = Gtk::manage(new class Gtk::Label("Resistenz"));
   Gtk::Frame *frame88 = Gtk::manage(new class Gtk::Frame());
   label_pp_spezial = Gtk::manage(new class Gtk::Label("1"));
   
   Gtk::Label *label659 = Gtk::manage(new class Gtk::Label("Spezial"));
   frame_pp_spezial = Gtk::manage(new class Gtk::Frame());
   
   Gtk::Table *table104 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label655 = Gtk::manage(new class Gtk::Label("Praxispunkte"));
   Gtk::Frame *frame85 = Gtk::manage(new class Gtk::Frame());
   Gtk::Table *table76 = Gtk::manage(new class Gtk::Table(2, 2, false));
   handlebox_steigern_1 = Gtk::manage(new class Gtk::HandleBox());
   LabelSpin_aep = new class LabelSpin(0,-1000,100000);
   
   Gtk::Label *label660 = Gtk::manage(new class Gtk::Label("AEP"));
   Gtk::Frame *frame67 = Gtk::manage(new class Gtk::Frame());
   LabelSpin_kep = new class LabelSpin(0,-10000,100000);
   
   Gtk::Label *label661 = Gtk::manage(new class Gtk::Label("KEP"));
   Gtk::Frame *frame68 = Gtk::manage(new class Gtk::Frame());
   LabelSpin_zep = new class LabelSpin(0,-10000,100000);
   
   Gtk::Label *label662 = Gtk::manage(new class Gtk::Label("ZEP"));
   Gtk::Frame *frame69 = Gtk::manage(new class Gtk::Frame());
   Gtk::HBox *hbox30 = Gtk::manage(new class Gtk::HBox(true, 0));
   LabelSpin_gold = new class LabelSpin(0,-10000,100000);
   
   Gtk::Label *label663 = Gtk::manage(new class Gtk::Label("Gold"));
   Gtk::Frame *frame70 = Gtk::manage(new class Gtk::Frame());
   LabelSpin_silber = new class LabelSpin(0,-10000,100000);
   
   Gtk::Label *label664 = Gtk::manage(new class Gtk::Label("Silber"));
   Gtk::Frame *frame71 = Gtk::manage(new class Gtk::Frame());
   LabelSpin_kupfer = new class LabelSpin(0,-10000,100000);
   
   Gtk::Label *label665 = Gtk::manage(new class Gtk::Label("Kupfer"));
   Gtk::Frame *frame72 = Gtk::manage(new class Gtk::Frame());
   Gtk::HBox *hbox31 = Gtk::manage(new class Gtk::HBox(false, 0));
   LabelSpin_gfp = new class LabelSpin(0,0,100000);
   
   Gtk::Label *label666 = Gtk::manage(new class Gtk::Label("GFP"));
   Gtk::Frame *frame41 = Gtk::manage(new class Gtk::Frame());
   label_EP = Gtk::manage(new class Gtk::Label("50%"));
   label_Gold = Gtk::manage(new class Gtk::Label("50%"));
   
   Gtk::Adjustment *vscale_EP_Gold_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 10, 10));
   vscale_EP_Gold = Gtk::manage(new class Gtk::VScale(*vscale_EP_Gold_adj));
   
   Gtk::Table *table73 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::EventBox *eventbox1 = Gtk::manage(new class Gtk::EventBox());
   Gtk::Image *pixmap62 = Gtk::manage(new class Gtk::Image(MagusImage("Money-50.xpm")));
   Gtk::Label *label640 = Gtk::manage(new class Gtk::Label("Geld\n"
		"eing."));
   Gtk::HBox *hbox99 = Gtk::manage(new class Gtk::HBox(false, 0));
   button_gold_eingeben = Gtk::manage(new class Gtk::CheckButton());
   
   Gtk::Image *pixmap161 = Gtk::manage(new class Gtk::Image(MagusImage("Helper-50.xpm")));
   Gtk::Label *label639 = Gtk::manage(new class Gtk::Label("GFP\n"
		"eing."));
   Gtk::HBox *hbox98 = Gtk::manage(new class Gtk::HBox(false, 0));
   checkbutton_gfp = Gtk::manage(new class Gtk::CheckButton());
   
   Gtk::Image *pixmap93 = Gtk::manage(new class Gtk::Image(MagusImage("EP-Eingabe2-50.xpm")));
   Gtk::Label *label638 = Gtk::manage(new class Gtk::Label("EP\n"
		"eing."));
   Gtk::HBox *hbox97 = Gtk::manage(new class Gtk::HBox(false, 0));
   button_EP = Gtk::manage(new class Gtk::CheckButton());
   eventbox_eppp_steigern = Gtk::manage(new class Gtk::EventBox());
   
   Gtk::Table *table72 = Gtk::manage(new class Gtk::Table(2, 2, false));
   handlebox_steigern_2 = Gtk::manage(new class Gtk::HandleBox());
   flashing_gradanstieg = new class FlashingPixmap();
   
   Gtk::Label *label546 = Gtk::manage(new class Gtk::Label("Grad"));
   label_grad_GFP = Gtk::manage(new class Gtk::Label("label553"));
   
   Gtk::VBox *vbox38 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Button *button_grad = Gtk::manage(new class Gtk::Button());
   Gtk::Image *pixmap125 = Gtk::manage(new class Gtk::Image(MagusImage("Dice-2W6-trans-50.xpm")));
   Gtk::Label *label547 = Gtk::manage(new class Gtk::Label("Ausdauer"));
   label_ausdauer_GFP = Gtk::manage(new class Gtk::Label("label553"));
   
   Gtk::VBox *vbox39 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Button *button_grad_ausdauer = Gtk::manage(new class Gtk::Button());
   Gtk::Image *pixmap126 = Gtk::manage(new class Gtk::Image(MagusImage("Abwehr-50.xpm")));
   Gtk::Label *label548 = Gtk::manage(new class Gtk::Label("Abwehr"));
   label_abwehr_GFP = Gtk::manage(new class Gtk::Label("label553"));
   
   Gtk::VBox *vbox40 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Button *button_grad_abwehr = Gtk::manage(new class Gtk::Button());
   Gtk::Image *pixmap127 = Gtk::manage(new class Gtk::Image(MagusImage("wizzard-trans-50.xpm")));
   Gtk::Label *label549 = Gtk::manage(new class Gtk::Label("Zauber"));
   label_zauber_GFP = Gtk::manage(new class Gtk::Label("label553"));
   
   Gtk::VBox *vbox41 = Gtk::manage(new class Gtk::VBox(false, 0));
   button_grad_zaubern = Gtk::manage(new class Gtk::Button());
   
   Gtk::Image *pixmap130 = Gtk::manage(new class Gtk::Image(MagusImage("Grad-All-32.xpm")));
   Gtk::Label *label552 = Gtk::manage(new class Gtk::Label("Alles an GFP anpassen"));
   Gtk::VBox *vbox63 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Button *grad_anstieg = Gtk::manage(new class Gtk::Button());
   Gtk::Image *pixmap128 = Gtk::manage(new class Gtk::Image(MagusImage("Resistenz-trans-32.xpm")));
   Gtk::Label *label550 = Gtk::manage(new class Gtk::Label("Resistenz"));
   label_resistenz_GFP = Gtk::manage(new class Gtk::Label("label553"));
   
   Gtk::VBox *vbox42 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Button *button_grad_resistenz = Gtk::manage(new class Gtk::Button());
   flashing_eigenschaft = new class FlashingPixmap();
   
   Gtk::Label *label551 = Gtk::manage(new class Gtk::Label("Eigensch."));
   Gtk::Adjustment *spinbutton_eigenschaften_grad_anstieg_adj = Gtk::manage(new class Gtk::Adjustment(1, 0, 100, 1, 10, 10));
   spinbutton_eigenschaften_grad_anstieg = Gtk::manage(new class Gtk::SpinButton(*spinbutton_eigenschaften_grad_anstieg_adj, 1, 0));
   
   Gtk::VBox *vbox43 = Gtk::manage(new class Gtk::VBox(false, 0));
   button_grad_basiswerte = Gtk::manage(new class Gtk::Button());
   table_gradsteigern_lang = Gtk::manage(new class Gtk::Table(2, 2, false));
   
   Gtk::Table *table75 = Gtk::manage(new class Gtk::Table(2, 2, false));
   handlebox_steigern_4 = Gtk::manage(new class Gtk::HandleBox());
   
   Gtk::Image *pixmap82 = Gtk::manage(new class Gtk::Image(MagusImage("Automat-32.xpm")));
   Gtk::RadioButton::Group _RadioBGroup_radio_spruchrolle_auto;
   radio_spruchrolle_auto = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radio_spruchrolle_auto));
   
   Gtk::Image *pixmap81 = Gtk::manage(new class Gtk::Image(MagusImage("Green-Dice-trans-50.xpm")));
   radio_spruchrolle_wuerfeln = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radio_spruchrolle_auto));
   
   Gtk::Table *table50 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Image *pixmap79 = Gtk::manage(new class Gtk::Image(MagusImage("LearnRoll-trans-50.xpm")));
   Gtk::Label *label520 = Gtk::manage(new class Gtk::Label("Lernen mit\n"
		"Spruchrolle"));
   Gtk::HBox *hbox44 = Gtk::manage(new class Gtk::HBox(false, 0));
   togglebutton_spruchrolle = Gtk::manage(new class Gtk::ToggleButton());
   
   Gtk::Image *pixmap92 = Gtk::manage(new class Gtk::Image(MagusImage("MAGUS_Logo_Small.xpm")));
   Gtk::Label *label534 = Gtk::manage(new class Gtk::Label("Alle Zauber\n"
		"anzeigen"));
   Gtk::HBox *hbox49 = Gtk::manage(new class Gtk::HBox(false, 0));
   togglebutton_alle_zauber = Gtk::manage(new class Gtk::ToggleButton());
   
   Gtk::Image *pixmap91 = Gtk::manage(new class Gtk::Image(MagusImage("MAGUS_Logo_Small.xpm")));
   Gtk::Label *label533 = Gtk::manage(new class Gtk::Label("Zaubersalze\n"
		"anzeigen"));
   Gtk::HBox *hbox48 = Gtk::manage(new class Gtk::HBox(false, 0));
   togglebutton_zaubersalze = Gtk::manage(new class Gtk::ToggleButton());
   
   Gtk::Table *table150 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Table *table102 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label668 = Gtk::manage(new class Gtk::Label("Zauber"));
   frame_zauber_zusatz = Gtk::manage(new class Gtk::Frame());
   
   Gtk::RadioButton::Group _RadioBGroup_radiobutton_pp_hoch_wie_geht;
   radiobutton_pp_hoch_wie_geht = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_pp_hoch_wie_geht, "n Stufen"));
   radiobutton_pp_1stufe = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_pp_hoch_wie_geht, "1 Stufe"));
   togglebutton_pp_verfallen = Gtk::manage(new class Gtk::ToggleButton("FP verfallen lassen"));
   togglebutton_pp_aep_fuellen = Gtk::manage(new class Gtk::ToggleButton("Mit EP auffüllen"));
   table_pp_einstellungen = Gtk::manage(new class Gtk::Table(2, 2, false));
   
   Gtk::Image *pixmap76 = Gtk::manage(new class Gtk::Image(MagusImage("Learning_by_Doing-32.xpm")));
   Gtk::Label *label519 = Gtk::manage(new class Gtk::Label("Praxis         "));
   Gtk::HBox *hbox43 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::RadioButton::Group _RadioBGroup_radiobutton_praxis;
   radiobutton_praxis = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_praxis));
   
   Gtk::Image *pixmap77 = Gtk::manage(new class Gtk::Image(MagusImage("Teacher-trans32.xpm")));
   Gtk::Label *label517 = Gtk::manage(new class Gtk::Label("Unterweisung"));
   Gtk::HBox *hbox41 = Gtk::manage(new class Gtk::HBox(false, 0));
   radiobutton_unterweisung = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_praxis));
   
   Gtk::Image *pixmap75 = Gtk::manage(new class Gtk::Image(MagusImage("Self-Learning-32.xpm")));
   Gtk::Label *label518 = Gtk::manage(new class Gtk::Label("Selbststudium"));
   Gtk::HBox *hbox42 = Gtk::manage(new class Gtk::HBox(false, 0));
   radiobutton_selbst = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_praxis));
   
   Gtk::Table *table101 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label667 = Gtk::manage(new class Gtk::Label("Steigern mit"));
   frame_lernen_mit = Gtk::manage(new class Gtk::Frame());
   
   Gtk::Image *pixmap72 = Gtk::manage(new class Gtk::Image(MagusImage("Reduzieren-trans-32.xpm")));
   Gtk::Label *label514 = Gtk::manage(new class Gtk::Label("Reduzieren"));
   Gtk::HBox *hbox38 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::RadioButton::Group _RadioBGroup_radiobutton_reduzieren;
   radiobutton_reduzieren = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_reduzieren));
   
   Gtk::Image *pixmap73 = Gtk::manage(new class Gtk::Image(MagusImage("Verlernen-trans-32.xpm")));
   Gtk::Label *label515 = Gtk::manage(new class Gtk::Label("Verlernen "));
   Gtk::HBox *hbox39 = Gtk::manage(new class Gtk::HBox(false, 0));
   radiobutton_verlernen = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_reduzieren));
   
   Gtk::Image *pixmap74 = Gtk::manage(new class Gtk::Image(MagusImage("Steigern-trans-32.xpm")));
   Gtk::Label *label513 = Gtk::manage(new class Gtk::Label("Steigern    "));
   Gtk::HBox *hbox37 = Gtk::manage(new class Gtk::HBox(false, 0));
   radiobutton_steigern = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_reduzieren));
   
   Gtk::Table *table100 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label669 = Gtk::manage(new class Gtk::Label("Fertigkeit"));
   frame_fertigkeit = Gtk::manage(new class Gtk::Frame());
   
   Gtk::Adjustment *spinbutton_pp_eingeben_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100000, 1, 10, 10));
   spinbutton_pp_eingeben = Gtk::manage(new class Gtk::SpinButton(*spinbutton_pp_eingeben_adj, 1, 0));
   
   Gtk::Image *pixmap78 = Gtk::manage(new class Gtk::Image(MagusImage("PP-Eingeben-trans-32.xpm")));
   Gtk::Label *label516 = Gtk::manage(new class Gtk::Label("Praxispunkte\n"
		"eingeben"));
   Gtk::HBox *hbox40 = Gtk::manage(new class Gtk::HBox(false, 0));
   togglebutton_praxispunkte = Gtk::manage(new class Gtk::ToggleButton());
   
   Gtk::RadioButton::Group _RadioBGroup_radiobutton_pp_fertigkeit;
   radiobutton_pp_fertigkeit = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_pp_fertigkeit, "Fertigkeit"));
   radiobutton_pp_abwehr = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_pp_fertigkeit, "Abwehr"));
   radiobutton_pp_zauber = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_pp_fertigkeit, "Zaubern"));
   radiobutton_pp_spezial = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_pp_fertigkeit));
   radiobutton_pp_resistenz = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_pp_fertigkeit, "Resistenz"));
   vbox_praxispunkte = Gtk::manage(new class Gtk::VBox(false, 0));
   
   Gtk::Table *table110 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label670 = Gtk::manage(new class Gtk::Label("Praxispunkte"));
   frame_praxispunkte = Gtk::manage(new class Gtk::Frame());
   
   Gtk::Table *table99 = Gtk::manage(new class Gtk::Table(2, 2, false));
   handlebox_steigern_3 = Gtk::manage(new class Gtk::HandleBox());
   table_handlebox1 = Gtk::manage(new class Gtk::Table(2, 2, false));
   tree_steigern_zusatz->set_events(Gdk::LEAVE_NOTIFY_MASK);
   viewport24->set_shadow_type(Gtk::SHADOW_NONE);
   viewport24->add(*tree_steigern_zusatz);
   scrolledwindow_landauswahl->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow_landauswahl->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow_landauswahl->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow_landauswahl->add(*viewport24);
   scrolledwindow_fert_alt->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow_fert_alt->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow_fert_alt->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow_fert_alt->add(*alte_fert_tree);
   scrolledwindow55->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow55->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow55->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow55->add(*neue_fert_tree);
   vpaned1->pack1(*scrolledwindow_fert_alt, Gtk::EXPAND|Gtk::SHRINK);
   vpaned1->pack2(*scrolledwindow55, Gtk::EXPAND|Gtk::SHRINK);
   alignment2->add(*vpaned1);
   table15->set_row_spacings(0);
   table15->set_col_spacings(0);
   table15->attach(*alignment2, 0, 1, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label_ns_fertigkeiten->set_alignment(0.5,0.5);
   label_ns_fertigkeiten->set_padding(0,0);
   label_ns_fertigkeiten->set_justify(Gtk::JUSTIFY_CENTER);
   label_ns_fertigkeiten->set_line_wrap(false);
   label_ns_fertigkeiten->set_use_markup(false);
   label_ns_fertigkeiten->set_selectable(false);
   pixmap_ns_fertig->set_alignment(0.5,0.5);
   pixmap_ns_fertig->set_padding(0,0);
   vbox21->pack_start(*label_ns_fertigkeiten, Gtk::PACK_SHRINK, 0);
   vbox21->pack_start(*pixmap_ns_fertig);
   label530->set_alignment(0.5,0.5);
   label530->set_padding(0,0);
   label530->set_justify(Gtk::JUSTIFY_CENTER);
   label530->set_line_wrap(false);
   label530->set_use_markup(false);
   label530->set_selectable(false);
   scrolledwindow_waffen_alt->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow_waffen_alt->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow_waffen_alt->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow_waffen_alt->add(*alte_waffen_tree);
   scrolledwindow69->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow69->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow69->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow69->add(*neue_waffen_tree);
   vpaned13->pack1(*scrolledwindow_waffen_alt, Gtk::EXPAND);
   vpaned13->pack2(*scrolledwindow69, Gtk::EXPAND);
   vbox27->pack_start(*label530, Gtk::PACK_SHRINK, 0);
   vbox27->pack_start(*vpaned13);
   label529->set_alignment(0.5,0.5);
   label529->set_padding(0,0);
   label529->set_justify(Gtk::JUSTIFY_CENTER);
   label529->set_line_wrap(false);
   label529->set_use_markup(false);
   label529->set_selectable(false);
   scrolledwindow67->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow67->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow67->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow67->add(*alte_grund_tree);
   scrolledwindow68->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow68->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow68->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow68->add(*neue_grund_tree);
   vpaned12->pack1(*scrolledwindow67, Gtk::EXPAND);
   vpaned12->pack2(*scrolledwindow68, Gtk::EXPAND);
   vbox28->pack_start(*label529, Gtk::PACK_SHRINK, 0);
   vbox28->pack_start(*vpaned12);
   hpaned5->pack1(*vbox27, Gtk::EXPAND);
   hpaned5->pack2(*vbox28, Gtk::EXPAND);
   table18->set_row_spacings(0);
   table18->set_col_spacings(0);
   table18->attach(*hpaned5, 0, 3, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label_nw_waffen->set_alignment(0.5,0.5);
   label_nw_waffen->set_padding(0,0);
   label_nw_waffen->set_justify(Gtk::JUSTIFY_CENTER);
   label_nw_waffen->set_line_wrap(false);
   label_nw_waffen->set_use_markup(false);
   label_nw_waffen->set_selectable(false);
   pixmap_ns_waffen->set_alignment(0.5,0.5);
   pixmap_ns_waffen->set_padding(0,0);
   vbox22->pack_start(*label_nw_waffen, Gtk::PACK_SHRINK, 0);
   vbox22->pack_start(*pixmap_ns_waffen);
   label379->set_alignment(0.5,0.5);
   label379->set_padding(0,0);
   label379->set_justify(Gtk::JUSTIFY_CENTER);
   label379->set_line_wrap(false);
   label379->set_use_markup(false);
   label379->set_selectable(false);
   scrolledwindow33->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow33->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow33->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow33->add(*alte_zauber_tree);
   scrolledwindow34->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow34->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow34->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow34->add(*neue_zauber_tree);
   vpaned2->pack1(*scrolledwindow33, Gtk::EXPAND);
   vpaned2->pack2(*scrolledwindow34, Gtk::EXPAND);
   vbox17->pack_start(*label379, Gtk::PACK_SHRINK, 0);
   vbox17->pack_start(*vpaned2);
   label380->set_alignment(0.5,0.5);
   label380->set_padding(0,0);
   label380->set_justify(Gtk::JUSTIFY_CENTER);
   label380->set_line_wrap(false);
   label380->set_use_markup(false);
   label380->set_selectable(false);
   scrolledwindow51->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow51->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow51->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow51->add(*alte_zaubermittel_tree);
   scrolledwindow52->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow52->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow52->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow52->add(*neue_zaubermittel_tree);
   vpaned8->pack1(*scrolledwindow51, Gtk::EXPAND);
   vpaned8->pack2(*scrolledwindow52, Gtk::EXPAND);
   vbox18->pack_start(*label380, Gtk::PACK_SHRINK, 0);
   vbox18->pack_start(*vpaned8);
   hpaned3->pack1(*vbox17, Gtk::EXPAND);
   hpaned3->pack2(*vbox18, Gtk::EXPAND);
   table_magier_steigern->set_row_spacings(0);
   table_magier_steigern->set_col_spacings(0);
   table_magier_steigern->attach(*hpaned3, 0, 1, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label_ns_zauber->set_alignment(0.5,0.5);
   label_ns_zauber->set_padding(0,0);
   label_ns_zauber->set_justify(Gtk::JUSTIFY_CENTER);
   label_ns_zauber->set_line_wrap(false);
   label_ns_zauber->set_use_markup(false);
   label_ns_zauber->set_selectable(false);
   pixmap_ns_zauber->set_alignment(0.5,0.5);
   pixmap_ns_zauber->set_padding(0,0);
   vbox23->pack_start(*label_ns_zauber, Gtk::PACK_SHRINK, 0);
   vbox23->pack_start(*pixmap_ns_zauber);
   scrolledwindow49->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow49->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow49->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow49->add(*alte_kido_tree);
   scrolledwindow50->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow50->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow50->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow50->add(*neue_kido_tree);
   vpaned7->pack1(*scrolledwindow49, Gtk::EXPAND);
   vpaned7->pack2(*scrolledwindow50, Gtk::EXPAND);
   table_kido_steigern->set_row_spacings(0);
   table_kido_steigern->set_col_spacings(0);
   table_kido_steigern->attach(*vpaned7, 0, 1, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label_ns_kido->set_alignment(0.5,0.5);
   label_ns_kido->set_padding(0,0);
   label_ns_kido->set_justify(Gtk::JUSTIFY_CENTER);
   label_ns_kido->set_line_wrap(false);
   label_ns_kido->set_use_markup(false);
   label_ns_kido->set_selectable(false);
   pixmap_ns_kido->set_alignment(0.5,0.5);
   pixmap_ns_kido->set_padding(0,0);
   vbox24->pack_start(*label_ns_kido, Gtk::PACK_SHRINK, 0);
   vbox24->pack_start(*pixmap_ns_kido);
   label282->set_alignment(0.5,0.5);
   label282->set_padding(0,0);
   label282->set_justify(Gtk::JUSTIFY_CENTER);
   label282->set_line_wrap(false);
   label282->set_use_markup(false);
   label282->set_selectable(false);
   scrolledwindow_sprache_alt->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow_sprache_alt->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow_sprache_alt->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow_sprache_alt->add(*alte_sprache_tree);
   pixmap163->set_alignment(0.5,0.5);
   pixmap163->set_padding(0,0);
   label600->set_alignment(0.5,0.5);
   label600->set_padding(0,0);
   label600->set_justify(Gtk::JUSTIFY_CENTER);
   label600->set_line_wrap(false);
   label600->set_use_markup(false);
   label600->set_selectable(false);
   hbox86->pack_start(*pixmap163);
   hbox86->pack_start(*label600, Gtk::PACK_SHRINK, 0);
   togglebutton_neue_sprache_pp->set_flags(Gtk::CAN_FOCUS);
   togglebutton_neue_sprache_pp->set_relief(Gtk::RELIEF_NORMAL);
   togglebutton_neue_sprache_pp->set_active(false);
   togglebutton_neue_sprache_pp->add(*hbox86);
   label601->set_alignment(0,0.5);
   label601->set_padding(0,0);
   label601->set_justify(Gtk::JUSTIFY_CENTER);
   label601->set_line_wrap(false);
   label601->set_use_markup(false);
   label601->set_selectable(false);
   scrolledwindow23->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow23->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow23->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow23->add(*neue_sprache_tree);
   table162->set_row_spacings(0);
   table162->set_col_spacings(0);
   table162->attach(*togglebutton_neue_sprache_pp, 1, 2, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table162->attach(*label601, 1, 2, 1, 2, Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK, 0, 0);
   table162->attach(*scrolledwindow23, 0, 1, 0, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   vpaned3->pack1(*scrolledwindow_sprache_alt, Gtk::EXPAND);
   vpaned3->pack2(*table162, Gtk::EXPAND|Gtk::SHRINK);
   vbox14->pack_start(*label282, Gtk::PACK_SHRINK, 0);
   vbox14->pack_start(*vpaned3);
   label281->set_alignment(0.5,0.5);
   label281->set_padding(0,0);
   label281->set_justify(Gtk::JUSTIFY_CENTER);
   label281->set_line_wrap(false);
   label281->set_use_markup(false);
   label281->set_selectable(false);
   scrolledwindow_schrift_alt->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow_schrift_alt->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow_schrift_alt->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow_schrift_alt->add(*alte_schrift_tree);
   scrolledwindow24->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow24->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow24->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow24->add(*neue_schrift_tree);
   vpaned4->pack1(*scrolledwindow_schrift_alt, Gtk::EXPAND);
   vpaned4->pack2(*scrolledwindow24, Gtk::EXPAND);
   vbox13->pack_start(*label281, Gtk::PACK_SHRINK, 0);
   vbox13->pack_start(*vpaned4);
   hpaned1->pack1(*vbox14, Gtk::EXPAND);
   hpaned1->pack2(*vbox13, Gtk::EXPAND);
   table_sprache_schriften->set_row_spacings(0);
   table_sprache_schriften->set_col_spacings(0);
   table_sprache_schriften->attach(*hpaned1, 0, 3, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label_ns_sprache->set_alignment(0.5,0.5);
   label_ns_sprache->set_padding(0,0);
   label_ns_sprache->set_justify(Gtk::JUSTIFY_CENTER);
   label_ns_sprache->set_line_wrap(false);
   label_ns_sprache->set_use_markup(false);
   label_ns_sprache->set_selectable(false);
   pixmap_ns_sprache->set_alignment(0.5,0.5);
   pixmap_ns_sprache->set_padding(0,0);
   vbox25->pack_start(*label_ns_sprache, Gtk::PACK_SHRINK, 0);
   vbox25->pack_start(*pixmap_ns_sprache);
   pixmap64->set_alignment(0.5,0.5);
   pixmap64->set_padding(0,0);
   label_ruestung_1->set_alignment(0.5,0.5);
   label_ruestung_1->set_padding(0,0);
   label_ruestung_1->set_justify(Gtk::JUSTIFY_CENTER);
   label_ruestung_1->set_line_wrap(false);
   label_ruestung_1->set_use_markup(false);
   label_ruestung_1->set_selectable(false);
   vbox59->pack_start(*pixmap64);
   vbox59->pack_start(*label_ruestung_1, Gtk::PACK_SHRINK, 0);
   _tooltips.set_tip(*eventbox9, "Nach dem Aktivieren des Knopfes eine Rüstung aus der Liste wählen.", "");
   eventbox9->add(*vbox59);
   button_ruestung_1->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*button_ruestung_1, "Nach dem Aktivieren des Knopfes eine Rüstung aus der Liste wählen.", "");
   button_ruestung_1->set_relief(Gtk::RELIEF_NORMAL);
   button_ruestung_1->set_mode(false);
   button_ruestung_1->set_active(false);
   button_ruestung_1->add(*eventbox9);
   pixmap159->set_alignment(0.5,0.5);
   pixmap159->set_padding(0,0);
   label_ruestung_2->set_alignment(0.5,0.5);
   label_ruestung_2->set_padding(0,0);
   label_ruestung_2->set_justify(Gtk::JUSTIFY_CENTER);
   label_ruestung_2->set_line_wrap(false);
   label_ruestung_2->set_use_markup(false);
   label_ruestung_2->set_selectable(false);
   vbox60->pack_start(*pixmap159);
   vbox60->pack_start(*label_ruestung_2, Gtk::PACK_SHRINK, 0);
   _tooltips.set_tip(*eventbox17, "Nach dem Aktivieren des Knopfes eine Rüstung aus der Liste wählen.", "");
   eventbox17->add(*vbox60);
   button_ruestung_2->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*button_ruestung_2, "Nach dem Aktivieren des Knopfes ein Rüstung aus der Liste wählen.", "");
   button_ruestung_2->set_relief(Gtk::RELIEF_NORMAL);
   button_ruestung_2->set_mode(false);
   button_ruestung_2->set_active(false);
   button_ruestung_2->add(*eventbox17);
   clist_ruestung->set_flags(Gtk::CAN_FOCUS);
   clist_ruestung->set_headers_visible(true);
   clist_ruestung->set_rules_hint(false);
   clist_ruestung->set_reorderable(false);
   clist_ruestung->set_enable_search(true);
   viewport45->set_shadow_type(Gtk::SHADOW_NONE);
   viewport45->add(*clist_ruestung);
   scrolledwindow82->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow82->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow82->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow82->add(*viewport45);
   table152->set_row_spacings(0);
   table152->set_col_spacings(0);
   table152->attach(*button_ruestung_1, 0, 1, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table152->attach(*button_ruestung_2, 1, 2, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table152->attach(*scrolledwindow82, 0, 2, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label671->set_alignment(0.5,0.5);
   label671->set_padding(0,0);
   label671->set_justify(Gtk::JUSTIFY_LEFT);
   label671->set_line_wrap(false);
   label671->set_use_markup(false);
   label671->set_selectable(false);
   frame107->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame107->set_label_align(0,0.5);
   frame107->add(*table152);
   frame107->set_label_widget(*label671);
   pixmap160->set_alignment(0.5,0.5);
   pixmap160->set_padding(0,0);
   label593->set_alignment(0.5,0.5);
   label593->set_padding(0,0);
   label593->set_justify(Gtk::JUSTIFY_CENTER);
   label593->set_line_wrap(false);
   label593->set_use_markup(false);
   label593->set_selectable(false);
   hbox76->pack_start(*pixmap160);
   hbox76->pack_start(*label593, Gtk::PACK_SHRINK, 0);
   checkbutton_mag_waffenbonus->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*checkbutton_mag_waffenbonus, "Nach dem aktivieren: Waffe wählen", "");
   checkbutton_mag_waffenbonus->set_relief(Gtk::RELIEF_NORMAL);
   checkbutton_mag_waffenbonus->set_mode(false);
   checkbutton_mag_waffenbonus->set_active(false);
   checkbutton_mag_waffenbonus->add(*hbox76);
   scrolledwindow84->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow84->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow84->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow84->add(*waffenbesitz_alt_tree);
   label_av_bonus->set_alignment(0,0.5);
   label_av_bonus->set_padding(0,0);
   label_av_bonus->set_justify(Gtk::JUSTIFY_CENTER);
   label_av_bonus->set_line_wrap(false);
   label_av_bonus->set_use_markup(false);
   label_av_bonus->set_selectable(false);
   label_sl_bonus->set_alignment(0,0.5);
   label_sl_bonus->set_padding(0,0);
   label_sl_bonus->set_justify(Gtk::JUSTIFY_CENTER);
   label_sl_bonus->set_line_wrap(false);
   label_sl_bonus->set_use_markup(false);
   label_sl_bonus->set_selectable(false);
   label596->set_alignment(0,0.5);
   label596->set_padding(0,0);
   label596->set_justify(Gtk::JUSTIFY_CENTER);
   label596->set_line_wrap(false);
   label596->set_use_markup(false);
   label596->set_selectable(false);
   spinbutton_av_bonus->set_flags(Gtk::CAN_FOCUS);
   spinbutton_av_bonus->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_av_bonus->set_numeric(false);
   spinbutton_av_bonus->set_digits(0);
   spinbutton_av_bonus->set_wrap(false);
   spinbutton_sl_bonus->set_flags(Gtk::CAN_FOCUS);
   spinbutton_sl_bonus->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_sl_bonus->set_numeric(false);
   spinbutton_sl_bonus->set_digits(0);
   spinbutton_sl_bonus->set_wrap(false);
   entry_magisch->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*entry_magisch, "Für eine magische (+0/+0) Waffe muß hier ein '*' eingetragen werden.", "");
   entry_magisch->set_visibility(true);
   entry_magisch->set_editable(true);
   entry_magisch->set_max_length(0);
   entry_magisch->set_text("");
   entry_magisch->set_has_frame(true);
   entry_magisch->set_activates_default(false);
   table_magbonus->set_row_spacings(0);
   table_magbonus->set_col_spacings(0);
   table_magbonus->attach(*label_av_bonus, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_magbonus->attach(*label_sl_bonus, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_magbonus->attach(*label596, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_magbonus->attach(*spinbutton_av_bonus, 1, 2, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_magbonus->attach(*spinbutton_sl_bonus, 1, 2, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_magbonus->attach(*entry_magisch, 1, 2, 2, 3, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table156->set_row_spacings(0);
   table156->set_col_spacings(0);
   table156->attach(*checkbutton_mag_waffenbonus, 1, 2, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table156->attach(*scrolledwindow84, 0, 1, 0, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table156->attach(*table_magbonus, 1, 2, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   scrolledwindow83->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow83->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow83->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow83->add(*waffenbesitz_neu_tree);
   table159->set_row_spacings(0);
   table159->set_col_spacings(0);
   table159->attach(*table156, 0, 1, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table159->attach(*scrolledwindow83, 0, 1, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label672->set_alignment(0.5,0.5);
   label672->set_padding(0,0);
   label672->set_justify(Gtk::JUSTIFY_LEFT);
   label672->set_line_wrap(false);
   label672->set_use_markup(false);
   label672->set_selectable(false);
   frame108->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame108->set_label_align(0,0.5);
   frame108->add(*table159);
   frame108->set_label_widget(*label672);
   table158->set_row_spacings(0);
   table158->set_col_spacings(0);
   table158->attach(*frame107, 1, 2, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table158->attach(*frame108, 0, 1, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label_ns_besitz->set_alignment(0.5,0.5);
   label_ns_besitz->set_padding(0,0);
   label_ns_besitz->set_justify(Gtk::JUSTIFY_CENTER);
   label_ns_besitz->set_line_wrap(false);
   label_ns_besitz->set_use_markup(false);
   label_ns_besitz->set_selectable(false);
   pixmap_ns_besitz->set_alignment(0.5,0.5);
   pixmap_ns_besitz->set_padding(0,0);
   vbox58->pack_start(*label_ns_besitz, Gtk::PACK_SHRINK, 0);
   vbox58->pack_start(*pixmap_ns_besitz);
   notebook_lernen->set_flags(Gtk::CAN_FOCUS);
   notebook_lernen->set_show_tabs(true);
   notebook_lernen->set_show_border(false);
   notebook_lernen->set_tab_pos(Gtk::POS_LEFT);
   notebook_lernen->set_scrollable(false);
   notebook_lernen->append_page(*table15, *vbox21);
   notebook_lernen->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   notebook_lernen->append_page(*table18, *vbox22);
   notebook_lernen->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   notebook_lernen->append_page(*table_magier_steigern, *vbox23);
   notebook_lernen->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   notebook_lernen->append_page(*table_kido_steigern, *vbox24);
   notebook_lernen->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   notebook_lernen->append_page(*table_sprache_schriften, *vbox25);
   notebook_lernen->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   notebook_lernen->append_page(*table158, *vbox58);
   notebook_lernen->pages().back().set_tab_label_packing(true, true, Gtk::PACK_START);
   frame_spezielles->set_shadow_type(Gtk::SHADOW_IN);
   frame_spezielles->set_label_align(0,0.5);
   label_s_grad->set_alignment(0.5,0.5);
   label_s_grad->set_padding(0,0);
   label_s_grad->set_justify(Gtk::JUSTIFY_CENTER);
   label_s_grad->set_line_wrap(false);
   label_s_grad->set_use_markup(false);
   label_s_grad->set_selectable(false);
   label646->set_alignment(0.5,0.5);
   label646->set_padding(0,0);
   label646->set_justify(Gtk::JUSTIFY_LEFT);
   label646->set_line_wrap(false);
   label646->set_use_markup(false);
   label646->set_selectable(false);
   frame73->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame73->set_label_align(0,0.5);
   frame73->add(*label_s_grad);
   frame73->set_label_widget(*label646);
   label_s_resistenz->set_alignment(0.5,0.5);
   label_s_resistenz->set_padding(0,0);
   label_s_resistenz->set_justify(Gtk::JUSTIFY_CENTER);
   label_s_resistenz->set_line_wrap(false);
   label_s_resistenz->set_use_markup(false);
   label_s_resistenz->set_selectable(false);
   label647->set_alignment(0.5,0.5);
   label647->set_padding(0,0);
   label647->set_justify(Gtk::JUSTIFY_LEFT);
   label647->set_line_wrap(false);
   label647->set_use_markup(false);
   label647->set_selectable(false);
   frame77->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame77->set_label_align(0,0.5);
   frame77->add(*label_s_resistenz);
   frame77->set_label_widget(*label647);
   label_s_zaubern->set_alignment(0.5,0.5);
   label_s_zaubern->set_padding(0,0);
   label_s_zaubern->set_justify(Gtk::JUSTIFY_CENTER);
   label_s_zaubern->set_line_wrap(false);
   label_s_zaubern->set_use_markup(false);
   label_s_zaubern->set_selectable(false);
   label648->set_alignment(0.5,0.5);
   label648->set_padding(0,0);
   label648->set_justify(Gtk::JUSTIFY_LEFT);
   label648->set_line_wrap(false);
   label648->set_use_markup(false);
   label648->set_selectable(false);
   frame76->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame76->set_label_align(0,0.5);
   frame76->add(*label_s_zaubern);
   frame76->set_label_widget(*label648);
   label_s_abwehr->set_alignment(0.5,0.5);
   label_s_abwehr->set_padding(0,0);
   label_s_abwehr->set_justify(Gtk::JUSTIFY_CENTER);
   label_s_abwehr->set_line_wrap(false);
   label_s_abwehr->set_use_markup(false);
   label_s_abwehr->set_selectable(false);
   label649->set_alignment(0.5,0.5);
   label649->set_padding(0,0);
   label649->set_justify(Gtk::JUSTIFY_LEFT);
   label649->set_line_wrap(false);
   label649->set_use_markup(false);
   label649->set_selectable(false);
   frame75->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame75->set_label_align(0,0.5);
   frame75->add(*label_s_abwehr);
   frame75->set_label_widget(*label649);
   label_alter->set_alignment(0.5,0.5);
   label_alter->set_padding(0,0);
   label_alter->set_justify(Gtk::JUSTIFY_CENTER);
   label_alter->set_line_wrap(false);
   label_alter->set_use_markup(false);
   label_alter->set_selectable(false);
   label650->set_alignment(0.5,0.5);
   label650->set_padding(0,0);
   label650->set_justify(Gtk::JUSTIFY_LEFT);
   label650->set_line_wrap(false);
   label650->set_use_markup(false);
   label650->set_selectable(false);
   frame90->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame90->set_label_align(0,0.5);
   frame90->add(*label_alter);
   frame90->set_label_widget(*label650);
   pixmap88->set_alignment(0.5,0.5);
   pixmap88->set_padding(0,0);
   _tooltips.set_tip(*eventbox10, "Lerntage dem Alter hinzurechnen", "");
   eventbox10->add(*pixmap88);
   button_alter->set_flags(Gtk::CAN_FOCUS);
   button_alter->set_relief(Gtk::RELIEF_NONE);
   button_alter->add(*eventbox10);
   label_s_ap->set_alignment(0.5,0.5);
   label_s_ap->set_padding(0,0);
   label_s_ap->set_justify(Gtk::JUSTIFY_CENTER);
   label_s_ap->set_line_wrap(false);
   label_s_ap->set_use_markup(false);
   label_s_ap->set_selectable(false);
   label651->set_alignment(0.5,0.5);
   label651->set_padding(0,0);
   label651->set_justify(Gtk::JUSTIFY_LEFT);
   label651->set_line_wrap(false);
   label651->set_use_markup(false);
   label651->set_selectable(false);
   frame74->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame74->set_label_align(0,0.5);
   frame74->add(*label_s_ap);
   frame74->set_label_widget(*label651);
   label_steigertage->set_alignment(0.5,0.5);
   label_steigertage->set_padding(0,0);
   label_steigertage->set_justify(Gtk::JUSTIFY_CENTER);
   label_steigertage->set_line_wrap(false);
   label_steigertage->set_use_markup(false);
   label_steigertage->set_selectable(false);
   label652->set_alignment(0.5,0.5);
   label652->set_padding(0,0);
   label652->set_justify(Gtk::JUSTIFY_LEFT);
   label652->set_line_wrap(false);
   label652->set_use_markup(false);
   label652->set_selectable(false);
   frame89->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame89->set_label_align(0,0.5);
   frame89->add(*label_steigertage);
   frame89->set_label_widget(*label652);
   steigern_typ->set_alignment(0.5,0.5);
   steigern_typ->set_padding(5,5);
   steigern_typ->set_justify(Gtk::JUSTIFY_CENTER);
   steigern_typ->set_line_wrap(false);
   steigern_typ->set_use_markup(false);
   steigern_typ->set_selectable(false);
   label653->set_alignment(0.5,0.5);
   label653->set_padding(0,0);
   label653->set_justify(Gtk::JUSTIFY_LEFT);
   label653->set_line_wrap(false);
   label653->set_use_markup(false);
   label653->set_selectable(false);
   frame65->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame65->set_label_align(0,0.5);
   frame65->add(*steigern_typ);
   frame65->set_label_widget(*label653);
   label_steigern_spezies->set_alignment(0.5,0.5);
   label_steigern_spezies->set_padding(5,5);
   label_steigern_spezies->set_justify(Gtk::JUSTIFY_CENTER);
   label_steigern_spezies->set_line_wrap(false);
   label_steigern_spezies->set_use_markup(false);
   label_steigern_spezies->set_selectable(false);
   label654->set_alignment(0.5,0.5);
   label654->set_padding(0,0);
   label654->set_justify(Gtk::JUSTIFY_LEFT);
   label654->set_line_wrap(false);
   label654->set_use_markup(false);
   label654->set_selectable(false);
   frame109->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame109->set_label_align(0,0.5);
   frame109->add(*label_steigern_spezies);
   frame109->set_label_widget(*label654);
   label_pp_abwehr->set_alignment(0.5,0.5);
   label_pp_abwehr->set_padding(0,0);
   label_pp_abwehr->set_justify(Gtk::JUSTIFY_CENTER);
   label_pp_abwehr->set_line_wrap(false);
   label_pp_abwehr->set_use_markup(false);
   label_pp_abwehr->set_selectable(false);
   label656->set_alignment(0.5,0.5);
   label656->set_padding(0,0);
   label656->set_justify(Gtk::JUSTIFY_LEFT);
   label656->set_line_wrap(false);
   label656->set_use_markup(false);
   label656->set_selectable(false);
   frame86->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame86->set_label_align(0,0.5);
   frame86->add(*label_pp_abwehr);
   frame86->set_label_widget(*label656);
   label_pp_zaubern->set_alignment(0.5,0.5);
   label_pp_zaubern->set_padding(0,0);
   label_pp_zaubern->set_justify(Gtk::JUSTIFY_CENTER);
   label_pp_zaubern->set_line_wrap(false);
   label_pp_zaubern->set_use_markup(false);
   label_pp_zaubern->set_selectable(false);
   label657->set_alignment(0.5,0.5);
   label657->set_padding(0,0);
   label657->set_justify(Gtk::JUSTIFY_LEFT);
   label657->set_line_wrap(false);
   label657->set_use_markup(false);
   label657->set_selectable(false);
   frame_pp_zaubern->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_pp_zaubern->set_label_align(0,0.5);
   frame_pp_zaubern->add(*label_pp_zaubern);
   frame_pp_zaubern->set_label_widget(*label657);
   label_pp_resistenz->set_alignment(0.5,0.5);
   label_pp_resistenz->set_padding(0,0);
   label_pp_resistenz->set_justify(Gtk::JUSTIFY_CENTER);
   label_pp_resistenz->set_line_wrap(false);
   label_pp_resistenz->set_use_markup(false);
   label_pp_resistenz->set_selectable(false);
   label658->set_alignment(0.5,0.5);
   label658->set_padding(0,0);
   label658->set_justify(Gtk::JUSTIFY_LEFT);
   label658->set_line_wrap(false);
   label658->set_use_markup(false);
   label658->set_selectable(false);
   frame88->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame88->set_label_align(0,0.5);
   frame88->add(*label_pp_resistenz);
   frame88->set_label_widget(*label658);
   label_pp_spezial->set_alignment(0.5,0.5);
   label_pp_spezial->set_padding(0,0);
   label_pp_spezial->set_justify(Gtk::JUSTIFY_CENTER);
   label_pp_spezial->set_line_wrap(false);
   label_pp_spezial->set_use_markup(false);
   label_pp_spezial->set_selectable(false);
   label659->set_alignment(0.5,0.5);
   label659->set_padding(0,0);
   label659->set_justify(Gtk::JUSTIFY_LEFT);
   label659->set_line_wrap(false);
   label659->set_use_markup(false);
   label659->set_selectable(false);
   frame_pp_spezial->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_pp_spezial->set_label_align(0,0.5);
   frame_pp_spezial->add(*label_pp_spezial);
   frame_pp_spezial->set_label_widget(*label659);
   table104->set_row_spacings(0);
   table104->set_col_spacings(0);
   table104->attach(*frame86, 0, 1, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table104->attach(*frame_pp_zaubern, 1, 2, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table104->attach(*frame88, 3, 4, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table104->attach(*frame_pp_spezial, 2, 3, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   label655->set_alignment(0.5,0.5);
   label655->set_padding(0,0);
   label655->set_justify(Gtk::JUSTIFY_LEFT);
   label655->set_line_wrap(false);
   label655->set_use_markup(false);
   label655->set_selectable(false);
   frame85->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame85->set_label_align(0,0.5);
   frame85->add(*table104);
   frame85->set_label_widget(*label655);
   table76->set_row_spacings(0);
   table76->set_col_spacings(0);
   table76->attach(*frame73, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table76->attach(*frame77, 3, 4, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table76->attach(*frame76, 2, 3, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table76->attach(*frame75, 1, 2, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table76->attach(*frame90, 4, 5, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table76->attach(*button_alter, 5, 6, 1, 3, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table76->attach(*frame74, 0, 1, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   table76->attach(*frame89, 4, 5, 2, 3, Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table76->attach(*frame65, 3, 6, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table76->attach(*frame109, 0, 3, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table76->attach(*frame85, 1, 4, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   handlebox_steigern_1->set_shadow_type(Gtk::SHADOW_OUT);
   handlebox_steigern_1->set_handle_position(Gtk::POS_LEFT);
   handlebox_steigern_1->set_snap_edge(Gtk::POS_TOP);
   handlebox_steigern_1->add(*table76);
   label660->set_alignment(0.5,0.5);
   label660->set_padding(0,0);
   label660->set_justify(Gtk::JUSTIFY_LEFT);
   label660->set_line_wrap(false);
   label660->set_use_markup(false);
   label660->set_selectable(false);
   frame67->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame67->set_label_align(0,0.5);
   frame67->add(*LabelSpin_aep);
   frame67->set_label_widget(*label660);
   label661->set_alignment(0.5,0.5);
   label661->set_padding(0,0);
   label661->set_justify(Gtk::JUSTIFY_LEFT);
   label661->set_line_wrap(false);
   label661->set_use_markup(false);
   label661->set_selectable(false);
   frame68->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame68->set_label_align(0,0.5);
   frame68->add(*LabelSpin_kep);
   frame68->set_label_widget(*label661);
   label662->set_alignment(0.5,0.5);
   label662->set_padding(0,0);
   label662->set_justify(Gtk::JUSTIFY_LEFT);
   label662->set_line_wrap(false);
   label662->set_use_markup(false);
   label662->set_selectable(false);
   frame69->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame69->set_label_align(0,0.5);
   frame69->add(*LabelSpin_zep);
   frame69->set_label_widget(*label662);
   hbox30->pack_start(*frame67);
   hbox30->pack_start(*frame68);
   hbox30->pack_start(*frame69);
   label663->set_alignment(0.5,0.5);
   label663->set_padding(0,0);
   label663->set_justify(Gtk::JUSTIFY_LEFT);
   label663->set_line_wrap(false);
   label663->set_use_markup(false);
   label663->set_selectable(false);
   frame70->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame70->set_label_align(0,0.5);
   frame70->add(*LabelSpin_gold);
   frame70->set_label_widget(*label663);
   label664->set_alignment(0.5,0.5);
   label664->set_padding(0,0);
   label664->set_justify(Gtk::JUSTIFY_LEFT);
   label664->set_line_wrap(false);
   label664->set_use_markup(false);
   label664->set_selectable(false);
   frame71->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame71->set_label_align(0,0.5);
   frame71->add(*LabelSpin_silber);
   frame71->set_label_widget(*label664);
   label665->set_alignment(0.5,0.5);
   label665->set_padding(0,0);
   label665->set_justify(Gtk::JUSTIFY_LEFT);
   label665->set_line_wrap(false);
   label665->set_use_markup(false);
   label665->set_selectable(false);
   frame72->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame72->set_label_align(0,0.5);
   frame72->add(*LabelSpin_kupfer);
   frame72->set_label_widget(*label665);
   hbox31->pack_start(*frame70);
   hbox31->pack_start(*frame71);
   hbox31->pack_start(*frame72);
   label666->set_alignment(0.5,0.5);
   label666->set_padding(0,0);
   label666->set_justify(Gtk::JUSTIFY_LEFT);
   label666->set_line_wrap(false);
   label666->set_use_markup(false);
   label666->set_selectable(false);
   frame41->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame41->set_label_align(0,0.5);
   frame41->add(*LabelSpin_gfp);
   frame41->set_label_widget(*label666);
   label_EP->set_alignment(3.91155e-07,0.5);
   label_EP->set_padding(0,0);
   label_EP->set_justify(Gtk::JUSTIFY_CENTER);
   label_EP->set_line_wrap(false);
   label_EP->set_use_markup(false);
   label_EP->set_selectable(false);
   label_Gold->set_alignment(0,0.5);
   label_Gold->set_padding(0,0);
   label_Gold->set_justify(Gtk::JUSTIFY_CENTER);
   label_Gold->set_line_wrap(false);
   label_Gold->set_use_markup(false);
   label_Gold->set_selectable(false);
   vscale_EP_Gold->set_flags(Gtk::CAN_FOCUS);
   vscale_EP_Gold->set_update_policy(Gtk::UPDATE_CONTINUOUS);
   vscale_EP_Gold->set_digits(1);
   vscale_EP_Gold->set_draw_value(false);
   vscale_EP_Gold->set_value_pos(Gtk::POS_TOP);
   table73->set_row_spacings(0);
   table73->set_col_spacings(0);
   table73->attach(*label_EP, 0, 1, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table73->attach(*label_Gold, 0, 1, 2, 3, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table73->attach(*vscale_EP_Gold, 0, 1, 1, 2, Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   _tooltips.set_tip(*eventbox1, "Einstellen des Verhältnisses zwischen Erfahrungspunkten und Gold beim Steigern. Je weiter oben, um so höher der Anteil der verwendeten EP. (Nur wenn mit 'Unterweisung' gesteigert wird.)", "");
   eventbox1->add(*table73);
   pixmap62->set_alignment(0.5,0.5);
   pixmap62->set_padding(0,0);
   label640->set_alignment(0.5,0.5);
   label640->set_padding(0,0);
   label640->set_justify(Gtk::JUSTIFY_CENTER);
   label640->set_line_wrap(false);
   label640->set_use_markup(false);
   label640->set_selectable(false);
   hbox99->pack_start(*pixmap62);
   hbox99->pack_start(*label640, Gtk::PACK_SHRINK, 0);
   button_gold_eingeben->set_flags(Gtk::CAN_FOCUS);
   button_gold_eingeben->set_relief(Gtk::RELIEF_NORMAL);
   button_gold_eingeben->set_mode(false);
   button_gold_eingeben->set_active(false);
   button_gold_eingeben->add(*hbox99);
   pixmap161->set_alignment(0.5,0.5);
   pixmap161->set_padding(0,0);
   label639->set_alignment(0.5,0.5);
   label639->set_padding(0,0);
   label639->set_justify(Gtk::JUSTIFY_CENTER);
   label639->set_line_wrap(false);
   label639->set_use_markup(false);
   label639->set_selectable(false);
   hbox98->pack_start(*pixmap161);
   hbox98->pack_start(*label639, Gtk::PACK_SHRINK, 0);
   checkbutton_gfp->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*checkbutton_gfp, "GFP eingeben (Rechte Maustaste: ändern)", "");
   checkbutton_gfp->set_relief(Gtk::RELIEF_NORMAL);
   checkbutton_gfp->set_mode(false);
   checkbutton_gfp->set_active(false);
   checkbutton_gfp->add(*hbox98);
   pixmap93->set_alignment(0.5,0.5);
   pixmap93->set_padding(0,0);
   label638->set_alignment(0.5,0.5);
   label638->set_padding(0,0);
   label638->set_justify(Gtk::JUSTIFY_CENTER);
   label638->set_line_wrap(false);
   label638->set_use_markup(false);
   label638->set_selectable(false);
   hbox97->pack_start(*pixmap93);
   hbox97->pack_start(*label638, Gtk::PACK_SHRINK, 0);
   _tooltips.set_tip(*button_EP, "Erfahrungspunkte eingeben (Rechte Maustaste: ändern)", "");
   button_EP->set_relief(Gtk::RELIEF_NORMAL);
   button_EP->set_mode(false);
   button_EP->set_active(false);
   button_EP->add(*hbox97);
   _tooltips.set_tip(*eventbox_eppp_steigern, "Ist dieser Knopf aktiviert, werden die Erfahrungspunkte entsprechend des eingestellten Verhältnisses reduziert. Ist dieser Knopf deaktiviert, kann beliebig gesteigert werden.", "");
   table72->set_border_width(1);
   table72->set_row_spacings(0);
   table72->set_col_spacings(0);
   table72->attach(*hbox30, 1, 4, 0, 1, Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table72->attach(*hbox31, 1, 4, 2, 3, Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table72->attach(*frame41, 2, 4, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table72->attach(*eventbox1, 0, 1, 0, 3, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table72->attach(*button_gold_eingeben, 4, 5, 2, 3, Gtk::SHRINK, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table72->attach(*checkbutton_gfp, 4, 5, 1, 2, Gtk::SHRINK, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table72->attach(*button_EP, 4, 5, 0, 1, Gtk::SHRINK, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table72->attach(*eventbox_eppp_steigern, 1, 2, 1, 2, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK, 0, 0);
   handlebox_steigern_2->set_shadow_type(Gtk::SHADOW_OUT);
   handlebox_steigern_2->set_handle_position(Gtk::POS_LEFT);
   handlebox_steigern_2->set_snap_edge(Gtk::POS_TOP);
   handlebox_steigern_2->add(*table72);
   label546->set_alignment(0.5,0.5);
   label546->set_padding(0,0);
   label546->set_justify(Gtk::JUSTIFY_CENTER);
   label546->set_line_wrap(false);
   label546->set_use_markup(false);
   label546->set_selectable(false);
   label_grad_GFP->set_alignment(0.5,0.5);
   label_grad_GFP->set_padding(0,0);
   label_grad_GFP->set_justify(Gtk::JUSTIFY_CENTER);
   label_grad_GFP->set_line_wrap(false);
   label_grad_GFP->set_use_markup(false);
   label_grad_GFP->set_selectable(false);
   vbox38->pack_start(*flashing_gradanstieg);
   vbox38->pack_start(*label546, Gtk::PACK_SHRINK, 0);
   vbox38->pack_start(*label_grad_GFP, Gtk::PACK_SHRINK, 0);
   _tooltips.set_tip(*button_grad, "Ist von den GFP her ein Gradanstieg möglich, so wird dieser hier gesetzt.", "");
   button_grad->set_relief(Gtk::RELIEF_NORMAL);
   button_grad->add(*vbox38);
   pixmap125->set_alignment(0.5,0.5);
   pixmap125->set_padding(0,0);
   label547->set_alignment(0.5,0.5);
   label547->set_padding(0,0);
   label547->set_justify(Gtk::JUSTIFY_CENTER);
   label547->set_line_wrap(false);
   label547->set_use_markup(false);
   label547->set_selectable(false);
   label_ausdauer_GFP->set_alignment(0.5,0.5);
   label_ausdauer_GFP->set_padding(0,0);
   label_ausdauer_GFP->set_justify(Gtk::JUSTIFY_CENTER);
   label_ausdauer_GFP->set_line_wrap(false);
   label_ausdauer_GFP->set_use_markup(false);
   label_ausdauer_GFP->set_selectable(false);
   vbox39->pack_start(*pixmap125);
   vbox39->pack_start(*label547, Gtk::PACK_SHRINK, 0);
   vbox39->pack_start(*label_ausdauer_GFP, Gtk::PACK_SHRINK, 0);
   _tooltips.set_tip(*button_grad_ausdauer, "Ausdauerpunkte neu auswürfeln", "");
   button_grad_ausdauer->set_relief(Gtk::RELIEF_NORMAL);
   button_grad_ausdauer->add(*vbox39);
   pixmap126->set_alignment(0.5,0.5);
   pixmap126->set_padding(0,0);
   label548->set_alignment(0.5,0.5);
   label548->set_padding(0,0);
   label548->set_justify(Gtk::JUSTIFY_CENTER);
   label548->set_line_wrap(false);
   label548->set_use_markup(false);
   label548->set_selectable(false);
   label_abwehr_GFP->set_alignment(0.5,0.5);
   label_abwehr_GFP->set_padding(0,0);
   label_abwehr_GFP->set_justify(Gtk::JUSTIFY_CENTER);
   label_abwehr_GFP->set_line_wrap(false);
   label_abwehr_GFP->set_use_markup(false);
   label_abwehr_GFP->set_selectable(false);
   vbox40->pack_start(*pixmap126);
   vbox40->pack_start(*label548, Gtk::PACK_SHRINK, 0);
   vbox40->pack_start(*label_abwehr_GFP, Gtk::PACK_SHRINK, 0);
   _tooltips.set_tip(*button_grad_abwehr, "Abwehr, Zaubern und Resistenz an den Grad anpassen", "");
   button_grad_abwehr->set_relief(Gtk::RELIEF_NORMAL);
   button_grad_abwehr->add(*vbox40);
   pixmap127->set_alignment(0.5,0.5);
   pixmap127->set_padding(0,0);
   label549->set_alignment(0.5,0.5);
   label549->set_padding(0,0);
   label549->set_justify(Gtk::JUSTIFY_CENTER);
   label549->set_line_wrap(false);
   label549->set_use_markup(false);
   label549->set_selectable(false);
   label_zauber_GFP->set_alignment(0.5,0.5);
   label_zauber_GFP->set_padding(0,0);
   label_zauber_GFP->set_justify(Gtk::JUSTIFY_CENTER);
   label_zauber_GFP->set_line_wrap(false);
   label_zauber_GFP->set_use_markup(false);
   label_zauber_GFP->set_selectable(false);
   vbox41->pack_start(*pixmap127);
   vbox41->pack_start(*label549, Gtk::PACK_SHRINK, 0);
   vbox41->pack_start(*label_zauber_GFP, Gtk::PACK_SHRINK, 0);
   button_grad_zaubern->set_relief(Gtk::RELIEF_NORMAL);
   button_grad_zaubern->add(*vbox41);
   pixmap130->set_alignment(0.5,0.5);
   pixmap130->set_padding(0,0);
   label552->set_alignment(0.5,0.5);
   label552->set_padding(0,0);
   label552->set_justify(Gtk::JUSTIFY_CENTER);
   label552->set_line_wrap(false);
   label552->set_use_markup(false);
   label552->set_selectable(false);
   vbox63->pack_start(*pixmap130);
   vbox63->pack_start(*label552, Gtk::PACK_SHRINK, 0);
   _tooltips.set_tip(*grad_anstieg, "Dieser Knopf macht all das, was die darunterliegenden auch machen", "");
   grad_anstieg->set_relief(Gtk::RELIEF_NORMAL);
   grad_anstieg->add(*vbox63);
   pixmap128->set_alignment(0.5,0.5);
   pixmap128->set_padding(0,0);
   label550->set_alignment(0.5,0.5);
   label550->set_padding(0,0);
   label550->set_justify(Gtk::JUSTIFY_CENTER);
   label550->set_line_wrap(false);
   label550->set_use_markup(false);
   label550->set_selectable(false);
   label_resistenz_GFP->set_alignment(0.5,0.5);
   label_resistenz_GFP->set_padding(0,0);
   label_resistenz_GFP->set_justify(Gtk::JUSTIFY_CENTER);
   label_resistenz_GFP->set_line_wrap(false);
   label_resistenz_GFP->set_use_markup(false);
   label_resistenz_GFP->set_selectable(false);
   vbox42->pack_start(*pixmap128);
   vbox42->pack_start(*label550, Gtk::PACK_SHRINK, 0);
   vbox42->pack_start(*label_resistenz_GFP, Gtk::PACK_SHRINK, 0);
   button_grad_resistenz->set_relief(Gtk::RELIEF_NORMAL);
   button_grad_resistenz->add(*vbox42);
   label551->set_alignment(0.5,0.5);
   label551->set_padding(0,0);
   label551->set_justify(Gtk::JUSTIFY_CENTER);
   label551->set_line_wrap(false);
   label551->set_use_markup(false);
   label551->set_selectable(false);
   spinbutton_eigenschaften_grad_anstieg->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*spinbutton_eigenschaften_grad_anstieg, "Eingabe mit 'Enter' bestätigen.", "");
   spinbutton_eigenschaften_grad_anstieg->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_eigenschaften_grad_anstieg->set_numeric(false);
   spinbutton_eigenschaften_grad_anstieg->set_digits(0);
   spinbutton_eigenschaften_grad_anstieg->set_wrap(false);
   vbox43->pack_start(*flashing_eigenschaft, Gtk::PACK_SHRINK, 0);
   vbox43->pack_start(*label551, Gtk::PACK_SHRINK, 0);
   vbox43->pack_start(*spinbutton_eigenschaften_grad_anstieg, Gtk::PACK_SHRINK, 0);
   _tooltips.set_tip(*button_grad_basiswerte, "Linke Maustaste: Würfeln, ob sich die Basiswerte beim Gradanstieg erhöhen         Rechte Maustaste: Würfelwurf direkt eingeben. In beiden Fällen wird zusätzlich die Schicksalsgunst erhöht.", "");
   button_grad_basiswerte->set_relief(Gtk::RELIEF_NORMAL);
   button_grad_basiswerte->add(*vbox43);
   table_gradsteigern_lang->set_row_spacings(0);
   table_gradsteigern_lang->set_col_spacings(0);
   table_gradsteigern_lang->attach(*button_grad, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_gradsteigern_lang->attach(*button_grad_ausdauer, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_gradsteigern_lang->attach(*button_grad_abwehr, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_gradsteigern_lang->attach(*button_grad_zaubern, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_gradsteigern_lang->attach(*grad_anstieg, 0, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_gradsteigern_lang->attach(*button_grad_resistenz, 0, 1, 3, 4, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK|Gtk::FILL, 0, 0);
   table_gradsteigern_lang->attach(*button_grad_basiswerte, 1, 2, 3, 4, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK|Gtk::FILL, 0, 0);
   table75->set_row_spacings(0);
   table75->set_col_spacings(0);
   table75->attach(*table_gradsteigern_lang, 0, 1, 0, 1, Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   handlebox_steigern_4->set_shadow_type(Gtk::SHADOW_OUT);
   handlebox_steigern_4->set_handle_position(Gtk::POS_LEFT);
   handlebox_steigern_4->set_snap_edge(Gtk::POS_TOP);
   handlebox_steigern_4->add(*table75);
   pixmap82->set_alignment(7.45058e-09,0.5);
   pixmap82->set_padding(0,0);
   radio_spruchrolle_auto->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radio_spruchrolle_auto, "Das Lernen von Spruchrolle ist automatisch erfolgreich.", "");
   radio_spruchrolle_auto->set_relief(Gtk::RELIEF_NORMAL);
   radio_spruchrolle_auto->set_mode(false);
   radio_spruchrolle_auto->set_active(false);
   radio_spruchrolle_auto->add(*pixmap82);
   pixmap81->set_alignment(7.45058e-09,0.5);
   pixmap81->set_padding(0,0);
   radio_spruchrolle_wuerfeln->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radio_spruchrolle_wuerfeln, "Es wird gewürfelt, ob das Lernen von Spruchrolle erfolgreich ist.", "");
   radio_spruchrolle_wuerfeln->set_relief(Gtk::RELIEF_NORMAL);
   radio_spruchrolle_wuerfeln->set_mode(false);
   radio_spruchrolle_wuerfeln->set_active(true);
   radio_spruchrolle_wuerfeln->add(*pixmap81);
   table50->set_row_spacings(0);
   table50->set_col_spacings(0);
   table50->attach(*radio_spruchrolle_auto, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table50->attach(*radio_spruchrolle_wuerfeln, 0, 1, 0, 1, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK|Gtk::FILL, 0, 0);
   pixmap79->set_alignment(0.5,0.5);
   pixmap79->set_padding(0,0);
   label520->set_alignment(0.5,0.5);
   label520->set_padding(0,0);
   label520->set_justify(Gtk::JUSTIFY_CENTER);
   label520->set_line_wrap(false);
   label520->set_use_markup(false);
   label520->set_selectable(false);
   hbox44->pack_start(*pixmap79, Gtk::PACK_SHRINK, 0);
   hbox44->pack_start(*label520, Gtk::PACK_SHRINK, 0);
   togglebutton_spruchrolle->set_flags(Gtk::CAN_FOCUS);
   togglebutton_spruchrolle->set_relief(Gtk::RELIEF_HALF);
   togglebutton_spruchrolle->set_active(false);
   togglebutton_spruchrolle->add(*hbox44);
   pixmap92->set_alignment(0.5,0.5);
   pixmap92->set_padding(0,0);
   label534->set_alignment(0.5,0.5);
   label534->set_padding(0,0);
   label534->set_justify(Gtk::JUSTIFY_CENTER);
   label534->set_line_wrap(false);
   label534->set_use_markup(false);
   label534->set_selectable(false);
   hbox49->pack_start(*pixmap92, Gtk::PACK_SHRINK, 0);
   hbox49->pack_start(*label534, Gtk::PACK_SHRINK, 0);
   togglebutton_alle_zauber->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*togglebutton_alle_zauber, "Es kann aus ALLEN Zaubern gewählt werden", "");
   togglebutton_alle_zauber->set_relief(Gtk::RELIEF_NORMAL);
   togglebutton_alle_zauber->set_active(false);
   togglebutton_alle_zauber->add(*hbox49);
   pixmap91->set_alignment(0.5,0.5);
   pixmap91->set_padding(0,0);
   label533->set_alignment(0.5,0.5);
   label533->set_padding(0,0);
   label533->set_justify(Gtk::JUSTIFY_CENTER);
   label533->set_line_wrap(false);
   label533->set_use_markup(false);
   label533->set_selectable(false);
   hbox48->pack_start(*pixmap91, Gtk::PACK_SHRINK, 0);
   hbox48->pack_start(*label533, Gtk::PACK_SHRINK, 0);
   togglebutton_zaubersalze->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*togglebutton_zaubersalze, "Zaubersalze können gelernt werden", "");
   togglebutton_zaubersalze->set_relief(Gtk::RELIEF_NORMAL);
   togglebutton_zaubersalze->set_active(false);
   togglebutton_zaubersalze->add(*hbox48);
   table150->set_row_spacings(0);
   table150->set_col_spacings(0);
   table102->set_border_width(3);
   table102->set_row_spacings(0);
   table102->set_col_spacings(0);
   table102->attach(*table50, 1, 2, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table102->attach(*togglebutton_spruchrolle, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table102->attach(*togglebutton_alle_zauber, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table102->attach(*togglebutton_zaubersalze, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table102->attach(*table150, 1, 2, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   label668->set_alignment(0.5,0.5);
   label668->set_padding(0,0);
   label668->set_justify(Gtk::JUSTIFY_LEFT);
   label668->set_line_wrap(false);
   label668->set_use_markup(false);
   label668->set_selectable(false);
   frame_zauber_zusatz->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_zauber_zusatz->set_label_align(0,0.5);
   frame_zauber_zusatz->add(*table102);
   frame_zauber_zusatz->set_label_widget(*label668);
   radiobutton_pp_hoch_wie_geht->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radiobutton_pp_hoch_wie_geht, "Es werden alle PP verwendet, um so hoch wie möglich zu steigern.", "");
   radiobutton_pp_hoch_wie_geht->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_pp_hoch_wie_geht->set_mode(false);
   radiobutton_pp_hoch_wie_geht->set_active(false);
   radiobutton_pp_1stufe->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radiobutton_pp_1stufe, "Es wird um eine Stufe gesteigert und wenn die PP nicht reichen mit EP aufgefüllt.", "");
   radiobutton_pp_1stufe->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_pp_1stufe->set_mode(false);
   radiobutton_pp_1stufe->set_active(true);
   togglebutton_pp_verfallen->set_flags(Gtk::CAN_FOCUS);
   togglebutton_pp_verfallen->set_relief(Gtk::RELIEF_NORMAL);
   togglebutton_pp_verfallen->set_active(false);
   togglebutton_pp_aep_fuellen->set_flags(Gtk::CAN_FOCUS);
   togglebutton_pp_aep_fuellen->set_relief(Gtk::RELIEF_NORMAL);
   togglebutton_pp_aep_fuellen->set_active(false);
   table_pp_einstellungen->set_row_spacings(0);
   table_pp_einstellungen->set_col_spacings(0);
   table_pp_einstellungen->attach(*radiobutton_pp_hoch_wie_geht, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_pp_einstellungen->attach(*radiobutton_pp_1stufe, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_pp_einstellungen->attach(*togglebutton_pp_verfallen, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_pp_einstellungen->attach(*togglebutton_pp_aep_fuellen, 1, 2, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   pixmap76->set_alignment(0.5,0.5);
   pixmap76->set_padding(0,0);
   label519->set_alignment(0.5,0.5);
   label519->set_padding(0,0);
   label519->set_justify(Gtk::JUSTIFY_CENTER);
   label519->set_line_wrap(false);
   label519->set_use_markup(false);
   label519->set_selectable(false);
   hbox43->pack_start(*pixmap76);
   hbox43->pack_start(*label519, Gtk::PACK_SHRINK, 0);
   radiobutton_praxis->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radiobutton_praxis, "Zum Steigern werden in erster Linie Praxispunkte verwendet. Es werden jedoch keine FP verschenkt, fehlenden FP werden durch EP aufgefüllt.", "");
   radiobutton_praxis->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_praxis->set_mode(false);
   radiobutton_praxis->set_active(false);
   radiobutton_praxis->add(*hbox43);
   pixmap77->set_alignment(0.5,0.5);
   pixmap77->set_padding(0,0);
   label517->set_alignment(0.5,0.5);
   label517->set_padding(0,0);
   label517->set_justify(Gtk::JUSTIFY_CENTER);
   label517->set_line_wrap(false);
   label517->set_use_markup(false);
   label517->set_selectable(false);
   hbox41->pack_start(*pixmap77);
   hbox41->pack_start(*label517, Gtk::PACK_SHRINK, 0);
   radiobutton_unterweisung->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radiobutton_unterweisung, "Steigern mit Gold und EP", "");
   radiobutton_unterweisung->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_unterweisung->set_mode(false);
   radiobutton_unterweisung->set_active(true);
   radiobutton_unterweisung->add(*hbox41);
   pixmap75->set_alignment(0.5,0.5);
   pixmap75->set_padding(0,0);
   label518->set_alignment(0.5,0.5);
   label518->set_padding(0,0);
   label518->set_justify(Gtk::JUSTIFY_CENTER);
   label518->set_line_wrap(false);
   label518->set_use_markup(false);
   label518->set_selectable(false);
   hbox42->pack_start(*pixmap75);
   hbox42->pack_start(*label518, Gtk::PACK_SHRINK, 0);
   radiobutton_selbst->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radiobutton_selbst, "Steigern mit EP", "");
   radiobutton_selbst->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_selbst->set_mode(false);
   radiobutton_selbst->set_active(false);
   radiobutton_selbst->add(*hbox42);
   table101->set_row_spacings(0);
   table101->set_col_spacings(0);
   table101->attach(*table_pp_einstellungen, 1, 2, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   table101->attach(*radiobutton_praxis, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table101->attach(*radiobutton_unterweisung, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table101->attach(*radiobutton_selbst, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   label667->set_alignment(0.5,0.5);
   label667->set_padding(0,0);
   label667->set_justify(Gtk::JUSTIFY_LEFT);
   label667->set_line_wrap(false);
   label667->set_use_markup(false);
   label667->set_selectable(false);
   frame_lernen_mit->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_lernen_mit->set_label_align(0,0.5);
   frame_lernen_mit->add(*table101);
   frame_lernen_mit->set_label_widget(*label667);
   pixmap72->set_alignment(0.5,0.5);
   pixmap72->set_padding(0,0);
   label514->set_alignment(0.5,0.5);
   label514->set_padding(0,0);
   label514->set_justify(Gtk::JUSTIFY_CENTER);
   label514->set_line_wrap(false);
   label514->set_use_markup(false);
   label514->set_selectable(false);
   hbox38->pack_start(*pixmap72, Gtk::PACK_SHRINK, 0);
   hbox38->pack_start(*label514, Gtk::PACK_SHRINK, 0);
   radiobutton_reduzieren->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radiobutton_reduzieren, "Ist dieser Knopf gedrückt werden die Erfolgswerte bereits gelernter Fertigkeiten (durch anklicken) reduziert.", "");
   radiobutton_reduzieren->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_reduzieren->set_mode(false);
   radiobutton_reduzieren->set_active(false);
   radiobutton_reduzieren->add(*hbox38);
   pixmap73->set_alignment(0.5,0.5);
   pixmap73->set_padding(0,0);
   label515->set_alignment(0.5,0.5);
   label515->set_padding(0,0);
   label515->set_justify(Gtk::JUSTIFY_CENTER);
   label515->set_line_wrap(false);
   label515->set_use_markup(false);
   label515->set_selectable(false);
   hbox39->pack_start(*pixmap73, Gtk::PACK_SHRINK, 0);
   hbox39->pack_start(*label515, Gtk::PACK_SHRINK, 0);
   radiobutton_verlernen->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radiobutton_verlernen, "Ist dieser Knopf gedrückt wird eine bereits gelernter Fertigkeiten (durch anklicken) verlernt, wenn sie auf dem niedrigsten Erfolgswert beherrscht wird.", "");
   radiobutton_verlernen->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_verlernen->set_mode(false);
   radiobutton_verlernen->set_active(false);
   radiobutton_verlernen->add(*hbox39);
   pixmap74->set_alignment(0.5,0.5);
   pixmap74->set_padding(0,0);
   label513->set_alignment(0.5,0.5);
   label513->set_padding(0,0);
   label513->set_justify(Gtk::JUSTIFY_CENTER);
   label513->set_line_wrap(false);
   label513->set_use_markup(false);
   label513->set_selectable(false);
   hbox37->pack_start(*pixmap74, Gtk::PACK_SHRINK, 0);
   hbox37->pack_start(*label513, Gtk::PACK_SHRINK, 0);
   radiobutton_steigern->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radiobutton_steigern, "Ist dieser Knopf gedrückt können die bereits gelernten Fertigkeiten (durch anklicken) gesteigert werden.", "");
   radiobutton_steigern->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_steigern->set_mode(false);
   radiobutton_steigern->set_active(true);
   radiobutton_steigern->add(*hbox37);
   table100->set_border_width(3);
   table100->set_row_spacings(0);
   table100->set_col_spacings(0);
   table100->attach(*radiobutton_reduzieren, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table100->attach(*radiobutton_verlernen, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table100->attach(*radiobutton_steigern, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   label669->set_alignment(0.5,0.5);
   label669->set_padding(0,0);
   label669->set_justify(Gtk::JUSTIFY_LEFT);
   label669->set_line_wrap(false);
   label669->set_use_markup(false);
   label669->set_selectable(false);
   frame_fertigkeit->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_fertigkeit->set_label_align(0,0.5);
   frame_fertigkeit->add(*table100);
   frame_fertigkeit->set_label_widget(*label669);
   spinbutton_pp_eingeben->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*spinbutton_pp_eingeben, "Eingabe mit 'Enter' bestätigen.", "");
   spinbutton_pp_eingeben->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_pp_eingeben->set_numeric(false);
   spinbutton_pp_eingeben->set_digits(0);
   spinbutton_pp_eingeben->set_wrap(false);
   pixmap78->set_alignment(0.5,0.5);
   pixmap78->set_padding(0,0);
   label516->set_alignment(0.5,0.5);
   label516->set_padding(0,0);
   label516->set_justify(Gtk::JUSTIFY_CENTER);
   label516->set_line_wrap(false);
   label516->set_use_markup(false);
   label516->set_selectable(false);
   hbox40->pack_start(*pixmap78);
   hbox40->pack_start(*label516, Gtk::PACK_SHRINK, 0);
   togglebutton_praxispunkte->set_flags(Gtk::CAN_FOCUS);
   togglebutton_praxispunkte->set_relief(Gtk::RELIEF_NORMAL);
   togglebutton_praxispunkte->set_active(false);
   togglebutton_praxispunkte->add(*hbox40);
   radiobutton_pp_fertigkeit->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*radiobutton_pp_fertigkeit, "Nach Aktivierung dieses Knopfes muß die Fertigkeit gewählt werden, für die PP eingegeben werden sollen.", "");
   radiobutton_pp_fertigkeit->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_pp_fertigkeit->set_mode(true);
   radiobutton_pp_fertigkeit->set_active(false);
   radiobutton_pp_abwehr->set_flags(Gtk::CAN_FOCUS);
   radiobutton_pp_abwehr->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_pp_abwehr->set_mode(true);
   radiobutton_pp_abwehr->set_active(false);
   radiobutton_pp_zauber->set_flags(Gtk::CAN_FOCUS);
   radiobutton_pp_zauber->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_pp_zauber->set_mode(true);
   radiobutton_pp_zauber->set_active(false);
   radiobutton_pp_spezial->set_flags(Gtk::CAN_FOCUS);
   radiobutton_pp_spezial->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_pp_spezial->set_mode(true);
   radiobutton_pp_spezial->set_active(false);
   radiobutton_pp_resistenz->set_flags(Gtk::CAN_FOCUS);
   radiobutton_pp_resistenz->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_pp_resistenz->set_mode(true);
   radiobutton_pp_resistenz->set_active(false);
   vbox_praxispunkte->pack_start(*radiobutton_pp_fertigkeit, Gtk::PACK_SHRINK, 0);
   vbox_praxispunkte->pack_start(*radiobutton_pp_abwehr, Gtk::PACK_SHRINK, 0);
   vbox_praxispunkte->pack_start(*radiobutton_pp_zauber, Gtk::PACK_SHRINK, 0);
   vbox_praxispunkte->pack_start(*radiobutton_pp_spezial, Gtk::PACK_SHRINK, 0);
   vbox_praxispunkte->pack_start(*radiobutton_pp_resistenz, Gtk::PACK_SHRINK, 0);
   table110->set_border_width(3);
   table110->set_row_spacings(0);
   table110->set_col_spacings(0);
   table110->attach(*spinbutton_pp_eingeben, 0, 1, 1, 2, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table110->attach(*togglebutton_praxispunkte, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table110->attach(*vbox_praxispunkte, 1, 2, 0, 2, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   label670->set_alignment(0.5,0.5);
   label670->set_padding(0,0);
   label670->set_justify(Gtk::JUSTIFY_LEFT);
   label670->set_line_wrap(false);
   label670->set_use_markup(false);
   label670->set_selectable(false);
   frame_praxispunkte->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_praxispunkte->set_label_align(0,0.5);
   frame_praxispunkte->add(*table110);
   frame_praxispunkte->set_label_widget(*label670);
   table99->set_border_width(1);
   table99->set_row_spacings(0);
   table99->set_col_spacings(2);
   table99->attach(*frame_zauber_zusatz, 3, 4, 0, 1, Gtk::AttachOptions(), Gtk::FILL, 5, 0);
   table99->attach(*frame_lernen_mit, 1, 2, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table99->attach(*frame_fertigkeit, 0, 1, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table99->attach(*frame_praxispunkte, 2, 3, 0, 1, Gtk::SHRINK, Gtk::SHRINK|Gtk::FILL, 0, 0);
   handlebox_steigern_3->set_shadow_type(Gtk::SHADOW_OUT);
   handlebox_steigern_3->set_handle_position(Gtk::POS_LEFT);
   handlebox_steigern_3->set_snap_edge(Gtk::POS_LEFT);
   handlebox_steigern_3->add(*table99);
   table_handlebox1->set_row_spacings(0);
   table_handlebox1->set_col_spacings(0);
   table_handlebox1->attach(*handlebox_steigern_1, 0, 1, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table_handlebox1->attach(*handlebox_steigern_2, 1, 2, 0, 1, Gtk::AttachOptions(), Gtk::FILL, 0, 0);
   table_handlebox1->attach(*handlebox_steigern_4, 2, 3, 0, 2, Gtk::SHRINK, Gtk::SHRINK, 0, 0);
   table_handlebox1->attach(*handlebox_steigern_3, 0, 2, 1, 2, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK|Gtk::FILL, 0, 0);
   table_steigern->set_row_spacings(0);
   table_steigern->set_col_spacings(0);
   table_steigern->attach(*scrolledwindow_landauswahl, 2, 3, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table_steigern->attach(*notebook_lernen, 0, 3, 2, 3, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table_steigern->attach(*frame_spezielles, 0, 1, 1, 2, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK|Gtk::FILL, 0, 0);
   table_steigern->attach(*table_handlebox1, 0, 2, 0, 1, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK, 0, 0);
   tree_steigern_zusatz->show();
   viewport24->show();
   scrolledwindow_landauswahl->show();
   alte_fert_tree->show();
   scrolledwindow_fert_alt->show();
   neue_fert_tree->show();
   scrolledwindow55->show();
   vpaned1->show();
   alignment2->show();
   table15->show();
   label_ns_fertigkeiten->show();
   pixmap_ns_fertig->show();
   vbox21->show();
   label530->show();
   alte_waffen_tree->show();
   scrolledwindow_waffen_alt->show();
   neue_waffen_tree->show();
   scrolledwindow69->show();
   vpaned13->show();
   vbox27->show();
   label529->show();
   alte_grund_tree->show();
   scrolledwindow67->show();
   neue_grund_tree->show();
   scrolledwindow68->show();
   vpaned12->show();
   vbox28->show();
   hpaned5->show();
   table18->show();
   label_nw_waffen->show();
   pixmap_ns_waffen->show();
   vbox22->show();
   label379->show();
   alte_zauber_tree->show();
   scrolledwindow33->show();
   neue_zauber_tree->show();
   scrolledwindow34->show();
   vpaned2->show();
   vbox17->show();
   label380->show();
   alte_zaubermittel_tree->show();
   scrolledwindow51->show();
   neue_zaubermittel_tree->show();
   scrolledwindow52->show();
   vpaned8->show();
   vbox18->show();
   hpaned3->show();
   table_magier_steigern->show();
   label_ns_zauber->show();
   pixmap_ns_zauber->show();
   vbox23->show();
   alte_kido_tree->show();
   scrolledwindow49->show();
   neue_kido_tree->show();
   scrolledwindow50->show();
   vpaned7->show();
   table_kido_steigern->show();
   label_ns_kido->show();
   pixmap_ns_kido->show();
   vbox24->show();
   label282->show();
   alte_sprache_tree->show();
   scrolledwindow_sprache_alt->show();
   pixmap163->show();
   label600->show();
   hbox86->show();
   togglebutton_neue_sprache_pp->show();
   label601->show();
   neue_sprache_tree->show();
   scrolledwindow23->show();
   table162->show();
   vpaned3->show();
   vbox14->show();
   label281->show();
   alte_schrift_tree->show();
   scrolledwindow_schrift_alt->show();
   neue_schrift_tree->show();
   scrolledwindow24->show();
   vpaned4->show();
   vbox13->show();
   hpaned1->show();
   table_sprache_schriften->show();
   label_ns_sprache->show();
   pixmap_ns_sprache->show();
   vbox25->show();
   pixmap64->show();
   label_ruestung_1->show();
   vbox59->show();
   eventbox9->show();
   button_ruestung_1->show();
   pixmap159->show();
   label_ruestung_2->show();
   vbox60->show();
   eventbox17->show();
   button_ruestung_2->show();
   clist_ruestung->show();
   viewport45->show();
   scrolledwindow82->show();
   table152->show();
   label671->show();
   frame107->show();
   pixmap160->show();
   label593->show();
   hbox76->show();
   checkbutton_mag_waffenbonus->show();
   waffenbesitz_alt_tree->show();
   scrolledwindow84->show();
   label_av_bonus->show();
   label_sl_bonus->show();
   label596->show();
   spinbutton_av_bonus->show();
   spinbutton_sl_bonus->show();
   entry_magisch->show();
   table_magbonus->show();
   table156->show();
   waffenbesitz_neu_tree->show();
   scrolledwindow83->show();
   table159->show();
   label672->show();
   frame108->show();
   table158->show();
   label_ns_besitz->show();
   pixmap_ns_besitz->show();
   vbox58->show();
   notebook_lernen->show();
   frame_spezielles->show();
   label_s_grad->show();
   label646->show();
   frame73->show();
   label_s_resistenz->show();
   label647->show();
   frame77->show();
   label_s_zaubern->show();
   label648->show();
   frame76->show();
   label_s_abwehr->show();
   label649->show();
   frame75->show();
   label_alter->show();
   label650->show();
   frame90->show();
   pixmap88->show();
   eventbox10->show();
   button_alter->show();
   label_s_ap->show();
   label651->show();
   frame74->show();
   label_steigertage->show();
   label652->show();
   frame89->show();
   steigern_typ->show();
   label653->show();
   frame65->show();
   label_steigern_spezies->show();
   label654->show();
   frame109->show();
   label_pp_abwehr->show();
   label656->show();
   frame86->show();
   label_pp_zaubern->show();
   label657->show();
   frame_pp_zaubern->show();
   label_pp_resistenz->show();
   label658->show();
   frame88->show();
   label_pp_spezial->show();
   label659->show();
   frame_pp_spezial->show();
   table104->show();
   label655->show();
   frame85->show();
   table76->show();
   handlebox_steigern_1->show();
   LabelSpin_aep->show();
   label660->show();
   frame67->show();
   LabelSpin_kep->show();
   label661->show();
   frame68->show();
   LabelSpin_zep->show();
   label662->show();
   frame69->show();
   hbox30->show();
   LabelSpin_gold->show();
   label663->show();
   frame70->show();
   LabelSpin_silber->show();
   label664->show();
   frame71->show();
   LabelSpin_kupfer->show();
   label665->show();
   frame72->show();
   hbox31->show();
   LabelSpin_gfp->show();
   label666->show();
   frame41->show();
   label_EP->show();
   label_Gold->show();
   vscale_EP_Gold->show();
   table73->show();
   eventbox1->show();
   pixmap62->show();
   label640->show();
   hbox99->show();
   button_gold_eingeben->show();
   pixmap161->show();
   label639->show();
   hbox98->show();
   checkbutton_gfp->show();
   pixmap93->show();
   label638->show();
   hbox97->show();
   button_EP->show();
   eventbox_eppp_steigern->show();
   table72->show();
   handlebox_steigern_2->show();
   flashing_gradanstieg->show();
   label546->show();
   label_grad_GFP->show();
   vbox38->show();
   button_grad->show();
   pixmap125->show();
   label547->show();
   label_ausdauer_GFP->show();
   vbox39->show();
   button_grad_ausdauer->show();
   pixmap126->show();
   label548->show();
   label_abwehr_GFP->show();
   vbox40->show();
   button_grad_abwehr->show();
   pixmap127->show();
   label549->show();
   label_zauber_GFP->show();
   vbox41->show();
   button_grad_zaubern->show();
   pixmap130->show();
   label552->show();
   vbox63->show();
   grad_anstieg->show();
   pixmap128->show();
   label550->show();
   label_resistenz_GFP->show();
   vbox42->show();
   button_grad_resistenz->show();
   flashing_eigenschaft->show();
   label551->show();
   vbox43->show();
   button_grad_basiswerte->show();
   table_gradsteigern_lang->show();
   table75->show();
   handlebox_steigern_4->show();
   pixmap82->show();
   radio_spruchrolle_auto->show();
   pixmap81->show();
   radio_spruchrolle_wuerfeln->show();
   table50->show();
   pixmap79->show();
   label520->show();
   hbox44->show();
   togglebutton_spruchrolle->show();
   pixmap92->show();
   label534->show();
   hbox49->show();
   togglebutton_alle_zauber->show();
   pixmap91->show();
   label533->show();
   hbox48->show();
   togglebutton_zaubersalze->show();
   table150->show();
   table102->show();
   label668->show();
   frame_zauber_zusatz->show();
   radiobutton_pp_hoch_wie_geht->show();
   radiobutton_pp_1stufe->show();
   togglebutton_pp_verfallen->show();
   togglebutton_pp_aep_fuellen->show();
   pixmap76->show();
   label519->show();
   hbox43->show();
   radiobutton_praxis->show();
   pixmap77->show();
   label517->show();
   hbox41->show();
   radiobutton_unterweisung->show();
   pixmap75->show();
   label518->show();
   hbox42->show();
   radiobutton_selbst->show();
   table101->show();
   label667->show();
   frame_lernen_mit->show();
   pixmap72->show();
   label514->show();
   hbox38->show();
   radiobutton_reduzieren->show();
   pixmap73->show();
   label515->show();
   hbox39->show();
   radiobutton_verlernen->show();
   pixmap74->show();
   label513->show();
   hbox37->show();
   radiobutton_steigern->show();
   table100->show();
   label669->show();
   frame_fertigkeit->show();
   spinbutton_pp_eingeben->show();
   pixmap78->show();
   label516->show();
   hbox40->show();
   togglebutton_praxispunkte->show();
   radiobutton_pp_fertigkeit->show();
   radiobutton_pp_abwehr->show();
   radiobutton_pp_zauber->show();
   radiobutton_pp_spezial->show();
   radiobutton_pp_resistenz->show();
   vbox_praxispunkte->show();
   table110->show();
   label670->show();
   frame_praxispunkte->show();
   table99->show();
   handlebox_steigern_3->show();
   table_handlebox1->show();
   table_steigern->show();
   tree_steigern_zusatz->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_steigern_zusatz_leaf_selected));
   alte_fert_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_alte_fert));
   alte_fert_tree->signal_reorder().connect(SigC::slot(*this, &table_steigern_glade::on_alte_fert_reorder));
   neue_fert_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_neue_fert));
   alte_waffen_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_alte_waffen));
   alte_waffen_tree->signal_reorder().connect(SigC::slot(*this, &table_steigern_glade::on_alte_waffen_reorder));
   neue_waffen_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_neue_waffen));
   alte_grund_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_alte_grund));
   neue_grund_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_neue_grund));
   alte_zauber_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_alte_zauber));
   alte_zauber_tree->signal_reorder().connect(SigC::slot(*this, &table_steigern_glade::on_alte_zauber_reorder));
   neue_zauber_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_neue_zauber));
   alte_zaubermittel_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_alte_zauberwerk));
   alte_zaubermittel_tree->signal_reorder().connect(SigC::slot(*this, &table_steigern_glade::on_alte_zaubermittel_reorder));
   neue_zaubermittel_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_neue_zauberwerk));
   alte_kido_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_alte_kido));
   alte_kido_tree->signal_reorder().connect(SigC::slot(*this, &table_steigern_glade::on_alte_kido_reorder));
   neue_kido_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_neue_kido));
   alte_sprache_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_alte_sprache));
   alte_sprache_tree->signal_reorder().connect(SigC::slot(*this, &table_steigern_glade::on_alte_sprache_reorder));
   neue_sprache_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_neue_sprache));
   alte_schrift_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_alte_schrift));
   neue_schrift_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_selected_neue_schrift));
   button_ruestung_1->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_button_ruestung_1_toggled));
   button_ruestung_2->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_button_ruestung_2_toggled));
   checkbutton_mag_waffenbonus->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_checkbutton_mag_waffenbonus_toggled));
   waffenbesitz_alt_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_waffenbesitz_selected_alt));
   waffenbesitz_alt_tree->signal_reorder().connect(SigC::slot(*this, &table_steigern_glade::on_alte_waffenbesitz_reorder));
   spinbutton_av_bonus->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_spinbutton_av_bonus_activate));
   spinbutton_sl_bonus->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_spinbutton_sl_bonus_activate));
   entry_magisch->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_entry_magisch_activate));
   waffenbesitz_neu_tree->signal_leaf_selected().connect(SigC::slot(*this, &table_steigern_glade::on_leaf_waffenbesitz_selected_neu));
   notebook_lernen->signal_switch_page().connect(SigC::slot(*this, &table_steigern_glade::on_notebook_lernen_switch_page));
   button_alter->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_button_alter_clicked));
   LabelSpin_aep->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_LabelSpin_aep_activate));
   LabelSpin_kep->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_LabelSpin_kep_activate));
   LabelSpin_zep->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_LabelSpin_zep_activate));
   LabelSpin_gold->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_LabelSpin_gold_activate));
   LabelSpin_silber->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_LabelSpin_silber_activate));
   LabelSpin_kupfer->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_LabelSpin_kupfer_activate));
   LabelSpin_gfp->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_LabelSpin_gfp_activate));
   vscale_EP_Gold->signal_button_release_event().connect(SigC::slot(*this, &table_steigern_glade::vscale_value_changed));
   button_gold_eingeben->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_button_gold_eingeben), true);
   checkbutton_gfp->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_checkbutton_gfp), true);
   button_EP->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_button_EP_eingeben), true);
   button_grad->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_button_grad_clicked));
   button_grad_ausdauer->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_button_grad_ausdauer_clicked));
   button_grad_abwehr->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_button_grad_abwehr_clicked));
   button_grad_zaubern->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_button_grad_zaubern_clicked));
   grad_anstieg->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_grad_anstieg_clicked));
   button_grad_resistenz->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_button_grad_resistenz_clicked));
   spinbutton_eigenschaften_grad_anstieg->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_spinbutton_eigenschaften_grad_anstieg_activate));
   button_grad_basiswerte->signal_clicked().connect(SigC::slot(*this, &table_steigern_glade::on_button_grad_basiswerte));
   togglebutton_spruchrolle->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_spruchrolle_toggled), true);
   togglebutton_alle_zauber->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_togglebutton_alle_zauber_toggled));
   togglebutton_zaubersalze->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_togglebutton_zaubersalze_toggled));
   togglebutton_pp_verfallen->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_togglebutton_pp_verfallen_toggled));
   togglebutton_pp_aep_fuellen->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_togglebutton_pp_aep_fuellen_toggled));
   radiobutton_praxis->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radio_praxis_toggled));
   radiobutton_unterweisung->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radio_unterweisung_toggled));
   radiobutton_selbst->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radio_selbst_toggled));
   radiobutton_reduzieren->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radio_reduzieren_toggled));
   radiobutton_verlernen->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radio_verlernen_toggled));
   radiobutton_steigern->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radio_steigern_toggled));
   spinbutton_pp_eingeben->signal_activate().connect(SigC::slot(*this, &table_steigern_glade::on_spinbutton_pp_eingeben_activate));
   togglebutton_praxispunkte->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_togglebutton_praxispunkte_toggled));
   radiobutton_pp_fertigkeit->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radiobutton_pp_fertigkeit_toggled));
   radiobutton_pp_abwehr->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radiobutton_pp_abwehr_toggled));
   radiobutton_pp_zauber->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radiobutton_pp_zauber_toggled));
   radiobutton_pp_spezial->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radiobutton_pp_spezial_toggled));
   radiobutton_pp_resistenz->signal_toggled().connect(SigC::slot(*this, &table_steigern_glade::on_radiobutton_pp_resistenz_toggled));
}

table_steigern_glade::~table_steigern_glade()
{  delete tree_steigern_zusatz;
   delete alte_fert_tree;
   delete neue_fert_tree;
   delete alte_waffen_tree;
   delete neue_waffen_tree;
   delete alte_grund_tree;
   delete neue_grund_tree;
   delete alte_zauber_tree;
   delete neue_zauber_tree;
   delete alte_zaubermittel_tree;
   delete neue_zaubermittel_tree;
   delete alte_kido_tree;
   delete neue_kido_tree;
   delete alte_sprache_tree;
   delete neue_sprache_tree;
   delete alte_schrift_tree;
   delete neue_schrift_tree;
   delete waffenbesitz_alt_tree;
   delete waffenbesitz_neu_tree;
   delete LabelSpin_aep;
   delete LabelSpin_kep;
   delete LabelSpin_zep;
   delete LabelSpin_gold;
   delete LabelSpin_silber;
   delete LabelSpin_kupfer;
   delete LabelSpin_gfp;
   delete flashing_gradanstieg;
   delete flashing_eigenschaft;
}
