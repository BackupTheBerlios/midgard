#include "midgard_CG.hh"
#include <Aux/Transaction.h>
#include <Aux/SQLerror.h>
exec sql include sqlca;


bool midgard_CG::Ausnahmen_bool(string name)
{


}


float midgard_CG::Ausnahmen_float(string name)
{
 exec sql begin declare section;
   char db_name[50],db_typ[10],db_herkunft[50],db_rasse[50];
   char db_art[5];
 exec sql end declare section;
 strncpy (db_name,name.c_str(),sizeof(db_name));
 strncpy (db_typ,typ.s.c_str(),sizeof(db_typ));
 strncpy (db_herkunft,werte.herkunft.c_str(),sizeof(db_herkunft));
 strncpy (db_rasse,werte.rasse.c_str(),sizeof(db_rasse));
 exec sql select art into :db_art from ausnahmen 
      where name = :db_name 
      and (rasse = :db_rasse or rasse=null) 
      and (herkunft = :db_herkunft or herkunft = null)
      limit 1;
 SQLerror::test(__FILELINE__,100);
 if (sqlca.sqlcode) return 0; // Keine Ausnahme

 string art = db_art;
  // ZAUBER
  if (art=="z")
   {
     string ausnahme = midgard_CG::Ausnahmen_string(name,"S");
     if (ausnahme == "G" ) return 0.5;
     if (ausnahme == "A" ) return 5;
   }
  return 1;
}

string midgard_CG::Ausnahmen_string(string name, string alt)
{
 exec sql begin declare section;
   char db_name[50],db_typ[10],db_herkunft[50],db_rasse[50],db_standard[10];
 exec sql end declare section;
 strncpy (db_name,name.c_str(),sizeof(db_name));
 strncpy (db_typ,typ.s.c_str(),sizeof(db_typ));
 strncpy (db_herkunft,werte.herkunft.c_str(),sizeof(db_herkunft));
 strncpy (db_rasse,werte.rasse.c_str(),sizeof(db_rasse));
 exec sql select standard into :db_standard from ausnahmen 
   where name = :db_name and typ = :db_typ 
   and (rasse = :db_rasse or rasse=null) 
   and (herkunft = :db_herkunft or herkunft = null);
 SQLerror::test(__FILELINE__,100);
 if (sqlca.sqlcode) return alt; // Keine Ausnahme
 return db_standard;
}
