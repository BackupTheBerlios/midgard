// generated 2002/1/23 19:20:58 CET by thoma@Tiger.
// using glademm V0.6.2c_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/thoma/rollenspiel/midgard/programme/gcc_3.0/midgard/midgard.glade
// for gtk 1.2.10 and gtkmm 1.2.5
//
// Please modify the corresponding derived classes in ./src/Window_waffe.cc

#include "config.h"
#include "Window_waffe.hh"
#include <gtk--/label.h>
#include <gtk--/scrolledwindow.h>
#include <gtk--/table.h>
#include <gtk--/button.h>
#include <gtk--/pixmap.h>
#include "../pixmaps/Weapon-trans-50.xpm"
#include <gtk--/toolbar.h>

Window_waffe_glade::Window_waffe_glade(
) : Gtk::Window(GTK_WINDOW_TOPLEVEL)
{   
   
   Gtk::Window *Window_waffe = this;
   Gtk::Label *label303 = manage(new class Gtk::Label("Waffen wählen:"));
   clist_waffe = manage(new class Gtk::CList(4));
   
   Gtk::ScrolledWindow *scrolledwindow37 = manage(new class Gtk::ScrolledWindow());
   Gtk::Label *label_anzahl_Ex = manage(new class Gtk::Label(" Einhandwaffen, Verteidigungswaffen oder Wurfwaffen"));
   Gtk::Label *label_anzahl_Ax = manage(new class Gtk::Label(" beliebige Waffen (einschließlich Zweihand- und Schußwaffen)"));
   label_anzahl_E = manage(new class Gtk::Label("E"));
   label_anzahl_A = manage(new class Gtk::Label("A"));
   
   Gtk::Table *table95 = manage(new class Gtk::Table(2, 2, false));
   Gtk::Toolbar *toolbar40 = manage(new class Gtk::Toolbar(GTK_ORIENTATION_HORIZONTAL, GTK_TOOLBAR_BOTH));
   Gtk::Button *button_close = Gtk::wrap((GtkButton*)gtk_toolbar_append_element(GTK_TOOLBAR(toolbar40->gtkobj()), GTK_TOOLBAR_CHILD_BUTTON, 0, "Schließen", 0, 0, GTK_WIDGET(manage(new Gtk::Pixmap(Weapon_trans_50_xpm))->gtkobj()), 0, 0));
   Gtk::Table *table40 = manage(new class Gtk::Table(2, 4, false));
   label303->set_alignment(0, 0.5);
   label303->set_padding(0, 0);
   clist_waffe->set_column_title(0, "Art");
   clist_waffe->set_column_width(0, 78);
   clist_waffe->set_column_title(1, "Waffe");
   clist_waffe->set_column_width(1, 91);
   clist_waffe->set_column_title(2, "Grundkenntnisse");
   clist_waffe->set_column_width(2, 80);
   clist_waffe->set_column_title(3, "Schaden");
   clist_waffe->set_column_width(3, 80);
   clist_waffe->column_titles_show();
   scrolledwindow37->set_usize(414, 282);
   scrolledwindow37->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow37->add(*clist_waffe);
   label_anzahl_Ex->set_alignment(0, 0.5);
   label_anzahl_Ex->set_padding(0, 0);
   label_anzahl_Ex->set_justify(GTK_JUSTIFY_LEFT);
   label_anzahl_Ax->set_alignment(0, 0.5);
   label_anzahl_Ax->set_padding(0, 0);
   label_anzahl_Ax->set_justify(GTK_JUSTIFY_LEFT);
   label_anzahl_E->set_alignment(0, 0.5);
   label_anzahl_E->set_padding(0, 0);
   label_anzahl_A->set_alignment(0, 0.5);
   label_anzahl_A->set_padding(0, 0);
   table95->attach(*label_anzahl_Ex, 1, 2, 0, 1, GTK_FILL, 0, 0, 0);
   table95->attach(*label_anzahl_Ax, 1, 2, 1, 2, GTK_FILL, 0, 0, 0);
   table95->attach(*label_anzahl_E, 0, 1, 0, 1, GTK_FILL, 0, 0, 0);
   table95->attach(*label_anzahl_A, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   toolbar40->set_space_size(5);
   toolbar40->set_tooltips(true);
   table40->attach(*label303, 0, 2, 0, 1, 0, 0, 3, 4);
   table40->attach(*scrolledwindow37, 0, 4, 1, 2, GTK_FILL, GTK_FILL, 0, 0);
   table40->attach(*table95, 2, 3, 0, 1, GTK_FILL, 0, 0, 0);
   table40->attach(*toolbar40, 3, 4, 0, 1, GTK_FILL, 0, 5, 5);
   Window_waffe->set_title("Waffe");
   Window_waffe->set_modal(true);
   Window_waffe->add(*table40);
   label303->show();
   clist_waffe->show();
   scrolledwindow37->show();
   label_anzahl_Ex->show();
   label_anzahl_Ax->show();
   label_anzahl_E->show();
   label_anzahl_A->show();
   table95->show();
   toolbar40->show();
   table40->show();
   Window_waffe->show();
   clist_waffe->select_row.connect(SigC::slot(static_cast<class Window_waffe*>(this), &Window_waffe::on_clist_waffe_select_row));
   button_close->clicked.connect(SigC::slot(static_cast<class Window_waffe*>(this), &Window_waffe::on_button_close_clicked));
}

Window_waffe_glade::~Window_waffe_glade()
{   
}
