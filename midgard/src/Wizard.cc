
#if 0
#include "config.h"
#include "Wizard.hh"
#include "midgard_CG.hh"

namespace Wizard
{  
     struct st_wiz
     {  int page;
        std::string text;
        st_wiz(int p,std::string t)
            : page(p),text(t){}
     };

      static std::vector<st_wiz> vecwiz;
      static void fill_vecwiz();

      void evaluate_step(esteps step);
}


void Wizard::evaluate_step(esteps step)
{
  hauptfenster->wizard_do_something(vecwiz[step].page,vecwiz[step].text);
}


void Wizard::fill_vecwiz()
{  if (!vecwiz.empty()) return;
#error besser resize + []
   // Inaktiv
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
   			  "Wizard inaktiv"));
   //START
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Hier erscheint jeweils der n‰chste Schritt f¸r einen neuen Abenteurer."));
   //SPEZIES
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Spezies ausw√§hlen (oder Eigenschaften auf eine der drei Arten w√ºrfeln)"));
   //GRUNDWERTE
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Eigenschaften auf eine der drei Arten w√ºrfeln (ACHTUNG: F√ºr Nichtmenschen ist nur die Standardmethode implementiert)"));
   //GESCHLECHT
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Geschlecht w√§hlen (oder Abenteuertyp ausw√§hlen).)"));
   //TYP
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Abenteurertyp w√§hlen"));
   //STADTLAND
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Stadt oder Land w√§hlen (oder abgeleitete Werte w√§hlen)"));
   //ABGELEITETEWERTE
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Abgeleitete Werte w√§rfeln"));
   //LERNSCHEMA_SEITE
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Auf die 'Lernschema'-Seite umbl√§ttern"));
   //HERKUNFT
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Herkunftsland w√§hlen"));
   //UEBERLEBEN
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "In welchem Gel√§ndetyp wird '√ºberleben' als universelle Fertigkeit beherrscht?"));
   //ANGEBORENEFERTIGKEITEN
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Angeborenen Fertigkeiten w√ºrfeln"));
   //LERNPUNKTE
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Lernpunkte w√ºrfeln"));
   //WAEHLEN
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Jetzt Fertigkeiten, Waffen und ev. Zauber in beliebiger"
                          " Reinfolge lernen (anklicken) bis alle Lernpunkte"
                          " verbraucht sind und anschlie√üen den Beruf w√§hlen."));
   //BERUF1
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Fertigkeit ausw√§hlen, die aufgrund der Berufswahl"
                          " gelernt werden kann, danach das Geld ausw√ºrfeln."));
   //BERUF
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Berufsfertigkeit aus Liste w√§hlen"));
   //GELD
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Geld ausw√ºrfeln"));
   //WAFFEN
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Waffen ausw√ºrfeln"));
   //RUESTUNG
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "R√ºstung ausw√ºrfeln"));
   //AUSRUESTUNG
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Ausr√ºstung ausw√ºrfeln"));
   //SPEZIALWAFFE
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Spezialwaffe w√§hlen (anklicken)"));
   //SPEZIAGEBIET
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_LERNEN,
                          "Magier sollten ein Spezialgebiet w√§hlen (das kann aber auch sp√§ter geschehen)"));
   //NAMEN
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Namen vergeben (Eingabe mit 'Enter' abschlie√üen)"));
   //SPEICHERN
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Speichern"));
   //FERTIG
   vecwiz.push_back(st_wiz(midgard_CG::PAGE_GRUNDWERTE,
                          "Fertig"));
   assert(vecwiz.size()==int(FERTIG)+1);
}


#endif