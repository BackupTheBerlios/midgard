// generated 2002/11/18 10:05:07 CET by thoma@Tiger.(none)
// using glademm V1.1.2a_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/thoma/rollenspiel/midgard/programme/gcc_3.0/midgard/midgard.glade
// for gtk 1.2.10 and gtkmm 1.2.10
//
// Please modify the corresponding derived classes in ./src/BegruessungsWindow.cc

#include "config.h"
#include "BegruessungsWindow.hh"
#include <gdk/gdkkeysyms.h>
#include <gtk--/accelgroup.h>
#include <gtk--/pixmap.h>
#include "../pixmaps/GnuHead-trans.xpm"
#include "../pixmaps/midgard_logo.xpm"
#include "../pixmaps/Tux-med.xpm"
#include <gtk--/box.h>
#include <gtk--/label.h>
#include "../pixmaps/EditChar-trans-50.xpm"
#include <gtk--/button.h>
#include "../pixmaps/NewChar-trans-50.xpm"
#include "../pixmaps/ZF_G1-Char-32.xpm"
#include "../pixmaps/LoadChar-trans-50.xpm"
#include <gtk--/separator.h>

BegruessungsWindow_glade::BegruessungsWindow_glade(
) : Gtk::Window(GTK_WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *BegruessungsWindow = this;
   Gtk::AccelGroup *BegruessungsWindow_accgrp = Gtk::AccelGroup::create();
   _data = new GlademmData(BegruessungsWindow_accgrp);
   
   Gtk::Pixmap *pixmap178 = manage(new class Gtk::Pixmap(GnuHead_trans_xpm));
   Gtk::Pixmap *pixmap179 = manage(new class Gtk::Pixmap(midgard_logo_xpm));
   Gtk::Pixmap *pixmap180 = manage(new class Gtk::Pixmap(Tux_med_xpm));
   Gtk::HBox *hbox100 = manage(new class Gtk::HBox(false, 0));
   Gtk::Label *label641 = manage(new class Gtk::Label("Einen neuen Abenteurer mit MAGUS erstellen."));
   Gtk::Label *label642 = manage(new class Gtk::Label("Einen vorhandenen Abenteurer in MAGUS eingeben."));
   Gtk::Label *label643 = manage(new class Gtk::Label("Einen Zufallsabenteurer (Grad 1) erstellen."));
   Gtk::Label *label644 = manage(new class Gtk::Label("Einen Abenteurer aus einer Datei laden. "));
   Gtk::Pixmap *pixmap182 = manage(new class Gtk::Pixmap(EditChar_trans_50_xpm));
   Gtk::Button *button_eingabe = manage(new class Gtk::Button());
   Gtk::Pixmap *pixmap181 = manage(new class Gtk::Pixmap(NewChar_trans_50_xpm));
   Gtk::Button *button_neu = manage(new class Gtk::Button());
   Gtk::Pixmap *pixmap186 = manage(new class Gtk::Pixmap(ZF_G1_Char_32_xpm));
   Gtk::Button *button_zufall = manage(new class Gtk::Button());
   Gtk::Pixmap *pixmap184 = manage(new class Gtk::Pixmap(LoadChar_trans_50_xpm));
   Gtk::Button *button_load = manage(new class Gtk::Button());
   Gtk::Label *label645 = manage(new class Gtk::Label("Dieses Fenster beim nächsten Start wieder anzeigen."));
   Gtk::HSeparator *hseparator23 = manage(new class Gtk::HSeparator());
   Gtk::Label *label646 = manage(new class Gtk::Label(""));
   Gtk::Label *label647 = manage(new class Gtk::Label(""));
   Gtk::HSeparator *hseparator24 = manage(new class Gtk::HSeparator());
   table_buttons = manage(new class Gtk::Table(7, 4, false));
   
   Gtk::VBox *vbox67 = manage(new class Gtk::VBox(false, 0));
   pixmap178->set_alignment(0.5,0.5);
   pixmap178->set_padding(0,0);
   pixmap179->set_alignment(0.5,0.5);
   pixmap179->set_padding(0,0);
   pixmap180->set_alignment(0.5,0.5);
   pixmap180->set_padding(0,0);
   hbox100->pack_start(*pixmap178, false, true, 0);
   hbox100->pack_start(*pixmap179, false, true, 0);
   hbox100->pack_start(*pixmap180, false, false, 0);
   label641->set_alignment(0,0.5);
   label641->set_padding(0,0);
   label641->set_justify(GTK_JUSTIFY_CENTER);
   label641->set_line_wrap(false);
   label642->set_alignment(0,0.5);
   label642->set_padding(0,0);
   label642->set_justify(GTK_JUSTIFY_CENTER);
   label642->set_line_wrap(false);
   label643->set_alignment(0,0.5);
   label643->set_padding(0,0);
   label643->set_justify(GTK_JUSTIFY_CENTER);
   label643->set_line_wrap(false);
   label644->set_alignment(0,0.5);
   label644->set_padding(0,0);
   label644->set_justify(GTK_JUSTIFY_CENTER);
   label644->set_line_wrap(false);
   pixmap182->set_alignment(0.5,0.5);
   pixmap182->set_padding(0,0);
   button_eingabe->set_flags(GTK_CAN_FOCUS);
   button_eingabe->set_relief(GTK_RELIEF_NORMAL);
   button_eingabe->add(*pixmap182);
   pixmap181->set_alignment(0.5,0.5);
   pixmap181->set_padding(0,0);
   button_neu->set_flags(GTK_CAN_FOCUS);
   button_neu->set_relief(GTK_RELIEF_NORMAL);
   button_neu->add(*pixmap181);
   pixmap186->set_alignment(0.5,0.5);
   pixmap186->set_padding(0,0);
   button_zufall->set_flags(GTK_CAN_FOCUS);
   button_zufall->set_relief(GTK_RELIEF_NORMAL);
   button_zufall->add(*pixmap186);
   pixmap184->set_alignment(0.5,0.5);
   pixmap184->set_padding(0,0);
   button_load->set_flags(GTK_CAN_FOCUS);
   button_load->set_relief(GTK_RELIEF_NORMAL);
   button_load->add(*pixmap184);
   label645->set_alignment(0,0.5);
   label645->set_padding(0,0);
   label645->set_justify(GTK_JUSTIFY_CENTER);
   label645->set_line_wrap(false);
   label646->set_alignment(0,0.5);
   label646->set_padding(0,0);
   label646->set_justify(GTK_JUSTIFY_CENTER);
   label646->set_line_wrap(false);
   label647->set_alignment(0,0.5);
   label647->set_padding(0,0);
   label647->set_justify(GTK_JUSTIFY_CENTER);
   label647->set_line_wrap(false);
   table_buttons->set_row_spacings(0);
   table_buttons->set_col_spacings(0);
   table_buttons->attach(*label641, 2, 3, 1, 2, GTK_FILL, 0, 0, 0);
   table_buttons->attach(*label642, 2, 3, 2, 3, GTK_FILL, 0, 0, 0);
   table_buttons->attach(*label643, 2, 3, 3, 4, GTK_FILL, 0, 0, 0);
   table_buttons->attach(*label644, 2, 3, 4, 5, GTK_FILL, 0, 0, 0);
   table_buttons->attach(*button_eingabe, 1, 2, 2, 3, GTK_SHRINK, GTK_SHRINK, 0, 0);
   table_buttons->attach(*button_neu, 1, 2, 1, 2, GTK_SHRINK, GTK_SHRINK, 0, 0);
   table_buttons->attach(*button_zufall, 1, 2, 3, 4, GTK_SHRINK, GTK_SHRINK, 0, 0);
   table_buttons->attach(*button_load, 1, 2, 4, 5, GTK_SHRINK, GTK_SHRINK, 0, 0);
   table_buttons->attach(*label645, 2, 3, 6, 7, GTK_FILL, 0, 0, 0);
   table_buttons->attach(*hseparator23, 0, 4, 5, 6, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_EXPAND|GTK_SHRINK|GTK_FILL, 0, 5);
   table_buttons->attach(*label646, 0, 1, 1, 2, GTK_EXPAND|GTK_SHRINK|GTK_FILL, 0, 0, 0);
   table_buttons->attach(*label647, 3, 4, 1, 2, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_SHRINK, 0, 0);
   table_buttons->attach(*hseparator24, 0, 4, 0, 1, GTK_SHRINK|GTK_FILL, GTK_EXPAND|GTK_SHRINK|GTK_FILL, 0, 5);
   vbox67->pack_start(*hbox100, false, false, 0);
   vbox67->pack_start(*table_buttons, false, false, 0);
   BegruessungsWindow->set_title("MAGUS-Startfenster");
   BegruessungsWindow->set_modal(true);
   BegruessungsWindow->set_position(GTK_WIN_POS_CENTER);
   BegruessungsWindow->set_policy(true, true, true);
   BegruessungsWindow->add_accel_group(*(_data->getAccelGroup()));
   BegruessungsWindow->add(*vbox67);
   pixmap178->show();
   pixmap179->show();
   pixmap180->show();
   hbox100->show();
   label641->show();
   label642->show();
   label643->show();
   label644->show();
   pixmap182->show();
   button_eingabe->show();
   pixmap181->show();
   button_neu->show();
   pixmap186->show();
   button_zufall->show();
   pixmap184->show();
   button_load->show();
   label645->show();
   hseparator23->show();
   label646->show();
   label647->show();
   hseparator24->show();
   table_buttons->show();
   vbox67->show();
   BegruessungsWindow->show();
   button_eingabe->clicked.connect(SigC::slot(this, &BegruessungsWindow_glade::on_button_eingabe_clicked));
   button_neu->clicked.connect(SigC::slot(this, &BegruessungsWindow_glade::on_button_neu_clicked));
   button_zufall->clicked.connect(SigC::slot(this, &BegruessungsWindow_glade::on_button_zufall_clicked));
   button_load->clicked.connect(SigC::slot(this, &BegruessungsWindow_glade::on_button_load_clicked));
}

BegruessungsWindow_glade::~BegruessungsWindow_glade()
{  delete _data;
}
