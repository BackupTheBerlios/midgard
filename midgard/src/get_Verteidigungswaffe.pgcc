/*  Midgard Character Generator
 *  Copyright (C) 2001 Malte Thoma
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include "midgard_CG.hh"
#include <Aux/SQLerror.h>
exec sql include sqlca;


std::string midgard_CG::get_Verteidigungswaffe(int ohne_waffe)
{
   exec sql begin declare section;
      char db_waffe[30], db_art[30];
   exec sql end declare section;
   std::vector<H_Data_waffen> Verteidigungswaffen;
   Verteidigungswaffen.push_back(new Data_waffen("waffenloser Kampf","waffenloser Kampf","",0,0,""));
   for (std::vector<H_Data_waffen>::const_iterator i=vec_Waffen_besitz.begin();
         i!=vec_Waffen_besitz.end();++i)
     {
       strncpy(db_waffe,((*i)->Name()).c_str(),sizeof(db_waffe));
       exec sql select art into :db_art from waffen where name = :db_waffe;
       SQLerror::test(__FILELINE__);
       std::string art = db_art;
       if (art=="Verteidigung" || (*i)->Name()=="Kampfstab" || (*i)->Name()=="Sai" ||
          (*i)->Name()=="Tonfa" || (*i)->Name()=="GunSen" || (*i)->Name()=="BuKasa" || 
          (*i)->Name()=="KusariGama" || (*i)->Name()=="TetsuBo" ) 
         Verteidigungswaffen.push_back(new Data_waffen((*i)->Name(),(*i)->Name(),(*i)->Region(),(*i)->av_Bonus(),(*i)->sl_Bonus(),""));
     }
   std::string Vwaffewert;
//std::cout << Vwaffewert<<"\n";
   for(std::vector<H_Data_waffen>::const_iterator i=Verteidigungswaffen.begin();
         i!=Verteidigungswaffen.end();++i)
     {
      std::vector<int> vwert;
      for (std::vector<H_Data_waffen>::const_iterator j=vec_Waffen.begin();
            j!=vec_Waffen.end();++j)      
         {
            if ((*i)->Name() == (*j)->Name()) 
               { 
                 int erf_wert;
                 if ((*i)->Name()=="Kampfstab"||(*i)->Name()=="Sai"||(*i)->Name()=="Tonfa"||(*i)->Name()=="KusariGama") 
                  {erf_wert = (*j)->Erfolgswert()-5; (erf_wert<=7)?:erf_wert=7; }
                 else if ((*i)->Name()=="TetsuBo")
                  {erf_wert = (*j)->Erfolgswert()-7; (erf_wert<=7)?:erf_wert=7; }
                 else if ((*i)->Name()=="GunSen"||(*i)->Name()=="BuKasa")
                  {erf_wert = (*j)->Erfolgswert(); (erf_wert<=10)?:erf_wert=10; }
                 else if ((*i)->Name()=="waffenloser Kampf")
                  {if ( (*j)->Erfolgswert()<8)                     erf_wert = 0;
                   if ( 8<=(*j)->Erfolgswert()&&(*j)->Erfolgswert()<12) erf_wert = 1;
                   if (12<=(*j)->Erfolgswert()&&(*j)->Erfolgswert()<16) erf_wert = 2;
                   if (16<=(*j)->Erfolgswert())                    erf_wert = 3;
                  }
                 else erf_wert = (*j)->Erfolgswert();
                 int ewert = werte.abwehr_wert+werte.bo_ab // Grundwerte
                           + erf_wert + (*i)->av_Bonus() ;// Waffenwerte
                 Vwaffewert += itos(ewert);
               }
         }
       if (i+1!=Verteidigungswaffen.end() && Vwaffewert!="") Vwaffewert += "$|$"; 
     }
   return Vwaffewert;
}
