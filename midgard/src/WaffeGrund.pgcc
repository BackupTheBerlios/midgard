#include "WaffeGrund.hh"
#include "midgard_CG.hh"
#include <Aux/SQLerror.h>
#include <Aux/Transaction.h>
#include "Typen.hh"
exec sql include sqlca;

cH_WaffeGrund::cache_t cH_WaffeGrund::cache;

cH_WaffeGrund::cH_WaffeGrund(const std::string& name)
{
 cH_WaffeGrund *cached(cache.lookup(name));
 if (cached) *this=*cached;
 else
  {
   *this=cH_WaffeGrund(new WaffeGrund(name));  
   cache.Register(name,*this);
  }
}

void WaffeGrund::get_WaffeGrund()
{
  exec sql begin declare section;
   int db_kosten;
   char query[1024],db_region[10];
  exec sql end declare section; 
  std::string squery ="select fp,coalesce(region,'')
      from waffen_grund where name = '"+Name()+"'";
  strncpy(query,squery.c_str(),sizeof(query));
  Transaction tr;
  exec sql prepare cl_waffeng_ein_ from :query ;
  exec sql declare cl_waffeng_ein cursor for cl_waffeng_ein_ ;

  exec sql open cl_waffeng_ein;
  SQLerror::test(__FILELINE__);
  exec sql fetch cl_waffeng_ein into :db_kosten,:db_region;
  SQLerror::test(__FILELINE__);
   kosten=db_kosten;
   region=db_region;

  exec sql close cl_waffeng_ein;
  tr.close();
}

WaffeGrund_All::WaffeGrund_All(Gtk::ProgressBar *progressbar)
{
 exec sql begin declare section;
   char db_name[100];
   int db_size;
 exec sql end declare section;
 exec sql select count(name) into :db_size from waffen_grund;
 exec sql declare WGein cursor for select distinct name from waffen_grund;
 Transaction tr;
 exec sql open WGein;
 SQLerror::test(__FILELINE__);
 double count=0;
 while(true)
  {
   progressbar->set_percentage(count/db_size);
   while(Gtk::Main::events_pending()) Gtk::Main::iteration() ;
   exec sql fetch WGein into :db_name;
   SQLerror::test(__FILELINE__,100);
   if (sqlca.sqlcode) break;
   list_All.push_back(&*(cH_WaffeGrund(db_name)));
   ++count;
  }
 exec sql close WGAein;
 tr.close();
 progressbar->set_percentage(1);
}
