// generated 2001/2/28 7:47:05 CET by thoma@ig23.
// using glademm V0.5_11f_cvs
//
// newer (non customized) versions of this file go to Window_charakter_auswahl.cc_new

// This file is for your program, I won't touch it again!

#include "config.h"
#include "Window_charakter_auswahl.hh"
#include "midgard_CG.hh"
#include <Aux/Transaction.h>
#include <Aux/SQLerror.h>
#include <Gtk_OStream.h>
exec sql include sqlca;


void Window_charakter_auswahl::on_clist_charakter_auswahl_select_row(gint row, gint column, GdkEvent *event)
{   
  string name = clist_charakter_auswahl->get_text(row,0);   
  string version = clist_charakter_auswahl->get_text(row,1);
  if (checkbutton_loeschen->get_active()) 
    {
        Window_charakter_auswahl::charakter_loeschen(name,version);
        Window_charakter_auswahl::show_charakter();
    }  
  else 
    { hauptfenster->select_charakter(name,version);
      destroy();   
    }
}

void Window_charakter_auswahl::charakter_loeschen(const string& name, const string& version)
{
 checkbutton_loeschen->set_active(false);
 exec sql begin declare section;
   char db_name[30], db_version[30];
 exec sql end declare section;
 strncpy(db_name,name.c_str(),sizeof(db_name));   
 strncpy(db_version,version.c_str(),sizeof(db_version));   
 exec sql delete from charaktere 
      where charakter_name = :db_name and version = :db_version;
 SQLerror::test(__FILELINE__);
 exec sql delete from charaktere_fertigkeiten 
      where charakter_name = :db_name and version = :db_version;
 SQLerror::test(__FILELINE__);
}

void Window_charakter_auswahl::on_auswahl_abbruch_clicked()
{   
   destroy();
}

Window_charakter_auswahl::Window_charakter_auswahl(midgard_CG* h)
{
 hauptfenster=h;
 Window_charakter_auswahl::show_charakter();
}

void Window_charakter_auswahl::show_charakter()
{
 clist_charakter_auswahl->clear();
 exec sql begin declare section;
   char db_name[30], db_version[30];
 exec sql end declare section;
 Transaction tr;
 exec sql declare ein cursor for 
   select charakter_name, version from charaktere order by charakter_name;
 exec sql open ein;
 SQLerror::test(__FILELINE__);
 Gtk::OStream os(clist_charakter_auswahl);
 while (true)
   {
    exec sql fetch ein into :db_name, :db_version;
    SQLerror::test(__FILELINE__,100);
    if (sqlca.sqlcode) break;
    os << db_name <<"\t"<< db_version<<"\n";
   }
 exec sql close ein;
 tr.close();
 for (unsigned int i=0;i<clist_charakter_auswahl->columns().size();++i)
    clist_charakter_auswahl->set_column_auto_resize(i,true);
}
