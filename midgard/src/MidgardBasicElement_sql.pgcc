#include "MidgardBasicElement.hh"
#include "Grundwerte.hh"
#include "Ausnahmen.hh"
#include <Aux/SQLerror.h>
#include <Aux/Transaction.h>
exec sql include sqlca;




void MidgardBasicElement::get_map_typ()
{  
 exec sql begin declare section;
   char query[1024], db_typ[10], db_standard[10];
 exec sql end declare section;
 std::string squery;
 if(What()==ZAUBER)
    squery ="select typ,standard from zauber_typen where name ='"+Name()+"'";
 if(What()==ZAUBERWERK)
    squery ="select typ,standard from zauberwerk_typen where name ='"+Name()
             +"' and stufe ='"+Stufe()+"'";
 if(What()==FERTIGKEIT )
    squery ="select typ,standard from fertigkeiten_typen where name ='"+Name()+"'";
 if(What()==WAFFEGRUND)
   {
    std::string name = "Waffen";
    if (Name()=="Peitsche") name="Peitsche";
    if (Name()=="Lasso") name="Lasso";
    if (Name()=="Netz") name="Netz";
    if (Name()=="Bola") name="Bola";
    squery ="select typ,standard from waffen_typen where name ='"+name+"'";
   }
 if(What()==SPRACHE)
    squery ="select typ,standard from fertigkeiten_typen where name ='Sprache'";
 if(What()==SCHRIFT)
    squery ="select typ,standard from fertigkeiten_typen where name ='Lesen/Schreiben'";
 if(What()==KIDO)
    squery ="select typ,standard from fertigkeiten_typen where name ='KiDo'";
 strncpy(query,squery.c_str(),sizeof(query));
 Transaction tr;
 exec sql prepare MBein_ from :query ;
 exec sql declare MBein cursor for MBein_ ;
 exec sql open MBein;
 SQLerror::test(__FILELINE__);
 while(true)
  {
    exec sql fetch MBein into :db_typ,:db_standard;
    SQLerror::test(__FILELINE__,100);
    if (sqlca.sqlcode) break;
    map_typ[db_typ]=db_standard;
  } 
}
 
void MidgardBasicElement::saveElementliste(const std::list<cH_MidgardBasicElement>& b,
                           const Grundwerte& Werte,
                           const vector<H_Data_typen>& Typ,
                           const Ausnahmen& ausnahmen
                           )
{
  if(b.size()==0) return;
/*
    int db_av_bonus,db_sl_bonus;
    char db_region[20];
    char db_wert_str[20];
    char db_magisch[1024];
*/
  exec sql begin declare section;
    char db_name_ch[50], db_version[50];
    char db_fertigkeit[50];
    int db_wert;
    char db_what[30];
  exec sql end declare section;
  strncpy(db_name_ch,Werte.Name_Charakter().c_str(),sizeof(db_name_ch));
  strncpy(db_version,Werte.Version().c_str(),sizeof(db_version));
  strncpy(db_what, ((*b.begin())->What_str()).c_str(),sizeof(db_what));

  for (std::list<cH_MidgardBasicElement>::const_iterator i=b.begin();i!=b.end();++i)
   {
     strncpy(db_fertigkeit, ((*i)->Name()).c_str(),sizeof(db_fertigkeit));
//     db_wert = (*i)->Erfolgswert(Typ,Werte,ausnahmen);
     db_wert = (*i)->Erfolgswert();
     exec sql INSERT INTO charaktere_fertigkeiten
         (charakter_name,version,fertigkeit,wert,art)
       VALUES
         (:db_name_ch,:db_version,:db_fertigkeit,:db_wert,:db_what) ;
     SQLerror::test(__FILELINE__);
   }
}

